"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/test-db/page",{

/***/ "(app-pages-browser)/./src/utils/timeVerification.ts":
/*!***************************************!*\
  !*** ./src/utils/timeVerification.ts ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getVerificationBadgeProps: () => (/* binding */ getVerificationBadgeProps),\n/* harmony export */   updateTimeVerification: () => (/* binding */ updateTimeVerification)\n/* harmony export */ });\n/**\n * ÏãúÍ∞Ñ Í≤ÄÏ¶ù ÏÉÅÌÉúÎ•º ÏóÖÎç∞Ïù¥Ìä∏ÌïòÎäî Ìï®Ïàò\n */ async function updateTimeVerification(timeline, isVerified, notes) {\n    try {\n        console.log('üîÑ ÏãúÍ∞Ñ Í≤ÄÏ¶ù API Ìò∏Ï∂ú ÏãúÏûë:', {\n            timelineId: timeline.id,\n            isVerified,\n            notes,\n            currentState: {\n                isTimeVerified: timeline.isTimeVerified,\n                verifiedBy: timeline.verifiedBy,\n                verifiedAt: timeline.verifiedAt\n            }\n        });\n        const response = await fetch('/api/timeline-parser', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                action: 'update-time-verification',\n                timelineId: timeline.id,\n                isVerified: isVerified,\n                verificationNotes: notes || ''\n            })\n        });\n        const result = await response.json();\n        console.log('üì• API ÏùëÎãµ:', result);\n        if (result.success) {\n            return {\n                success: true,\n                data: {\n                    isTimeVerified: result.data.isTimeVerified,\n                    verifiedBy: result.data.verifiedBy,\n                    verifiedAt: result.data.verifiedAt ? new Date(result.data.verifiedAt).toISOString() : undefined\n                }\n            };\n        } else {\n            return {\n                success: false,\n                error: result.error\n            };\n        }\n    } catch (error) {\n        console.error('ÏãúÍ∞Ñ Í≤ÄÏ¶ù Ïò§Î•ò:', error);\n        return {\n            success: false,\n            error: 'ÏãúÍ∞Ñ Í≤ÄÏ¶ù Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.'\n        };\n    }\n}\n/**\n * Í≤ÄÏ¶ù ÏÉÅÌÉú ÌëúÏãúÏö© Ïª¥Ìè¨ÎÑåÌä∏ Îç∞Ïù¥ÌÑ∞ ÏÉùÏÑ±\n */ function getVerificationBadgeProps(timeline) {\n    if (!timeline.isTimeVerified) {\n        return null;\n    }\n    return {\n        className: \"px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded text-xs flex items-center gap-1\",\n        text: \"Í≤ÄÏ¶ùÏôÑÎ£å\"\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy91dGlscy90aW1lVmVyaWZpY2F0aW9uLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBYUE7O0NBRUMsR0FDTSxlQUFlQSx1QkFDcEJDLFFBQTRCLEVBQzVCQyxVQUFtQixFQUNuQkMsS0FBYztJQVVkLElBQUk7UUFDRkMsUUFBUUMsR0FBRyxDQUFDLHVCQUF1QjtZQUNqQ0MsWUFBWUwsU0FBU00sRUFBRTtZQUN2Qkw7WUFDQUM7WUFDQUssY0FBYztnQkFDWkMsZ0JBQWdCUixTQUFTUSxjQUFjO2dCQUN2Q0MsWUFBWVQsU0FBU1MsVUFBVTtnQkFDL0JDLFlBQVlWLFNBQVNVLFVBQVU7WUFDakM7UUFDRjtRQUVBLE1BQU1DLFdBQVcsTUFBTUMsTUFBTSx3QkFBd0I7WUFDbkRDLFFBQVE7WUFDUkMsU0FBUztnQkFBRSxnQkFBZ0I7WUFBbUI7WUFDOUNDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztnQkFDbkJDLFFBQVE7Z0JBQ1JiLFlBQVlMLFNBQVNNLEVBQUU7Z0JBQ3ZCTCxZQUFZQTtnQkFDWmtCLG1CQUFtQmpCLFNBQVM7WUFDOUI7UUFDRjtRQUVBLE1BQU1rQixTQUFTLE1BQU1ULFNBQVNVLElBQUk7UUFDbENsQixRQUFRQyxHQUFHLENBQUMsY0FBY2dCO1FBRTFCLElBQUlBLE9BQU9FLE9BQU8sRUFBRTtZQUNsQixPQUFPO2dCQUNMQSxTQUFTO2dCQUNUQyxNQUFNO29CQUNKZixnQkFBZ0JZLE9BQU9HLElBQUksQ0FBQ2YsY0FBYztvQkFDMUNDLFlBQVlXLE9BQU9HLElBQUksQ0FBQ2QsVUFBVTtvQkFDbENDLFlBQVlVLE9BQU9HLElBQUksQ0FBQ2IsVUFBVSxHQUFHLElBQUljLEtBQUtKLE9BQU9HLElBQUksQ0FBQ2IsVUFBVSxFQUFFZSxXQUFXLEtBQUtDO2dCQUN4RjtZQUNGO1FBQ0YsT0FBTztZQUNMLE9BQU87Z0JBQ0xKLFNBQVM7Z0JBQ1RLLE9BQU9QLE9BQU9PLEtBQUs7WUFDckI7UUFDRjtJQUNGLEVBQUUsT0FBT0EsT0FBTztRQUNkeEIsUUFBUXdCLEtBQUssQ0FBQyxhQUFhQTtRQUMzQixPQUFPO1lBQ0xMLFNBQVM7WUFDVEssT0FBTztRQUNUO0lBQ0Y7QUFDRjtBQUVBOztDQUVDLEdBQ00sU0FBU0MsMEJBQTBCNUIsUUFBNEI7SUFDcEUsSUFBSSxDQUFDQSxTQUFTUSxjQUFjLEVBQUU7UUFDNUIsT0FBTztJQUNUO0lBRUEsT0FBTztRQUNMcUIsV0FBVztRQUNYQyxNQUFNO0lBQ1I7QUFDRiIsInNvdXJjZXMiOlsiL21udC9mL2RhdGEvZ2l0L2NsYXVkZS1jb2RlL2F5YXVrZS1wYWdlL2F5YXVrZS1wYWdlL3NyYy91dGlscy90aW1lVmVyaWZpY2F0aW9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImludGVyZmFjZSBQYXJzZWRUaW1lbGluZUl0ZW0ge1xuICBpZDogc3RyaW5nO1xuICBhcnRpc3Q6IHN0cmluZztcbiAgc29uZ1RpdGxlOiBzdHJpbmc7XG4gIHN0YXJ0VGltZVNlY29uZHM6IG51bWJlcjtcbiAgZW5kVGltZVNlY29uZHM/OiBudW1iZXI7XG4gIC8vIOyImOuPmSDqsoDspp0g6rSA66CoIO2VhOuTnFxuICBpc1RpbWVWZXJpZmllZD86IGJvb2xlYW47XG4gIHZlcmlmaWVkQnk/OiBzdHJpbmc7XG4gIHZlcmlmaWVkQXQ/OiBzdHJpbmc7XG4gIHZlcmlmaWNhdGlvbk5vdGVzPzogc3RyaW5nO1xufVxuXG4vKipcbiAqIOyLnOqwhCDqsoDspp0g7IOB7YOc66W8IOyXheuNsOydtO2KuO2VmOuKlCDtlajsiJhcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZVRpbWVWZXJpZmljYXRpb24oXG4gIHRpbWVsaW5lOiBQYXJzZWRUaW1lbGluZUl0ZW0sIFxuICBpc1ZlcmlmaWVkOiBib29sZWFuLCBcbiAgbm90ZXM/OiBzdHJpbmdcbik6IFByb21pc2U8e1xuICBzdWNjZXNzOiBib29sZWFuO1xuICBkYXRhPzoge1xuICAgIGlzVGltZVZlcmlmaWVkOiBib29sZWFuO1xuICAgIHZlcmlmaWVkQnk/OiBzdHJpbmc7XG4gICAgdmVyaWZpZWRBdD86IHN0cmluZztcbiAgfTtcbiAgZXJyb3I/OiBzdHJpbmc7XG59PiB7XG4gIHRyeSB7XG4gICAgY29uc29sZS5sb2coJ/CflIQg7Iuc6rCEIOqygOymnSBBUEkg7Zi47LacIOyLnOyekTonLCB7XG4gICAgICB0aW1lbGluZUlkOiB0aW1lbGluZS5pZCxcbiAgICAgIGlzVmVyaWZpZWQsXG4gICAgICBub3RlcyxcbiAgICAgIGN1cnJlbnRTdGF0ZToge1xuICAgICAgICBpc1RpbWVWZXJpZmllZDogdGltZWxpbmUuaXNUaW1lVmVyaWZpZWQsXG4gICAgICAgIHZlcmlmaWVkQnk6IHRpbWVsaW5lLnZlcmlmaWVkQnksXG4gICAgICAgIHZlcmlmaWVkQXQ6IHRpbWVsaW5lLnZlcmlmaWVkQXRcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvdGltZWxpbmUtcGFyc2VyJywge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgYWN0aW9uOiAndXBkYXRlLXRpbWUtdmVyaWZpY2F0aW9uJyxcbiAgICAgICAgdGltZWxpbmVJZDogdGltZWxpbmUuaWQsXG4gICAgICAgIGlzVmVyaWZpZWQ6IGlzVmVyaWZpZWQsXG4gICAgICAgIHZlcmlmaWNhdGlvbk5vdGVzOiBub3RlcyB8fCAnJ1xuICAgICAgfSlcbiAgICB9KTtcblxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICBjb25zb2xlLmxvZygn8J+TpSBBUEkg7J2R64u1OicsIHJlc3VsdCk7XG4gICAgXG4gICAgaWYgKHJlc3VsdC5zdWNjZXNzKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgaXNUaW1lVmVyaWZpZWQ6IHJlc3VsdC5kYXRhLmlzVGltZVZlcmlmaWVkLFxuICAgICAgICAgIHZlcmlmaWVkQnk6IHJlc3VsdC5kYXRhLnZlcmlmaWVkQnksXG4gICAgICAgICAgdmVyaWZpZWRBdDogcmVzdWx0LmRhdGEudmVyaWZpZWRBdCA/IG5ldyBEYXRlKHJlc3VsdC5kYXRhLnZlcmlmaWVkQXQpLnRvSVNPU3RyaW5nKCkgOiB1bmRlZmluZWRcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIGVycm9yOiByZXN1bHQuZXJyb3JcbiAgICAgIH07XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+yLnOqwhCDqsoDspp0g7Jik66WYOicsIGVycm9yKTtcbiAgICByZXR1cm4ge1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBlcnJvcjogJ+yLnOqwhCDqsoDspp0g7KSRIOyYpOulmOqwgCDrsJzsg53tlojsirXri4jri6QuJ1xuICAgIH07XG4gIH1cbn1cblxuLyoqXG4gKiDqsoDspp0g7IOB7YOcIO2RnOyLnOyaqSDsu7Ttj6zrhIztirgg642w7J207YSwIOyDneyEsVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0VmVyaWZpY2F0aW9uQmFkZ2VQcm9wcyh0aW1lbGluZTogUGFyc2VkVGltZWxpbmVJdGVtKSB7XG4gIGlmICghdGltZWxpbmUuaXNUaW1lVmVyaWZpZWQpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgY2xhc3NOYW1lOiBcInB4LTIgcHktMC41IGJnLWJsdWUtMTAwIGRhcms6YmctYmx1ZS05MDAvMzAgdGV4dC1ibHVlLTcwMCBkYXJrOnRleHQtYmx1ZS0zMDAgcm91bmRlZCB0ZXh0LXhzIGZsZXggaXRlbXMtY2VudGVyIGdhcC0xXCIsXG4gICAgdGV4dDogXCLqsoDspp3smYTro4xcIlxuICB9O1xufSJdLCJuYW1lcyI6WyJ1cGRhdGVUaW1lVmVyaWZpY2F0aW9uIiwidGltZWxpbmUiLCJpc1ZlcmlmaWVkIiwibm90ZXMiLCJjb25zb2xlIiwibG9nIiwidGltZWxpbmVJZCIsImlkIiwiY3VycmVudFN0YXRlIiwiaXNUaW1lVmVyaWZpZWQiLCJ2ZXJpZmllZEJ5IiwidmVyaWZpZWRBdCIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJhY3Rpb24iLCJ2ZXJpZmljYXRpb25Ob3RlcyIsInJlc3VsdCIsImpzb24iLCJzdWNjZXNzIiwiZGF0YSIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsInVuZGVmaW5lZCIsImVycm9yIiwiZ2V0VmVyaWZpY2F0aW9uQmFkZ2VQcm9wcyIsImNsYXNzTmFtZSIsInRleHQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/timeVerification.ts\n"));

/***/ })

});