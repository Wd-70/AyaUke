/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/timeline-parser/route";
exports.ids = ["app/api/timeline-parser/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ftimeline-parser%2Froute&page=%2Fapi%2Ftimeline-parser%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftimeline-parser%2Froute.ts&appDir=%2Fmnt%2Ff%2FData%2FGit%2Fclaude-code%2Fayauke-page%2Fayauke-page%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fmnt%2Ff%2FData%2FGit%2Fclaude-code%2Fayauke-page%2Fayauke-page&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ftimeline-parser%2Froute&page=%2Fapi%2Ftimeline-parser%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftimeline-parser%2Froute.ts&appDir=%2Fmnt%2Ff%2FData%2FGit%2Fclaude-code%2Fayauke-page%2Fayauke-page%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fmnt%2Ff%2FData%2FGit%2Fclaude-code%2Fayauke-page%2Fayauke-page&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mnt_f_Data_Git_claude_code_ayauke_page_ayauke_page_src_app_api_timeline_parser_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/timeline-parser/route.ts */ \"(rsc)/./src/app/api/timeline-parser/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/timeline-parser/route\",\n        pathname: \"/api/timeline-parser\",\n        filename: \"route\",\n        bundlePath: \"app/api/timeline-parser/route\"\n    },\n    resolvedPagePath: \"/mnt/f/Data/Git/claude-code/ayauke-page/ayauke-page/src/app/api/timeline-parser/route.ts\",\n    nextConfigOutput,\n    userland: _mnt_f_Data_Git_claude_code_ayauke_page_ayauke_page_src_app_api_timeline_parser_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZ0aW1lbGluZS1wYXJzZXIlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnRpbWVsaW5lLXBhcnNlciUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnRpbWVsaW5lLXBhcnNlciUyRnJvdXRlLnRzJmFwcERpcj0lMkZtbnQlMkZmJTJGRGF0YSUyRkdpdCUyRmNsYXVkZS1jb2RlJTJGYXlhdWtlLXBhZ2UlMkZheWF1a2UtcGFnZSUyRnNyYyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGbW50JTJGZiUyRkRhdGElMkZHaXQlMkZjbGF1ZGUtY29kZSUyRmF5YXVrZS1wYWdlJTJGYXlhdWtlLXBhZ2UmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ3FCO0FBQ3dDO0FBQ3JIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5R0FBbUI7QUFDM0M7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQXNEO0FBQzlEO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzBGOztBQUUxRiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvbW50L2YvRGF0YS9HaXQvY2xhdWRlLWNvZGUvYXlhdWtlLXBhZ2UvYXlhdWtlLXBhZ2Uvc3JjL2FwcC9hcGkvdGltZWxpbmUtcGFyc2VyL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS90aW1lbGluZS1wYXJzZXIvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS90aW1lbGluZS1wYXJzZXJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3RpbWVsaW5lLXBhcnNlci9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9tbnQvZi9EYXRhL0dpdC9jbGF1ZGUtY29kZS9heWF1a2UtcGFnZS9heWF1a2UtcGFnZS9zcmMvYXBwL2FwaS90aW1lbGluZS1wYXJzZXIvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICB3b3JrQXN5bmNTdG9yYWdlLFxuICAgICAgICB3b3JrVW5pdEFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ftimeline-parser%2Froute&page=%2Fapi%2Ftimeline-parser%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftimeline-parser%2Froute.ts&appDir=%2Fmnt%2Ff%2FData%2FGit%2Fclaude-code%2Fayauke-page%2Fayauke-page%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fmnt%2Ff%2FData%2FGit%2Fclaude-code%2Fayauke-page%2Fayauke-page&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/timeline-parser/route.ts":
/*!**********************************************!*\
  !*** ./src/app/api/timeline-parser/route.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/next */ \"(rsc)/./node_modules/next-auth/next/index.js\");\n/* harmony import */ var _lib_authOptions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/authOptions */ \"(rsc)/./src/lib/authOptions.ts\");\n/* harmony import */ var _lib_permissions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/permissions */ \"(rsc)/./src/lib/permissions.ts\");\n/* harmony import */ var _lib_mongodb__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/mongodb */ \"(rsc)/./src/lib/mongodb.ts\");\n/* harmony import */ var _models_YouTubeComment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/models/YouTubeComment */ \"(rsc)/./src/models/YouTubeComment.ts\");\n/* harmony import */ var _models_SongDetail__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/models/SongDetail */ \"(rsc)/./src/models/SongDetail.ts\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_7__);\n\n\n\n\n\n\n\n\n// 파싱된 타임라인 데이터를 위한 MongoDB 스키마\nconst ParsedTimelineSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_7___default().Schema)({\n    id: {\n        type: String,\n        required: true,\n        unique: true\n    },\n    videoId: {\n        type: String,\n        required: true\n    },\n    videoTitle: {\n        type: String,\n        required: true\n    },\n    uploadedDate: {\n        type: Date,\n        required: true\n    },\n    videoPublishedAt: {\n        type: Date\n    },\n    originalDateString: {\n        type: String\n    },\n    artist: {\n        type: String,\n        required: true\n    },\n    songTitle: {\n        type: String,\n        required: true\n    },\n    videoUrl: {\n        type: String,\n        required: true\n    },\n    startTimeSeconds: {\n        type: Number,\n        required: true\n    },\n    endTimeSeconds: {\n        type: Number\n    },\n    duration: {\n        type: Number\n    },\n    isRelevant: {\n        type: Boolean,\n        default: true\n    },\n    isExcluded: {\n        type: Boolean,\n        default: false\n    },\n    matchedSong: {\n        songId: {\n            type: String\n        },\n        title: {\n            type: String\n        },\n        artist: {\n            type: String\n        },\n        confidence: {\n            type: Number\n        }\n    },\n    originalComment: {\n        type: String,\n        required: true\n    },\n    commentAuthor: {\n        type: String,\n        required: true\n    },\n    commentId: {\n        type: String,\n        required: true\n    },\n    commentPublishedAt: {\n        type: Date\n    },\n    // 수동 검증 관련 필드\n    isTimeVerified: {\n        type: Boolean,\n        default: false\n    },\n    verifiedBy: {\n        type: String\n    },\n    verifiedAt: {\n        type: Date\n    },\n    verificationNotes: {\n        type: String\n    },\n    customDescription: {\n        type: String\n    },\n    specialTags: [\n        {\n            type: String\n        }\n    ],\n    createdAt: {\n        type: Date,\n        default: Date.now\n    },\n    updatedAt: {\n        type: Date,\n        default: Date.now\n    }\n}, {\n    // 스키마 옵션\n    strict: true,\n    timestamps: false,\n    versionKey: false // __v 필드 제거\n});\n// 기존 모델이 있다면 삭제 후 재생성 (개발 환경에서만)\nif ((mongoose__WEBPACK_IMPORTED_MODULE_7___default().models).ParsedTimeline) {\n    delete (mongoose__WEBPACK_IMPORTED_MODULE_7___default().models).ParsedTimeline;\n}\nconst ParsedTimeline = mongoose__WEBPACK_IMPORTED_MODULE_7___default().model('ParsedTimeline', ParsedTimelineSchema);\n// 텍스트 정규화 함수 (공백/특수문자 제거, 소문자 변환)\nfunction normalizeText(text) {\n    return text.toLowerCase().trim().replace(/\\s+/g, '') // 모든 공백 제거\n    .replace(/[-_.,!?()[\\]{}]/g, '') // 기본 구두점만 제거\n    .replace(/[^\\w가-힣]/g, ''); // 한글, 영문, 숫자만 유지\n}\n// Levenshtein distance 계산\nfunction levenshteinDistance(str1, str2) {\n    const matrix = [];\n    for(let i = 0; i <= str2.length; i++){\n        matrix[i] = [\n            i\n        ];\n    }\n    for(let j = 0; j <= str1.length; j++){\n        matrix[0][j] = j;\n    }\n    for(let i = 1; i <= str2.length; i++){\n        for(let j = 1; j <= str1.length; j++){\n            if (str2.charAt(i - 1) === str1.charAt(j - 1)) {\n                matrix[i][j] = matrix[i - 1][j - 1];\n            } else {\n                matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1, matrix[i][j - 1] + 1, matrix[i - 1][j] + 1 // deletion\n                );\n            }\n        }\n    }\n    return matrix[str2.length][str1.length];\n}\n// 개선된 문자열 유사도 계산\nfunction calculateSimilarity(str1, str2) {\n    if (!str1 || !str2) return 0;\n    const s1 = str1.toLowerCase().trim();\n    const s2 = str2.toLowerCase().trim();\n    if (s1 === s2) return 1;\n    // 1. 포함 관계 체크 (높은 점수)\n    if (s1.includes(s2) || s2.includes(s1)) {\n        const longer = s1.length > s2.length ? s1 : s2;\n        const shorter = s1.length > s2.length ? s2 : s1;\n        return 0.8 + shorter.length / longer.length * 0.2; // 0.8~1.0\n    }\n    // 2. 공통 부분 문자열 찾기\n    let commonLength = 0;\n    const minLen = Math.min(s1.length, s2.length);\n    // 시작 부분 공통 문자열\n    for(let i = 0; i < minLen; i++){\n        if (s1[i] === s2[i]) {\n            commonLength++;\n        } else {\n            break;\n        }\n    }\n    // 끝 부분 공통 문자열\n    for(let i = 1; i <= minLen - commonLength; i++){\n        if (s1[s1.length - i] === s2[s2.length - i]) {\n            commonLength++;\n        } else {\n            break;\n        }\n    }\n    if (commonLength > 0) {\n        const maxLen = Math.max(s1.length, s2.length);\n        const similarity = commonLength / maxLen;\n        if (similarity >= 0.3) return similarity;\n    }\n    // 3. Levenshtein distance 기반 계산\n    const maxLen = Math.max(s1.length, s2.length);\n    if (maxLen === 0) return 1;\n    const distance = levenshteinDistance(s1, s2);\n    return Math.max(0, (maxLen - distance) / maxLen);\n}\n// 아티스트 검색 (아티스트, artistAlias, searchTags)\nfunction searchInArtistFields(song, normalizedQuery) {\n    const fields = [\n        song.artist,\n        song.artistAlias,\n        ...song.searchTags || []\n    ].filter(Boolean);\n    let maxSimilarity = 0;\n    let exactMatch = false;\n    for (const field of fields){\n        const normalizedField = normalizeText(field);\n        // 1. 완전 일치 체크\n        if (normalizedField === normalizedQuery) {\n            exactMatch = true;\n            maxSimilarity = 1.0;\n            break;\n        }\n        // 2. 포함 관계 체크 (양방향)\n        if (normalizedField.includes(normalizedQuery) || normalizedQuery.includes(normalizedField)) {\n            maxSimilarity = Math.max(maxSimilarity, 0.8);\n        }\n        // 3. 유사도 계산\n        const similarity = calculateSimilarity(normalizedQuery, normalizedField);\n        maxSimilarity = Math.max(maxSimilarity, similarity);\n        // 4. 짧은 문자열 특별 처리 (3글자 이하)\n        if (normalizedQuery.length <= 3 || normalizedField.length <= 3) {\n            if (normalizedField.includes(normalizedQuery) || normalizedQuery.includes(normalizedField)) {\n                maxSimilarity = Math.max(maxSimilarity, 0.7);\n            }\n        }\n    }\n    return maxSimilarity;\n}\n// 제목 검색 (title, titleAlias, searchTags)\nfunction searchInTitleFields(song, normalizedQuery) {\n    const fields = [\n        song.title,\n        song.titleAlias,\n        ...song.searchTags || []\n    ].filter(Boolean);\n    let maxSimilarity = 0;\n    let exactMatch = false;\n    for (const field of fields){\n        const normalizedField = normalizeText(field);\n        // 1. 완전 일치 체크\n        if (normalizedField === normalizedQuery) {\n            exactMatch = true;\n            maxSimilarity = 1.0;\n            break;\n        }\n        // 2. 포함 관계 체크 (양방향)\n        if (normalizedField.includes(normalizedQuery) || normalizedQuery.includes(normalizedField)) {\n            maxSimilarity = Math.max(maxSimilarity, 0.8);\n        }\n        // 3. 유사도 계산\n        const similarity = calculateSimilarity(normalizedQuery, normalizedField);\n        maxSimilarity = Math.max(maxSimilarity, similarity);\n        // 4. 짧은 문자열 특별 처리 (3글자 이하)\n        if (normalizedQuery.length <= 3 || normalizedField.length <= 3) {\n            if (normalizedField.includes(normalizedQuery) || normalizedQuery.includes(normalizedField)) {\n                maxSimilarity = Math.max(maxSimilarity, 0.7);\n            }\n        }\n    }\n    return maxSimilarity;\n}\n// 캐시된 곡 데이터를 사용한 매칭 함수 (DB 요청 최소화)\nfunction matchTimelineWithSongsFromCache(artist, title, allSongs) {\n    const normalizedArtist = normalizeText(artist);\n    const normalizedTitle = normalizeText(title);\n    console.log(`🔍 캐시 검색: \"${artist}\" - \"${title}\"`);\n    const candidates = [];\n    let processedCount = 0;\n    for (const song of allSongs){\n        const artistSimilarity = searchInArtistFields(song, normalizedArtist);\n        const titleSimilarity = searchInTitleFields(song, normalizedTitle);\n        // 전체 일치율 = (아티스트 유사도 + 제목 유사도) / 2\n        const overallSimilarity = (artistSimilarity + titleSimilarity) / 2;\n        // 높은 유사도 결과만 로그\n        if (overallSimilarity > 0.3) {\n            console.log(`🎯 매치: \"${song.artist}\" - \"${song.title}\" (${(overallSimilarity * 100).toFixed(1)}%)`);\n        }\n        // 최소 임계값 이상인 경우만 후보로 추가\n        if (overallSimilarity > 0.1) {\n            candidates.push({\n                song,\n                artistSimilarity,\n                titleSimilarity,\n                overallSimilarity,\n                isExactMatch: overallSimilarity >= 0.95\n            });\n        }\n        processedCount++;\n    }\n    console.log(`✅ 캐시 검색 완료: ${candidates.length}개 후보 발견`);\n    // 일치율 순으로 정렬\n    candidates.sort((a, b)=>b.overallSimilarity - a.overallSimilarity);\n    return candidates.slice(0, 10); // 상위 10개만 반환\n}\n// 타임라인 데이터와 노래 DB 매칭\nasync function matchTimelineWithSongs(artist, title) {\n    await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_4__[\"default\"])();\n    const normalizedArtist = normalizeText(artist);\n    const normalizedTitle = normalizeText(title);\n    // 기본 로그만 유지\n    console.log(`🔍 검색 시작: \"${artist}\" - \"${title}\"`);\n    // 모든 곡 또는 활성+상태없는 곡 가져오기\n    let allSongs = await _models_SongDetail__WEBPACK_IMPORTED_MODULE_6__[\"default\"].find({\n        $or: [\n            {\n                status: 'active'\n            },\n            {\n                status: {\n                    $exists: false\n                }\n            },\n            {\n                status: null\n            }\n        ]\n    }).lean();\n    // 검색 대상이 적다면 모든 곡을 대상으로 검색\n    if (allSongs.length < 100) {\n        allSongs = await _models_SongDetail__WEBPACK_IMPORTED_MODULE_6__[\"default\"].find({}).lean();\n    }\n    console.log(`🔍 검색 대상 곡 수: ${allSongs.length}개`);\n    const candidates = [];\n    let processedCount = 0;\n    for (const song of allSongs){\n        const artistSimilarity = searchInArtistFields(song, normalizedArtist);\n        const titleSimilarity = searchInTitleFields(song, normalizedTitle);\n        // 전체 일치율 = (아티스트 유사도 + 제목 유사도) / 2\n        const overallSimilarity = (artistSimilarity + titleSimilarity) / 2;\n        // 높은 유사도 결과만 로그\n        if (overallSimilarity > 0.3) {\n            console.log(`🎯 매치: \"${song.artist}\" - \"${song.title}\" (${(overallSimilarity * 100).toFixed(1)}%)`);\n        }\n        // 최소 임계값 이상인 경우만 후보로 추가 (임계값 낮춤)\n        if (overallSimilarity > 0.1) {\n            candidates.push({\n                song,\n                artistSimilarity,\n                titleSimilarity,\n                overallSimilarity,\n                isExactMatch: overallSimilarity >= 0.95\n            });\n        }\n        processedCount++;\n    }\n    console.log(`✅ 검색 완료: ${candidates.length}개 후보 발견`);\n    // 일치율 순으로 정렬\n    candidates.sort((a, b)=>b.overallSimilarity - a.overallSimilarity);\n    return candidates.slice(0, 10); // 상위 10개만 반환\n}\n// 시간 파라미터를 초로 변환하는 함수 (콜론 형태 우선 처리)\nfunction parseTimeToSeconds(timeParam) {\n    // 콜론 형태 처리 (최우선)\n    // h:m:s 형식 (예: 1:23:45)\n    const colonHmsMatch = timeParam.match(/^(\\d{1,2}):(\\d{2}):(\\d{2})$/);\n    if (colonHmsMatch) {\n        const hours = parseInt(colonHmsMatch[1]);\n        const minutes = parseInt(colonHmsMatch[2]);\n        const seconds = parseInt(colonHmsMatch[3]);\n        return hours * 3600 + minutes * 60 + seconds;\n    }\n    // m:s 형식 (예: 23:45)\n    const colonMsMatch = timeParam.match(/^(\\d{1,2}):(\\d{2})$/);\n    if (colonMsMatch) {\n        const minutes = parseInt(colonMsMatch[1]);\n        const seconds = parseInt(colonMsMatch[2]);\n        return minutes * 60 + seconds;\n    }\n    // 숫자만 있는 경우 (초)\n    if (/^\\d+$/.test(timeParam)) {\n        return parseInt(timeParam);\n    }\n    // h:m:s 형식 (예: 1h23m45s)\n    const hmsMatch = timeParam.match(/(\\d+)h(\\d+)m(\\d+)s/);\n    if (hmsMatch) {\n        const hours = parseInt(hmsMatch[1]);\n        const minutes = parseInt(hmsMatch[2]);\n        const seconds = parseInt(hmsMatch[3]);\n        return hours * 3600 + minutes * 60 + seconds;\n    }\n    // m:s 형식 (예: 23m45s)\n    const msMatch = timeParam.match(/(\\d+)m(\\d+)s/);\n    if (msMatch) {\n        const minutes = parseInt(msMatch[1]);\n        const seconds = parseInt(msMatch[2]);\n        return minutes * 60 + seconds;\n    }\n    // h:m 형식 (예: 1h23m)\n    const hmMatch = timeParam.match(/(\\d+)h(\\d+)m/);\n    if (hmMatch) {\n        const hours = parseInt(hmMatch[1]);\n        const minutes = parseInt(hmMatch[2]);\n        return hours * 3600 + minutes * 60;\n    }\n    // m 형식 (예: 23m)\n    const mMatch = timeParam.match(/(\\d+)m/);\n    if (mMatch) {\n        const minutes = parseInt(mMatch[1]);\n        return minutes * 60;\n    }\n    // s 형식 (예: 45s)\n    const sMatch = timeParam.match(/(\\d+)s/);\n    if (sMatch) {\n        return parseInt(sMatch[1]);\n    }\n    return 0;\n}\n// 개선된 HTML 엔티티 디코딩 함수\nfunction decodeHtmlEntities(text) {\n    // 기본 HTML 엔티티 매핑\n    const namedEntities = {\n        '&amp;': '&',\n        '&lt;': '<',\n        '&gt;': '>',\n        '&quot;': '\"',\n        '&apos;': \"'\",\n        '&nbsp;': ' ',\n        '&copy;': '©',\n        '&reg;': '®',\n        '&trade;': '™'\n    };\n    return text// 1. 숫자 형태의 HTML 엔티티 디코딩 (&#39; → ')\n    .replace(/&#(\\d+);/g, (match, code)=>{\n        try {\n            return String.fromCharCode(parseInt(code, 10));\n        } catch (e) {\n            return match; // 변환 실패 시 원본 반환\n        }\n    })// 2. 16진수 형태의 HTML 엔티티 디코딩 (&#x27; → ')\n    .replace(/&#x([0-9a-fA-F]+);/g, (match, code)=>{\n        try {\n            return String.fromCharCode(parseInt(code, 16));\n        } catch (e) {\n            return match; // 변환 실패 시 원본 반환\n        }\n    })// 3. 이름 기반 HTML 엔티티 디코딩\n    .replace(/&[a-zA-Z][a-zA-Z0-9]*;/g, (entity)=>{\n        return namedEntities[entity] || entity;\n    });\n}\n// 음악 컨텐츠 여부 판단 함수 (모든 것 포함)\nfunction isMusicContent(text) {\n    // 완전히 빈 텍스트나 의미없는 기호만 제외\n    if (!text || text.trim() === '' || /^[?!.~\\s]*$/.test(text)) {\n        return false;\n    }\n    // 그 외 모든 내용 포함\n    return true;\n}\n// 범용 타임라인 파싱 함수 - 모든 타임스탬프 패턴을 캐치\nfunction splitCommentByTimestamps(decodedHtml) {\n    console.log('🔍 범용 타임라인 파싱 시작...');\n    const results = [];\n    let baseVideoUrl = '';\n    // 첫 번째 유튜브 링크에서 기본 URL 추출\n    const linkMatch = decodedHtml.match(/<a[^>]*href=\"([^\"]*youtube[^\"]*)\"[^>]*>/);\n    if (linkMatch) {\n        baseVideoUrl = linkMatch[1].replace(/[?&]t=\\d+/, '').replace(/[?&]$/, '');\n    }\n    // 1단계: 모든 타임스탬프 링크를 찾고 주변 텍스트 추출\n    const allTimestampPattern = /<a[^>]*>(\\d{1,2}:\\d{2}(?::\\d{2})?)<\\/a>/g;\n    let match;\n    const timestampPositions = [];\n    while((match = allTimestampPattern.exec(decodedHtml)) !== null){\n        timestampPositions.push({\n            timeText: match[1],\n            timeSeconds: parseTimeToSeconds(match[1]),\n            startPos: match.index,\n            endPos: match.index + match[0].length,\n            fullMatch: match[0]\n        });\n    }\n    console.log(`🕐 총 ${timestampPositions.length}개 타임스탬프 발견`);\n    // 2단계: 각 타임스탬프 주변의 컨텍스트 추출\n    timestampPositions.forEach((timestamp, index)=>{\n        // 현재 타임스탬프 이후부터 다음 타임스탬프 전까지의 텍스트\n        const nextStartPos = index < timestampPositions.length - 1 ? timestampPositions[index + 1].startPos : decodedHtml.length;\n        const contextText = decodedHtml.substring(timestamp.endPos, nextStartPos);\n        // 텍스트 정리 및 추출\n        let cleanText = contextText.replace(/<br\\s*\\/?>/gi, ' ') // <br> 태그를 공백으로\n        .replace(/<[^>]*>/g, ' ') // 모든 HTML 태그 제거\n        .replace(/\\s+/g, ' ') // 연속 공백을 하나로\n        .trim();\n        // 특수 마커나 브래킷 정보 제거\n        cleanText = cleanText.replace(/^[🎵🪻]\\s*/, '') // 이모지 마커 제거\n        .replace(/^\\[.*?\\]\\s*/, '') // 브래킷 정보 제거 ([저챗], [노래타임] 등)\n        .replace(/^\\s*-\\s*/, '') // 시작 대시 제거\n        .replace(/^\\s*~\\s*/, '') // 시작 틸드 제거\n        .trim();\n        // VS 패턴 처리 - \"곡1 VS 시간 곡2\" 형태를 분리\n        const vsMatch = cleanText.match(/^(.*?)\\s+VS\\s+(\\d{1,2}:\\d{2}(?::\\d{2})?)\\s+(.*?)$/);\n        if (vsMatch) {\n            // VS 앞부분만 현재 타임스탬프에 연결\n            cleanText = vsMatch[1].trim();\n        }\n        // 빈 텍스트나 너무 짧은 텍스트 스킵\n        if (!cleanText || cleanText.length < 2) {\n            return;\n        }\n        // 음악 관련 여부 판단\n        const isLikelyMusic = isMusicContent(cleanText);\n        if (isLikelyMusic) {\n            results.push({\n                timeText: timestamp.timeText,\n                timeSeconds: timestamp.timeSeconds,\n                content: cleanText,\n                baseVideoUrl,\n                source: 'general'\n            });\n            console.log(`🎶 발견: ${timestamp.timeText} → \"${cleanText}\"`);\n        } else {\n            console.log(`❌ 제외: ${timestamp.timeText} → \"${cleanText.substring(0, 50)}...\"`);\n        }\n    });\n    // 시간순 정렬\n    results.sort((a, b)=>a.timeSeconds - b.timeSeconds);\n    console.log(`📍 총 ${results.length}개 음악 항목 발견`);\n    return results;\n}\n// 기본 비디오 URL 추출\nfunction extractBaseVideoUrl(timelines) {\n    const linkTimeline = timelines.find((t)=>t.type === 'link' && t.url);\n    if (linkTimeline) {\n        return linkTimeline.url.replace(/[?&]t=\\d+/, '').replace(/[?&]$/, '');\n    }\n    return '';\n}\n// 완전히 새로운 타임라인 파싱 함수\nfunction parseTimelineComment(htmlText, videoTitle) {\n    console.log(`🔍 원본 댓글 파싱 시작...`);\n    // HTML 엔티티 디코딩\n    const decodedHtml = decodeHtmlEntities(htmlText);\n    // 1단계: 타임스탬프 기준으로 댓글을 완전히 분할\n    const sections = splitCommentByTimestamps(decodedHtml);\n    if (sections.length === 0) {\n        console.log(`❌ 타임스탬프가 발견되지 않음`);\n        return [];\n    }\n    console.log(`📊 총 ${sections.length}개 구간으로 분할됨`);\n    // 2단계: 각 분할된 구간을 개별적으로 파싱 (원본 댓글은 더 이상 보지 않음)\n    const rawMatches = [];\n    for(let i = 0; i < sections.length; i++){\n        const section = sections[i];\n        console.log(`\\n🔄 구간 ${i + 1} 개별 파싱: ${section.timeText}`);\n        console.log(`📝 구간 내용: \"${section.content}\"`);\n        // 3단계: 분할된 구간만 사용하여 곡 정보 파싱\n        const songInfo = parseSongInfo(section.content);\n        const isRelevant = songInfo.artist !== '알 수 없음';\n        rawMatches.push({\n            url: section.baseVideoUrl || '',\n            timeSeconds: section.timeSeconds,\n            timeText: section.timeText,\n            sectionText: section.content,\n            artist: songInfo.artist,\n            songTitle: songInfo.songTitle,\n            isRelevant: isRelevant\n        });\n        console.log(`${isRelevant ? '✅' : '⚠️'} 구간 파싱 완료: ${section.timeText} - ${songInfo.artist} - ${songInfo.songTitle}`);\n    }\n    console.log(`📊 총 ${rawMatches.length}개 유효한 곡 발견`);\n    // 시간순 정렬\n    rawMatches.sort((a, b)=>a.timeSeconds - b.timeSeconds);\n    // 기본 비디오 URL 추출 (t 파라미터 제거)\n    const baseVideoUrl = rawMatches.length > 0 ? rawMatches[0].url.replace(/[?&]t=\\d+/, '').replace(/[?&]$/, '') : '';\n    // 날짜 추출\n    const dateInfo = extractDateFromTitle(videoTitle);\n    // 결과 배열 초기화\n    const songEntries = [];\n    // 각 곡 정보와 시작/종료 시간 계산\n    for(let i = 0; i < rawMatches.length; i++){\n        const current = rawMatches[i];\n        const next = rawMatches[i + 1];\n        const liveClip = {\n            videoUrl: baseVideoUrl,\n            artist: current.artist,\n            songTitle: current.songTitle,\n            startTimeSeconds: current.timeSeconds,\n            endTimeSeconds: next ? next.timeSeconds : null,\n            duration: next ? next.timeSeconds - current.timeSeconds : null,\n            uploadedDate: dateInfo.date,\n            originalDateString: dateInfo.originalString,\n            isRelevant: current.isRelevant\n        };\n        songEntries.push(liveClip);\n    }\n    return songEntries;\n}\n// 곡 정보 파싱 함수 (아티스트와 곡명 분리)\nfunction parseSongInfo(songText) {\n    const cleanText = songText.trim();\n    // 다양한 구분자로 분리 시도\n    const separators = [\n        ' - ',\n        ' – ',\n        ' — ',\n        ' | ',\n        ' / '\n    ];\n    for (const separator of separators){\n        if (cleanText.includes(separator)) {\n            const parts = cleanText.split(separator);\n            if (parts.length >= 2 && parts[0].trim() && parts[1].trim()) {\n                return {\n                    artist: parts[0].trim(),\n                    songTitle: parts.slice(1).join(separator).trim()\n                };\n            }\n        }\n    }\n    // 구분자가 없는 경우, 전체를 곡명으로 처리\n    return {\n        artist: '알 수 없음',\n        songTitle: cleanText\n    };\n}\n// 초를 HH:MM:SS 또는 MM:SS 형식으로 변환\nfunction formatSeconds(seconds) {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = seconds % 60;\n    if (hours > 0) {\n        return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n    } else {\n        return `${minutes}:${secs.toString().padStart(2, '0')}`;\n    }\n}\n// 노래 데이터베이스에서 매칭 찾기\nasync function findSongMatches(artist, songTitle) {\n    try {\n        // 활성 상태인 곡들만 검색\n        const songs = await _models_SongDetail__WEBPACK_IMPORTED_MODULE_6__[\"default\"].find({\n            status: {\n                $in: [\n                    'active',\n                    'pending'\n                ]\n            }\n        }).lean();\n        const normalizedInputArtist = normalizeText(artist);\n        const normalizedInputTitle = normalizeText(songTitle);\n        const matches = [];\n        for (const song of songs){\n            // 기본 아티스트/제목 매칭\n            const artistSimilarity = calculateSimilarity(normalizedInputArtist, normalizeText(song.artist));\n            const titleSimilarity = calculateSimilarity(normalizedInputTitle, normalizeText(song.title));\n            // 별칭이 있는 경우 별칭도 확인\n            let bestArtistSimilarity = artistSimilarity;\n            let bestTitleSimilarity = titleSimilarity;\n            if (song.artistAlias) {\n                const aliasSimilarity = calculateSimilarity(normalizedInputArtist, normalizeText(song.artistAlias));\n                bestArtistSimilarity = Math.max(bestArtistSimilarity, aliasSimilarity);\n            }\n            if (song.titleAlias) {\n                const aliasSimilarity = calculateSimilarity(normalizedInputTitle, normalizeText(song.titleAlias));\n                bestTitleSimilarity = Math.max(bestTitleSimilarity, aliasSimilarity);\n            }\n            // 검색 태그도 확인\n            if (song.searchTags && song.searchTags.length > 0) {\n                for (const tag of song.searchTags){\n                    const tagArtistSimilarity = calculateSimilarity(normalizedInputArtist, normalizeText(tag));\n                    const tagTitleSimilarity = calculateSimilarity(normalizedInputTitle, normalizeText(tag));\n                    bestArtistSimilarity = Math.max(bestArtistSimilarity, tagArtistSimilarity);\n                    bestTitleSimilarity = Math.max(bestTitleSimilarity, tagTitleSimilarity);\n                }\n            }\n            // 종합 점수 계산 (아티스트 40%, 제목 60%)\n            const overallConfidence = bestArtistSimilarity * 0.4 + bestTitleSimilarity * 0.6;\n            // 최소 신뢰도 기준 (0.6 이상만 후보로 선정)\n            if (overallConfidence >= 0.6) {\n                matches.push({\n                    songId: song._id.toString(),\n                    title: song.title,\n                    artist: song.artist,\n                    confidence: overallConfidence,\n                    artistSimilarity: bestArtistSimilarity,\n                    titleSimilarity: bestTitleSimilarity,\n                    matchedField: bestArtistSimilarity > artistSimilarity || bestTitleSimilarity > titleSimilarity ? 'alias' : 'main'\n                });\n            }\n        }\n        // 신뢰도 순으로 정렬하고 상위 5개만 반환\n        return matches.sort((a, b)=>b.confidence - a.confidence).slice(0, 5);\n    } catch (error) {\n        console.error('노래 매칭 중 오류:', error);\n        return [];\n    }\n}\n// 최적 매칭 선택 (가장 높은 신뢰도)\nasync function getBestSongMatch(artist, songTitle) {\n    const matches = await findSongMatches(artist, songTitle);\n    if (matches.length === 0) return null;\n    const bestMatch = matches[0];\n    // 신뢰도가 0.8 이상일 때만 자동 매칭으로 처리\n    if (bestMatch.confidence >= 0.8) {\n        return {\n            songId: bestMatch.songId,\n            title: bestMatch.title,\n            artist: bestMatch.artist,\n            confidence: bestMatch.confidence\n        };\n    }\n    return null;\n}\n// 비디오 제목에서 날짜 추출 (개선된 버전)\nfunction extractDateFromTitle(title) {\n    // 25.06.01 형식 패턴 (YY.MM.DD)\n    const shortYearPattern = /(\\d{2})\\.(\\d{1,2})\\.(\\d{1,2})/;\n    const shortYearMatch = title.match(shortYearPattern);\n    if (shortYearMatch) {\n        const year = parseInt(shortYearMatch[1]);\n        const month = parseInt(shortYearMatch[2]);\n        const day = parseInt(shortYearMatch[3]);\n        // 2000년대로 가정 (25 -> 2025)\n        const fullYear = year < 50 ? 2000 + year : 1900 + year;\n        try {\n            const date = new Date(fullYear, month - 1, day);\n            return {\n                date: date,\n                originalString: shortYearMatch[0]\n            };\n        } catch (error) {\n            console.error('날짜 파싱 오류:', error);\n        }\n    }\n    // 다른 날짜 형식들\n    const datePatterns = [\n        {\n            pattern: /(\\d{4})[\\.\\-\\/](\\d{1,2})[\\.\\-\\/](\\d{1,2})/,\n            parser: (match)=>new Date(parseInt(match[1]), parseInt(match[2]) - 1, parseInt(match[3]))\n        },\n        {\n            pattern: /(\\d{1,2})[\\.\\-\\/](\\d{1,2})[\\.\\-\\/](\\d{4})/,\n            parser: (match)=>new Date(parseInt(match[3]), parseInt(match[1]) - 1, parseInt(match[2]))\n        },\n        {\n            pattern: /(\\d{4})년\\s*(\\d{1,2})월\\s*(\\d{1,2})일/,\n            parser: (match)=>new Date(parseInt(match[1]), parseInt(match[2]) - 1, parseInt(match[3]))\n        }\n    ];\n    for (const { pattern, parser } of datePatterns){\n        const match = title.match(pattern);\n        if (match) {\n            try {\n                const date = parser(match);\n                return {\n                    date: date,\n                    originalString: match[0]\n                };\n            } catch (error) {\n                console.error('날짜 파싱 오류:', error);\n            }\n        }\n    }\n    return {\n        date: null,\n        originalString: null\n    };\n}\nasync function POST(request) {\n    try {\n        const session = await (0,next_auth_next__WEBPACK_IMPORTED_MODULE_1__.getServerSession)(_lib_authOptions__WEBPACK_IMPORTED_MODULE_2__.authOptions);\n        if (!session || !(0,_lib_permissions__WEBPACK_IMPORTED_MODULE_3__.hasPermission)(session.user.role, _lib_permissions__WEBPACK_IMPORTED_MODULE_3__.Permission.SONGS_EDIT)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: '편집 권한이 필요합니다.'\n            }, {\n                status: 403\n            });\n        }\n        await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_4__[\"default\"])();\n        const body = await request.json();\n        const { action, itemId, isRelevant, isExcluded, skipProcessed = true } = body;\n        switch(action){\n            case 'reprocess-timeline-comments':\n                // 기존 데이터를 개선된 멀티라인 파싱 방식으로 업데이트\n                console.log('🔄 기존 파싱된 타임라인 데이터를 개선된 방식으로 업데이트 시작...');\n                // 모든 타임라인 댓글 조회 (처리완료 여부 무관)\n                const allTimelineComments = await _models_YouTubeComment__WEBPACK_IMPORTED_MODULE_5__.YouTubeComment.find({\n                    isTimeline: true\n                });\n                console.log(`📝 총 ${allTimelineComments.length}개 타임라인 댓글 발견`);\n                let reprocessedCount = 0;\n                let dataUpdatedCount = 0;\n                let newItemsCount = 0;\n                for (const comment of allTimelineComments){\n                    try {\n                        // 비디오 정보 조회\n                        const video = await _models_YouTubeComment__WEBPACK_IMPORTED_MODULE_5__.YouTubeVideo.findOne({\n                            videoId: comment.videoId\n                        });\n                        if (!video) continue;\n                        console.log(`🔍 재처리 중: ${comment.commentId}`);\n                        const hasHtmlLinks = comment.textContent.includes('<a ');\n                        if (hasHtmlLinks) {\n                            // 개선된 멀티라인 타임라인 댓글 파싱\n                            const liveClips = parseTimelineComment(comment.textContent, video.title);\n                            if (liveClips.length > 0) {\n                                // 이 댓글에서 기존에 파싱된 타임라인들 조회\n                                const existingTimelines = await ParsedTimeline.find({\n                                    commentId: comment.commentId\n                                });\n                                // 기존 파싱 결과와 새 파싱 결과 비교\n                                console.log(`🔍 새로 파싱된 클립 개수: ${liveClips.length}개`);\n                                console.log(`🔍 기존 타임라인 개수: ${existingTimelines.length}개`);\n                                for (const clipData of liveClips){\n                                    console.log(`🔍 새 클립 - 시작시간: ${clipData.startTimeSeconds}초, 아티스트: ${clipData.artist}, 곡명: ${clipData.songTitle}`);\n                                    // 먼저 startTimeSeconds로 매칭 시도\n                                    let existingClip = existingTimelines.find((timeline)=>timeline.startTimeSeconds === clipData.startTimeSeconds);\n                                    // startTimeSeconds로 매칭되지 않는 경우, 아티스트-곡명으로 매칭 시도\n                                    if (!existingClip) {\n                                        existingClip = existingTimelines.find((timeline)=>timeline.artist === clipData.artist && timeline.songTitle === clipData.songTitle);\n                                        if (existingClip) {\n                                            console.log(`🔄 아티스트-곡명으로 매칭됨: ${existingClip.artist} - ${existingClip.songTitle} (기존 시간: ${existingClip.startTimeSeconds}초 → 새 시간: ${clipData.startTimeSeconds}초)`);\n                                        }\n                                    } else {\n                                        console.log(`✅ 시작시간으로 매칭됨: ${clipData.startTimeSeconds}초`);\n                                    }\n                                    if (existingClip) {\n                                        // 기존 데이터를 새로운 파싱 결과로 업데이트\n                                        const updateData = {\n                                            artist: clipData.artist,\n                                            songTitle: clipData.songTitle,\n                                            startTimeSeconds: clipData.startTimeSeconds,\n                                            endTimeSeconds: clipData.endTimeSeconds,\n                                            duration: clipData.duration,\n                                            isRelevant: clipData.isRelevant,\n                                            originalComment: comment.textContent,\n                                            updatedAt: new Date()\n                                        };\n                                        // 댓글 작성자 정보가 없는 경우에만 추가\n                                        if (!existingClip.commentAuthor) {\n                                            updateData.commentAuthor = comment.authorName;\n                                            updateData.commentId = comment.commentId;\n                                            updateData.commentPublishedAt = comment.publishedAt;\n                                        }\n                                        await ParsedTimeline.updateOne({\n                                            _id: existingClip._id\n                                        }, updateData);\n                                        dataUpdatedCount++;\n                                        console.log(`🔄 업데이트됨: ${clipData.startTimeSeconds}초 - ${clipData.artist} - ${clipData.songTitle}`);\n                                    } else {\n                                        // 새로운 데이터는 생성하지 않음 (기존 데이터 업데이트만)\n                                        console.log(`⏭️ 새로운 타임라인 발견했지만 생성하지 않음: ${clipData.startTimeSeconds}초 - ${clipData.artist} - ${clipData.songTitle}`);\n                                    }\n                                }\n                            }\n                            reprocessedCount++;\n                        }\n                    } catch (error) {\n                        console.error(`댓글 재처리 오류 (${comment.commentId}):`, error);\n                    }\n                }\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    message: `기존 데이터 업데이트 완료: ${reprocessedCount}개 댓글 처리, ${dataUpdatedCount}개 기존 데이터 업데이트 (새로운 데이터 생성 없음)`,\n                    data: {\n                        reprocessedCount,\n                        dataUpdatedCount,\n                        newItemsSkipped: newItemsCount\n                    }\n                });\n            case 'parse-timeline-comments':\n                console.log(`🔄 타임라인 댓글 파싱 시작... (처리완료 댓글 스킵: ${skipProcessed ? '예' : '아니오'})`);\n                // 타임라인 댓글 조회 (skipProcessed 옵션에 따라 필터링)\n                const queryFilter = {\n                    isTimeline: true\n                };\n                if (skipProcessed) {\n                    queryFilter.isProcessed = {\n                        $ne: true\n                    }; // isProcessed가 true가 아닌 것들만\n                }\n                const timelineComments = await _models_YouTubeComment__WEBPACK_IMPORTED_MODULE_5__.YouTubeComment.find(queryFilter);\n                console.log(`📝 총 ${timelineComments.length}개 타임라인 댓글 발견`);\n                // 이미 파싱된 commentId 목록 조회\n                const existingCommentIds = await ParsedTimeline.distinct('commentId');\n                console.log(`📊 기존에 파싱된 댓글: ${existingCommentIds.length}개`);\n                // 새로운 댓글과 최근에 업데이트된 댓글 필터링 (최근 7일 이내 업데이트된 댓글 재처리)\n                const sevenDaysAgo = new Date();\n                sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);\n                const newTimelineComments = timelineComments.filter((comment)=>{\n                    const isNotProcessed = !existingCommentIds.includes(comment.commentId);\n                    const isRecentlyUpdated = comment.updatedAt && new Date(comment.updatedAt) > sevenDaysAgo;\n                    if (skipProcessed) {\n                        // skipProcessed가 true면 이미 DB 쿼리에서 필터링했으므로 추가 필터링 불필요\n                        return isNotProcessed || isRecentlyUpdated;\n                    } else {\n                        // skipProcessed가 false면 모든 댓글 처리 (처리완료 여부 무관)\n                        return isNotProcessed || isRecentlyUpdated;\n                    }\n                });\n                console.log(`📝 새로 처리할 댓글: ${newTimelineComments.length}개`);\n                console.log(`   - 완전히 새로운 댓글: ${timelineComments.filter((c)=>!existingCommentIds.includes(c.commentId)).length}개`);\n                console.log(`   - 최근 업데이트된 댓글: ${timelineComments.filter((c)=>existingCommentIds.includes(c.commentId) && c.updatedAt && new Date(c.updatedAt) > sevenDaysAgo).length}개`);\n                if (newTimelineComments.length === 0) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: true,\n                        message: '새로 파싱할 타임라인 댓글이 없습니다.',\n                        data: {\n                            newComments: 0,\n                            totalComments: timelineComments.length\n                        }\n                    });\n                }\n                // 처음 몇 개 댓글의 샘플 출력\n                console.log('\\n📋 첫 3개 댓글 샘플:');\n                for(let i = 0; i < Math.min(3, newTimelineComments.length); i++){\n                    const sample = newTimelineComments[i];\n                    console.log(`\\n샘플 ${i + 1} (${sample.commentId}):`);\n                    console.log(`내용: ${sample.textContent.substring(0, 300)}`);\n                    console.log(`HTML 링크 포함: ${sample.textContent.includes('<a ')}`);\n                    console.log(`YouTube 링크 포함: ${sample.textContent.includes('youtube.com')}`);\n                }\n                let processedCount = 0;\n                let totalLiveClips = 0;\n                for (const comment of newTimelineComments){\n                    try {\n                        // 비디오 정보 조회\n                        const video = await _models_YouTubeComment__WEBPACK_IMPORTED_MODULE_5__.YouTubeVideo.findOne({\n                            videoId: comment.videoId\n                        });\n                        if (!video) continue;\n                        // 디버그: 댓글 내용 확인\n                        console.log(`\\n🔍 댓글 내용 (${comment.commentId}):`);\n                        console.log(comment.textContent.substring(0, 200) + '...');\n                        // HTML 링크가 있는지 확인\n                        const hasHtmlLinks = comment.textContent.includes('<a ');\n                        console.log(`HTML 링크 포함: ${hasHtmlLinks}`);\n                        if (hasHtmlLinks) {\n                            // 타임라인 댓글 파싱\n                            const liveClips = parseTimelineComment(comment.textContent, video.title);\n                            console.log(`파싱 결과: ${liveClips.length}개 클립`);\n                            if (liveClips.length > 0) {\n                                console.log(`🎵 ${video.title}에서 ${liveClips.length}개 곡 발견`);\n                                for (const clipData of liveClips){\n                                    const clipId = `${comment.commentId}_${clipData.startTimeSeconds}`;\n                                    // 기존 파싱된 타임라인이 있는지 확인 (videoId + startTimeSeconds ±10초 범위로)\n                                    const existingClip = await ParsedTimeline.findOne({\n                                        videoId: comment.videoId,\n                                        startTimeSeconds: {\n                                            $gte: clipData.startTimeSeconds - 10,\n                                            $lte: clipData.startTimeSeconds + 10\n                                        }\n                                    });\n                                    if (existingClip) {\n                                        // 기존 데이터가 있으면 스킵\n                                        console.log(`⏭️ 스킵 (기존 데이터 존재): ${clipData.artist} - ${clipData.songTitle} (${formatSeconds(clipData.startTimeSeconds)}, 기존: ${formatSeconds(existingClip.startTimeSeconds)})`);\n                                    } else {\n                                        // 새로운 데이터 생성\n                                        const parsedTimeline = new ParsedTimeline({\n                                            id: clipId,\n                                            videoId: comment.videoId,\n                                            videoTitle: video.title,\n                                            uploadedDate: clipData.uploadedDate || video.publishedAt,\n                                            originalDateString: clipData.originalDateString,\n                                            artist: clipData.artist,\n                                            songTitle: clipData.songTitle,\n                                            videoUrl: clipData.videoUrl,\n                                            startTimeSeconds: clipData.startTimeSeconds,\n                                            endTimeSeconds: clipData.endTimeSeconds,\n                                            duration: clipData.duration,\n                                            originalComment: comment.textContent,\n                                            commentAuthor: comment.authorName,\n                                            commentId: comment.commentId,\n                                            commentPublishedAt: comment.publishedAt,\n                                            isRelevant: clipData.isRelevant,\n                                            isExcluded: false\n                                        });\n                                        await parsedTimeline.save();\n                                        totalLiveClips++;\n                                        console.log(`💾 새로 저장: ${clipData.artist} - ${clipData.songTitle} (${formatSeconds(clipData.startTimeSeconds)}${clipData.endTimeSeconds ? ` ~ ${formatSeconds(clipData.endTimeSeconds)}` : ''}) ${clipData.isRelevant ? '[관련성 있음]' : '[관련성 없음]'}`);\n                                    }\n                                }\n                            }\n                            // 댓글을 처리완료로 표시\n                            await _models_YouTubeComment__WEBPACK_IMPORTED_MODULE_5__.YouTubeComment.updateOne({\n                                commentId: comment.commentId\n                            }, {\n                                isProcessed: true,\n                                processedAt: new Date(),\n                                processedBy: 'timeline-parser'\n                            });\n                            processedCount++;\n                        } else {\n                            console.log(`❌ HTML 링크 없음, 건너뜀`);\n                        }\n                    } catch (error) {\n                        console.error(`댓글 파싱 오류 (${comment.commentId}):`, error);\n                    }\n                }\n                // 통계 계산\n                const totalVideos = await _models_YouTubeComment__WEBPACK_IMPORTED_MODULE_5__.YouTubeVideo.countDocuments();\n                const totalTimelineComments = await _models_YouTubeComment__WEBPACK_IMPORTED_MODULE_5__.YouTubeComment.countDocuments({\n                    isTimeline: true\n                });\n                const allParsedTimelines = await ParsedTimeline.find().sort({\n                    uploadedDate: -1,\n                    startTimeSeconds: 1\n                });\n                const relevantClips = allParsedTimelines.filter((clip)=>clip.isRelevant && !clip.isExcluded).length;\n                const matchedClips = allParsedTimelines.filter((clip)=>clip.matchedSong).length;\n                // 고유 곡 수 계산\n                const uniqueSongsSet = new Set();\n                allParsedTimelines.forEach((clip)=>{\n                    uniqueSongsSet.add(`${clip.artist}_${clip.songTitle}`);\n                });\n                const stats = {\n                    totalVideos,\n                    totalTimelineComments,\n                    parsedItems: allParsedTimelines.length,\n                    relevantItems: relevantClips,\n                    matchedSongs: matchedClips,\n                    uniqueSongs: uniqueSongsSet.size\n                };\n                console.log(`✅ 타임라인 파싱 완료: ${processedCount}개 댓글에서 ${totalLiveClips}개 파싱된 타임라인 생성`);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    data: {\n                        items: allParsedTimelines,\n                        stats\n                    },\n                    message: `타임라인 파싱 완료: ${totalLiveClips}개 파싱된 타임라인 생성`\n                });\n            case 'update-item-relevance':\n                if (!itemId) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: 'itemId가 필요합니다.'\n                    }, {\n                        status: 400\n                    });\n                }\n                await ParsedTimeline.updateOne({\n                    id: itemId\n                }, {\n                    isRelevant: isRelevant,\n                    updatedAt: new Date()\n                });\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    message: '관련성 상태가 업데이트되었습니다.'\n                });\n            case 'update-item-exclusion':\n                if (!itemId) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: 'itemId가 필요합니다.'\n                    }, {\n                        status: 400\n                    });\n                }\n                await ParsedTimeline.updateOne({\n                    id: itemId\n                }, {\n                    isExcluded: isExcluded,\n                    updatedAt: new Date()\n                });\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    message: '제외 상태가 업데이트되었습니다.'\n                });\n            case 'find-song-matches':\n                if (!itemId) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: 'itemId가 필요합니다.'\n                    }, {\n                        status: 400\n                    });\n                }\n                const parsedTimeline = await ParsedTimeline.findOne({\n                    id: itemId\n                });\n                if (!parsedTimeline) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: '파싱된 타임라인을 찾을 수 없습니다.'\n                    }, {\n                        status: 404\n                    });\n                }\n                const songMatches = await findSongMatches(parsedTimeline.artist, parsedTimeline.songTitle);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    data: {\n                        parsedTimeline: {\n                            id: parsedTimeline.id,\n                            artist: parsedTimeline.artist,\n                            songTitle: parsedTimeline.songTitle\n                        },\n                        matches: songMatches\n                    }\n                });\n            case 'assign-song-match':\n                const { songId, confidence } = body;\n                if (!itemId || !songId) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: 'itemId와 songId가 필요합니다.'\n                    }, {\n                        status: 400\n                    });\n                }\n                // 선택된 곡 정보 조회\n                const selectedSong = await _models_SongDetail__WEBPACK_IMPORTED_MODULE_6__[\"default\"].findById(songId);\n                if (!selectedSong) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: '선택된 곡을 찾을 수 없습니다.'\n                    }, {\n                        status: 404\n                    });\n                }\n                await ParsedTimeline.updateOne({\n                    id: itemId\n                }, {\n                    matchedSong: {\n                        songId: selectedSong._id.toString(),\n                        title: selectedSong.title,\n                        artist: selectedSong.artist,\n                        confidence: confidence || 1.0 // 수동 매칭은 기본적으로 100% 신뢰도\n                    },\n                    updatedAt: new Date()\n                });\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    message: '곡 매칭이 완료되었습니다.'\n                });\n            case 'remove-song-match':\n                if (!itemId) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: 'itemId가 필요합니다.'\n                    }, {\n                        status: 400\n                    });\n                }\n                await ParsedTimeline.updateOne({\n                    id: itemId\n                }, {\n                    $unset: {\n                        matchedSong: \"\"\n                    },\n                    updatedAt: new Date()\n                });\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    message: '곡 매칭이 해제되었습니다.'\n                });\n            case 'update-live-clip':\n                const { artist, songTitle, startTimeSeconds, endTimeSeconds, customDescription } = body;\n                if (!itemId) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: 'itemId가 필요합니다.'\n                    }, {\n                        status: 400\n                    });\n                }\n                const updateFields = {\n                    updatedAt: new Date()\n                };\n                if (artist !== undefined) updateFields.artist = artist.trim();\n                if (songTitle !== undefined) updateFields.songTitle = songTitle.trim();\n                if (startTimeSeconds !== undefined) updateFields.startTimeSeconds = startTimeSeconds;\n                if (endTimeSeconds !== undefined) updateFields.endTimeSeconds = endTimeSeconds;\n                if (customDescription !== undefined) updateFields.customDescription = customDescription;\n                // 지속 시간 재계산 (종료 시간이 있는 경우)\n                if (endTimeSeconds !== undefined && startTimeSeconds !== undefined) {\n                    updateFields.duration = endTimeSeconds > startTimeSeconds ? endTimeSeconds - startTimeSeconds : null;\n                }\n                await ParsedTimeline.updateOne({\n                    id: itemId\n                }, updateFields);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    message: '파싱된 타임라인 정보가 업데이트되었습니다.'\n                });\n            case 'search-song-matches':\n                const { searchArtist, searchTitle } = body;\n                if (!searchArtist || !searchTitle) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: 'searchArtist와 searchTitle이 필요합니다.'\n                    }, {\n                        status: 400\n                    });\n                }\n                try {\n                    const candidates = await matchTimelineWithSongs(searchArtist, searchTitle);\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: true,\n                        data: {\n                            query: {\n                                artist: searchArtist,\n                                title: searchTitle\n                            },\n                            candidates: candidates || []\n                        }\n                    });\n                } catch (error) {\n                    console.error('곡 검색 오류:', error);\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: '곡 검색 중 오류가 발생했습니다.'\n                    }, {\n                        status: 500\n                    });\n                }\n            case 'match-timeline-song':\n                const { timelineId, songId: matchSongId, confidence: matchConfidence } = body;\n                if (!timelineId) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: 'timelineId가 필요합니다.'\n                    }, {\n                        status: 400\n                    });\n                }\n                try {\n                    const updateData = {\n                        updatedAt: new Date()\n                    };\n                    if (matchSongId) {\n                        // 곡 매칭\n                        const matchedSong = await _models_SongDetail__WEBPACK_IMPORTED_MODULE_6__[\"default\"].findById(matchSongId);\n                        if (!matchedSong) {\n                            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                                success: false,\n                                error: '해당 곡을 찾을 수 없습니다.'\n                            }, {\n                                status: 404\n                            });\n                        }\n                        updateData.matchedSong = {\n                            songId: matchedSong._id.toString(),\n                            title: matchedSong.title,\n                            artist: matchedSong.artist,\n                            confidence: matchConfidence || 0.9\n                        };\n                    } else {\n                        // 매칭 해제\n                        updateData.$unset = {\n                            matchedSong: \"\"\n                        };\n                    }\n                    await ParsedTimeline.updateOne({\n                        id: timelineId\n                    }, updateData);\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: true,\n                        message: matchSongId ? '곡이 매칭되었습니다.' : '곡 매칭이 해제되었습니다.',\n                        data: {\n                            matchInfo: matchSongId ? {\n                                title: updateData.matchedSong?.title,\n                                artist: updateData.matchedSong?.artist\n                            } : null\n                        }\n                    });\n                } catch (error) {\n                    console.error('곡 매칭 오류:', error);\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: '곡 매칭 중 오류가 발생했습니다.'\n                    }, {\n                        status: 500\n                    });\n                }\n            case 'batch-search-matches':\n                console.log('🔍 전체 타임라인 일괄 검색 시작...');\n                try {\n                    // 매칭되지 않은 모든 타임라인 항목 조회\n                    const unmatchedTimelines = await ParsedTimeline.find({\n                        isRelevant: true,\n                        isExcluded: false,\n                        matchedSong: {\n                            $exists: false\n                        }\n                    }).sort({\n                        uploadedDate: -1,\n                        startTimeSeconds: 1\n                    });\n                    console.log(`📊 매칭되지 않은 타임라인 항목: ${unmatchedTimelines.length}개`);\n                    if (unmatchedTimelines.length === 0) {\n                        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                            success: true,\n                            message: '매칭되지 않은 타임라인 항목이 없습니다.',\n                            data: {\n                                processed: 0,\n                                matched: 0,\n                                results: []\n                            }\n                        });\n                    }\n                    // 모든 곡 데이터를 한 번에 로드 (캐싱용)\n                    const allSongs = await _models_SongDetail__WEBPACK_IMPORTED_MODULE_6__[\"default\"].find({\n                        $or: [\n                            {\n                                status: 'active'\n                            },\n                            {\n                                status: {\n                                    $exists: false\n                                }\n                            },\n                            {\n                                status: null\n                            }\n                        ]\n                    }).lean();\n                    // 검색 대상이 적다면 모든 곡을 대상으로 검색\n                    if (allSongs.length < 100) {\n                        const allSongsNoFilter = await _models_SongDetail__WEBPACK_IMPORTED_MODULE_6__[\"default\"].find({}).lean();\n                        allSongs.push(...allSongsNoFilter);\n                    }\n                    console.log(`🎵 검색 대상 곡 수: ${allSongs.length}개`);\n                    const results = [];\n                    let matchedCount = 0;\n                    // 각 타임라인 항목에 대해 검색 수행\n                    for (const timeline of unmatchedTimelines){\n                        console.log(`🔍 검색 중: \"${timeline.artist}\" - \"${timeline.songTitle}\"`);\n                        const candidates = await matchTimelineWithSongsFromCache(timeline.artist, timeline.songTitle, allSongs);\n                        // 자동 매칭 조건: 95% 이상 유사도의 후보가 있는 경우\n                        const exactMatch = candidates.find((c)=>c.overallSimilarity >= 0.95);\n                        let matchResult = null;\n                        if (exactMatch) {\n                            // 자동 매칭 수행\n                            await ParsedTimeline.updateOne({\n                                _id: timeline._id\n                            }, {\n                                matchedSong: {\n                                    songId: exactMatch.song._id.toString(),\n                                    title: exactMatch.song.title,\n                                    artist: exactMatch.song.artist,\n                                    confidence: exactMatch.overallSimilarity\n                                },\n                                updatedAt: new Date()\n                            });\n                            matchResult = {\n                                songId: exactMatch.song._id.toString(),\n                                title: exactMatch.song.title,\n                                artist: exactMatch.song.artist,\n                                confidence: exactMatch.overallSimilarity\n                            };\n                            matchedCount++;\n                            console.log(`✅ 자동 매칭: \"${timeline.artist}\" - \"${timeline.songTitle}\" → \"${exactMatch.song.artist}\" - \"${exactMatch.song.title}\" (${(exactMatch.overallSimilarity * 100).toFixed(1)}%)`);\n                        }\n                        results.push({\n                            timelineId: timeline.id,\n                            timelineItem: {\n                                artist: timeline.artist,\n                                songTitle: timeline.songTitle,\n                                timeText: formatSeconds(timeline.startTimeSeconds),\n                                videoTitle: timeline.videoTitle\n                            },\n                            candidates: candidates.slice(0, 5),\n                            autoMatched: !!exactMatch,\n                            matchResult\n                        });\n                    }\n                    console.log(`✅ 일괄 검색 완료: ${unmatchedTimelines.length}개 처리, ${matchedCount}개 자동 매칭`);\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: true,\n                        message: `일괄 검색 완료: ${unmatchedTimelines.length}개 처리, ${matchedCount}개 자동 매칭`,\n                        data: {\n                            processed: unmatchedTimelines.length,\n                            matched: matchedCount,\n                            results\n                        }\n                    });\n                } catch (error) {\n                    console.error('일괄 검색 오류:', error);\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: '일괄 검색 중 오류가 발생했습니다.'\n                    }, {\n                        status: 500\n                    });\n                }\n            case 'update-time-verification':\n                const { timelineId: verifyTimelineId, isVerified, verificationNotes } = body;\n                if (!verifyTimelineId) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: 'timelineId가 필요합니다.'\n                    }, {\n                        status: 400\n                    });\n                }\n                try {\n                    const updateData = {\n                        updatedAt: new Date()\n                    };\n                    if (isVerified) {\n                        updateData.isTimeVerified = true;\n                        updateData.verifiedBy = session?.user?.name || session?.user?.channelId || 'Unknown';\n                        updateData.verifiedAt = new Date();\n                        if (verificationNotes) {\n                            updateData.verificationNotes = verificationNotes;\n                        }\n                    } else {\n                        updateData.isTimeVerified = false;\n                        updateData.$unset = {\n                            verifiedBy: \"\",\n                            verifiedAt: \"\",\n                            verificationNotes: \"\"\n                        };\n                    }\n                    await ParsedTimeline.updateOne({\n                        id: verifyTimelineId\n                    }, updateData);\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: true,\n                        message: `시간 검증이 ${isVerified ? '완료' : '해제'}되었습니다.`,\n                        data: {\n                            isTimeVerified: isVerified,\n                            verifiedBy: isVerified ? session?.user?.name || session?.user?.channelId || 'Unknown' : null,\n                            verifiedAt: isVerified ? new Date() : null\n                        }\n                    });\n                } catch (error) {\n                    console.error('시간 검증 업데이트 오류:', error);\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: '시간 검증 업데이트 중 오류가 발생했습니다.'\n                    }, {\n                        status: 500\n                    });\n                }\n            default:\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: '올바르지 않은 action입니다.'\n                }, {\n                    status: 400\n                });\n        }\n    } catch (error) {\n        console.error('타임라인 파서 API 오류:', error);\n        let errorMessage = '알 수 없는 오류가 발생했습니다.';\n        if (error instanceof Error) {\n            errorMessage = error.message;\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: errorMessage\n        }, {\n            status: 500\n        });\n    }\n}\nasync function GET(request) {\n    try {\n        const session = await (0,next_auth_next__WEBPACK_IMPORTED_MODULE_1__.getServerSession)(_lib_authOptions__WEBPACK_IMPORTED_MODULE_2__.authOptions);\n        if (!session || !(0,_lib_permissions__WEBPACK_IMPORTED_MODULE_3__.hasPermission)(session.user.role, _lib_permissions__WEBPACK_IMPORTED_MODULE_3__.Permission.SONGS_VIEW)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: '권한이 필요합니다.'\n            }, {\n                status: 403\n            });\n        }\n        await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_4__[\"default\"])();\n        const { searchParams } = new URL(request.url);\n        const action = searchParams.get('action');\n        switch(action){\n            case 'get-parsed-items':\n                const items = await ParsedTimeline.find().sort({\n                    uploadedDate: -1,\n                    startTimeSeconds: 1\n                });\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    data: items\n                });\n            default:\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: '올바르지 않은 action입니다.'\n                }, {\n                    status: 400\n                });\n        }\n    } catch (error) {\n        console.error('타임라인 파서 GET API 오류:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: '데이터 조회 중 오류가 발생했습니다.'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/timeline-parser/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/adminChannels.ts":
/*!**********************************!*\
  !*** ./src/lib/adminChannels.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AYAUKE_ADMIN_CHANNELS: () => (/* binding */ AYAUKE_ADMIN_CHANNELS),\n/* harmony export */   AYAUKE_ADMIN_CHANNEL_IDS: () => (/* binding */ AYAUKE_ADMIN_CHANNEL_IDS),\n/* harmony export */   SUPER_ADMIN_CHANNELS: () => (/* binding */ SUPER_ADMIN_CHANNELS),\n/* harmony export */   SUPER_ADMIN_CHANNEL_IDS: () => (/* binding */ SUPER_ADMIN_CHANNEL_IDS),\n/* harmony export */   getAdminInfo: () => (/* binding */ getAdminInfo),\n/* harmony export */   getAyaukeAdminInfo: () => (/* binding */ getAyaukeAdminInfo),\n/* harmony export */   getStaticUserRole: () => (/* binding */ getStaticUserRole),\n/* harmony export */   getSuperAdminInfo: () => (/* binding */ getSuperAdminInfo),\n/* harmony export */   isAdminChannel: () => (/* binding */ isAdminChannel),\n/* harmony export */   isAyaukeAdminChannel: () => (/* binding */ isAyaukeAdminChannel),\n/* harmony export */   isSuperAdminChannel: () => (/* binding */ isSuperAdminChannel)\n/* harmony export */ });\n/* harmony import */ var _permissions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./permissions */ \"(rsc)/./src/lib/permissions.ts\");\n\n// 최고 관리자 권한을 가진 치지직 채널 ID 목록 (하드코딩)\nconst SUPER_ADMIN_CHANNEL_IDS = [\n    'd6017f757614569add71b0bc83a81382'\n];\n// 아야우케 관리자 권한을 가진 치지직 채널 ID 목록 (하드코딩)\nconst AYAUKE_ADMIN_CHANNEL_IDS = [\n    'abe8aa82baf3d3ef54ad8468ee73e7fc'\n];\n// 최고 관리자 채널 정보\nconst SUPER_ADMIN_CHANNELS = {\n    'd6017f757614569add71b0bc83a81382': {\n        name: '개발자',\n        role: '개발 관리자'\n    }\n};\n// 아야우케 관리자 채널 정보  \nconst AYAUKE_ADMIN_CHANNELS = {\n    'abe8aa82baf3d3ef54ad8468ee73e7fc': {\n        name: '아야우케',\n        role: '노래책 관리자'\n    }\n};\nfunction isSuperAdminChannel(channelId) {\n    if (!channelId) return false;\n    return SUPER_ADMIN_CHANNEL_IDS.includes(channelId);\n}\nfunction isAyaukeAdminChannel(channelId) {\n    if (!channelId) return false;\n    return AYAUKE_ADMIN_CHANNEL_IDS.includes(channelId);\n}\nfunction getSuperAdminInfo(channelId) {\n    if (!channelId || !isSuperAdminChannel(channelId)) return null;\n    return SUPER_ADMIN_CHANNELS[channelId] || null;\n}\nfunction getAyaukeAdminInfo(channelId) {\n    if (!channelId || !isAyaukeAdminChannel(channelId)) return null;\n    return AYAUKE_ADMIN_CHANNELS[channelId] || null;\n}\nfunction getStaticUserRole(channelId) {\n    if (!channelId) return _permissions__WEBPACK_IMPORTED_MODULE_0__.UserRole.USER;\n    if (isSuperAdminChannel(channelId)) {\n        return _permissions__WEBPACK_IMPORTED_MODULE_0__.UserRole.SUPER_ADMIN;\n    }\n    if (isAyaukeAdminChannel(channelId)) {\n        return _permissions__WEBPACK_IMPORTED_MODULE_0__.UserRole.AYAUKE_ADMIN;\n    }\n    return _permissions__WEBPACK_IMPORTED_MODULE_0__.UserRole.USER;\n}\n// 하위 호환성을 위한 함수들 (나중에 제거)\nfunction isAdminChannel(channelId) {\n    return isSuperAdminChannel(channelId) || isAyaukeAdminChannel(channelId);\n}\nfunction getAdminInfo(channelId) {\n    return getSuperAdminInfo(channelId) || getAyaukeAdminInfo(channelId);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2FkbWluQ2hhbm5lbHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXdDO0FBRXhDLG9DQUFvQztBQUM3QixNQUFNQywwQkFBMEI7SUFDckM7Q0FDRCxDQUFTO0FBRVYsc0NBQXNDO0FBQy9CLE1BQU1DLDJCQUEyQjtJQUN0QztDQUNELENBQVM7QUFFVixlQUFlO0FBQ1IsTUFBTUMsdUJBQXVCO0lBQ2xDLG9DQUFvQztRQUNsQ0MsTUFBTTtRQUNOQyxNQUFNO0lBQ1I7QUFDRixFQUFVO0FBRVYsbUJBQW1CO0FBQ1osTUFBTUMsd0JBQXdCO0lBQ25DLG9DQUFvQztRQUNsQ0YsTUFBTTtRQUNOQyxNQUFNO0lBQ1I7QUFDRixFQUFVO0FBRUgsU0FBU0Usb0JBQW9CQyxTQUFvQztJQUN0RSxJQUFJLENBQUNBLFdBQVcsT0FBTztJQUN2QixPQUFPUCx3QkFBd0JRLFFBQVEsQ0FBQ0Q7QUFDMUM7QUFFTyxTQUFTRSxxQkFBcUJGLFNBQW9DO0lBQ3ZFLElBQUksQ0FBQ0EsV0FBVyxPQUFPO0lBQ3ZCLE9BQU9OLHlCQUF5Qk8sUUFBUSxDQUFDRDtBQUMzQztBQUVPLFNBQVNHLGtCQUFrQkgsU0FBb0M7SUFDcEUsSUFBSSxDQUFDQSxhQUFhLENBQUNELG9CQUFvQkMsWUFBWSxPQUFPO0lBQzFELE9BQU9MLG9CQUFvQixDQUFDSyxVQUErQyxJQUFJO0FBQ2pGO0FBRU8sU0FBU0ksbUJBQW1CSixTQUFvQztJQUNyRSxJQUFJLENBQUNBLGFBQWEsQ0FBQ0UscUJBQXFCRixZQUFZLE9BQU87SUFDM0QsT0FBT0YscUJBQXFCLENBQUNFLFVBQWdELElBQUk7QUFDbkY7QUFFTyxTQUFTSyxrQkFBa0JMLFNBQW9DO0lBQ3BFLElBQUksQ0FBQ0EsV0FBVyxPQUFPUixrREFBUUEsQ0FBQ2MsSUFBSTtJQUVwQyxJQUFJUCxvQkFBb0JDLFlBQVk7UUFDbEMsT0FBT1Isa0RBQVFBLENBQUNlLFdBQVc7SUFDN0I7SUFFQSxJQUFJTCxxQkFBcUJGLFlBQVk7UUFDbkMsT0FBT1Isa0RBQVFBLENBQUNnQixZQUFZO0lBQzlCO0lBRUEsT0FBT2hCLGtEQUFRQSxDQUFDYyxJQUFJO0FBQ3RCO0FBRUEsMEJBQTBCO0FBQ25CLFNBQVNHLGVBQWVULFNBQW9DO0lBQ2pFLE9BQU9ELG9CQUFvQkMsY0FBY0UscUJBQXFCRjtBQUNoRTtBQUVPLFNBQVNVLGFBQWFWLFNBQW9DO0lBQy9ELE9BQU9HLGtCQUFrQkgsY0FBY0ksbUJBQW1CSjtBQUM1RCIsInNvdXJjZXMiOlsiL21udC9mL0RhdGEvR2l0L2NsYXVkZS1jb2RlL2F5YXVrZS1wYWdlL2F5YXVrZS1wYWdlL3NyYy9saWIvYWRtaW5DaGFubmVscy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBVc2VyUm9sZSB9IGZyb20gJy4vcGVybWlzc2lvbnMnXHJcblxyXG4vLyDstZzqs6Ag6rSA66as7J6QIOq2jO2VnOydhCDqsIDsp4Qg7LmY7KeA7KeBIOyxhOuEkCBJRCDrqqnroZ0gKO2VmOuTnOy9lOuUqSlcclxuZXhwb3J0IGNvbnN0IFNVUEVSX0FETUlOX0NIQU5ORUxfSURTID0gW1xyXG4gICdkNjAxN2Y3NTc2MTQ1NjlhZGQ3MWIwYmM4M2E4MTM4MicsIC8vIOyCrOyaqeyekCAo6rCc67Cc7J6QKVxyXG5dIGFzIGNvbnN0XHJcblxyXG4vLyDslYTslbzsmrDsvIAg6rSA66as7J6QIOq2jO2VnOydhCDqsIDsp4Qg7LmY7KeA7KeBIOyxhOuEkCBJRCDrqqnroZ0gKO2VmOuTnOy9lOuUqSlcclxuZXhwb3J0IGNvbnN0IEFZQVVLRV9BRE1JTl9DSEFOTkVMX0lEUyA9IFtcclxuICAnYWJlOGFhODJiYWYzZDNlZjU0YWQ4NDY4ZWU3M2U3ZmMnLCAvLyDslYTslbzsmrDsvIAgKOuFuOuemOyxhSDqtIDrpqzsnpApXHJcbl0gYXMgY29uc3RcclxuXHJcbi8vIOy1nOqzoCDqtIDrpqzsnpAg7LGE64SQIOygleuztFxyXG5leHBvcnQgY29uc3QgU1VQRVJfQURNSU5fQ0hBTk5FTFMgPSB7XHJcbiAgJ2Q2MDE3Zjc1NzYxNDU2OWFkZDcxYjBiYzgzYTgxMzgyJzoge1xyXG4gICAgbmFtZTogJ+qwnOuwnOyekCcsXHJcbiAgICByb2xlOiAn6rCc67CcIOq0gOumrOyekCcsXHJcbiAgfSxcclxufSBhcyBjb25zdFxyXG5cclxuLy8g7JWE7JW87Jqw7LyAIOq0gOumrOyekCDssYTrhJAg7KCV67O0ICBcclxuZXhwb3J0IGNvbnN0IEFZQVVLRV9BRE1JTl9DSEFOTkVMUyA9IHtcclxuICAnYWJlOGFhODJiYWYzZDNlZjU0YWQ4NDY4ZWU3M2U3ZmMnOiB7XHJcbiAgICBuYW1lOiAn7JWE7JW87Jqw7LyAJyxcclxuICAgIHJvbGU6ICfrhbjrnpjssYUg6rSA66as7J6QJyxcclxuICB9LFxyXG59IGFzIGNvbnN0XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaXNTdXBlckFkbWluQ2hhbm5lbChjaGFubmVsSWQ6IHN0cmluZyB8IG51bGwgfCB1bmRlZmluZWQpOiBib29sZWFuIHtcclxuICBpZiAoIWNoYW5uZWxJZCkgcmV0dXJuIGZhbHNlXHJcbiAgcmV0dXJuIFNVUEVSX0FETUlOX0NIQU5ORUxfSURTLmluY2x1ZGVzKGNoYW5uZWxJZCBhcyBhbnkpXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpc0F5YXVrZUFkbWluQ2hhbm5lbChjaGFubmVsSWQ6IHN0cmluZyB8IG51bGwgfCB1bmRlZmluZWQpOiBib29sZWFuIHtcclxuICBpZiAoIWNoYW5uZWxJZCkgcmV0dXJuIGZhbHNlXHJcbiAgcmV0dXJuIEFZQVVLRV9BRE1JTl9DSEFOTkVMX0lEUy5pbmNsdWRlcyhjaGFubmVsSWQgYXMgYW55KVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0U3VwZXJBZG1pbkluZm8oY2hhbm5lbElkOiBzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkKSB7XHJcbiAgaWYgKCFjaGFubmVsSWQgfHwgIWlzU3VwZXJBZG1pbkNoYW5uZWwoY2hhbm5lbElkKSkgcmV0dXJuIG51bGxcclxuICByZXR1cm4gU1VQRVJfQURNSU5fQ0hBTk5FTFNbY2hhbm5lbElkIGFzIGtleW9mIHR5cGVvZiBTVVBFUl9BRE1JTl9DSEFOTkVMU10gfHwgbnVsbFxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0QXlhdWtlQWRtaW5JbmZvKGNoYW5uZWxJZDogc3RyaW5nIHwgbnVsbCB8IHVuZGVmaW5lZCkge1xyXG4gIGlmICghY2hhbm5lbElkIHx8ICFpc0F5YXVrZUFkbWluQ2hhbm5lbChjaGFubmVsSWQpKSByZXR1cm4gbnVsbFxyXG4gIHJldHVybiBBWUFVS0VfQURNSU5fQ0hBTk5FTFNbY2hhbm5lbElkIGFzIGtleW9mIHR5cGVvZiBBWUFVS0VfQURNSU5fQ0hBTk5FTFNdIHx8IG51bGxcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldFN0YXRpY1VzZXJSb2xlKGNoYW5uZWxJZDogc3RyaW5nIHwgbnVsbCB8IHVuZGVmaW5lZCk6IFVzZXJSb2xlIHtcclxuICBpZiAoIWNoYW5uZWxJZCkgcmV0dXJuIFVzZXJSb2xlLlVTRVJcclxuICBcclxuICBpZiAoaXNTdXBlckFkbWluQ2hhbm5lbChjaGFubmVsSWQpKSB7XHJcbiAgICByZXR1cm4gVXNlclJvbGUuU1VQRVJfQURNSU5cclxuICB9XHJcbiAgXHJcbiAgaWYgKGlzQXlhdWtlQWRtaW5DaGFubmVsKGNoYW5uZWxJZCkpIHtcclxuICAgIHJldHVybiBVc2VyUm9sZS5BWUFVS0VfQURNSU5cclxuICB9XHJcbiAgXHJcbiAgcmV0dXJuIFVzZXJSb2xlLlVTRVJcclxufVxyXG5cclxuLy8g7ZWY7JyEIO2YuO2ZmOyEseydhCDsnITtlZwg7ZWo7IiY65OkICjrgpjspJHsl5Ag7KCc6rGwKVxyXG5leHBvcnQgZnVuY3Rpb24gaXNBZG1pbkNoYW5uZWwoY2hhbm5lbElkOiBzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkKTogYm9vbGVhbiB7XHJcbiAgcmV0dXJuIGlzU3VwZXJBZG1pbkNoYW5uZWwoY2hhbm5lbElkKSB8fCBpc0F5YXVrZUFkbWluQ2hhbm5lbChjaGFubmVsSWQpXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRBZG1pbkluZm8oY2hhbm5lbElkOiBzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkKSB7XHJcbiAgcmV0dXJuIGdldFN1cGVyQWRtaW5JbmZvKGNoYW5uZWxJZCkgfHwgZ2V0QXlhdWtlQWRtaW5JbmZvKGNoYW5uZWxJZClcclxufSJdLCJuYW1lcyI6WyJVc2VyUm9sZSIsIlNVUEVSX0FETUlOX0NIQU5ORUxfSURTIiwiQVlBVUtFX0FETUlOX0NIQU5ORUxfSURTIiwiU1VQRVJfQURNSU5fQ0hBTk5FTFMiLCJuYW1lIiwicm9sZSIsIkFZQVVLRV9BRE1JTl9DSEFOTkVMUyIsImlzU3VwZXJBZG1pbkNoYW5uZWwiLCJjaGFubmVsSWQiLCJpbmNsdWRlcyIsImlzQXlhdWtlQWRtaW5DaGFubmVsIiwiZ2V0U3VwZXJBZG1pbkluZm8iLCJnZXRBeWF1a2VBZG1pbkluZm8iLCJnZXRTdGF0aWNVc2VyUm9sZSIsIlVTRVIiLCJTVVBFUl9BRE1JTiIsIkFZQVVLRV9BRE1JTiIsImlzQWRtaW5DaGFubmVsIiwiZ2V0QWRtaW5JbmZvIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/adminChannels.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/authOptions.ts":
/*!********************************!*\
  !*** ./src/lib/authOptions.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions)\n/* harmony export */ });\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/providers/credentials */ \"(rsc)/./node_modules/next-auth/providers/credentials.js\");\n/* harmony import */ var _lib_chzzkCookieManual__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/chzzkCookieManual */ \"(rsc)/./src/lib/chzzkCookieManual.ts\");\n/* harmony import */ var _lib_adminChannels__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/adminChannels */ \"(rsc)/./src/lib/adminChannels.ts\");\n/* harmony import */ var _lib_permissions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/permissions */ \"(rsc)/./src/lib/permissions.ts\");\n/* harmony import */ var _lib_userService__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/userService */ \"(rsc)/./src/lib/userService.ts\");\n/* harmony import */ var _lib_mongodb__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/mongodb */ \"(rsc)/./src/lib/mongodb.ts\");\n/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/models/User */ \"(rsc)/./src/models/User.ts\");\n/* harmony import */ var _models_UserActivity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/models/UserActivity */ \"(rsc)/./src/models/UserActivity.ts\");\n/* harmony import */ var _lib_chzzkOAuthProvider__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/lib/chzzkOAuthProvider */ \"(rsc)/./src/lib/chzzkOAuthProvider.ts\");\n/* harmony import */ var _lib_titleSystem__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/lib/titleSystem */ \"(rsc)/./src/lib/titleSystem.ts\");\n\n\n\n\n\n\n\n\n\n\n// 사용자 정보 메모리 캐시 (5분간 유효)\nconst userCache = new Map();\nconst CACHE_DURATION = 5 * 60 * 1000 // 5분\n;\n// 캐시된 사용자 정보 조회\nasync function getCachedUser(channelId) {\n    const now = Date.now();\n    const cached = userCache.get(channelId);\n    // 캐시가 있고 아직 유효하면 캐시 사용\n    if (cached && now - cached.timestamp < CACHE_DURATION) {\n        return cached.data;\n    }\n    // 캐시가 없거나 만료되었으면 DB 조회\n    try {\n        await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n        const user = await _models_User__WEBPACK_IMPORTED_MODULE_6__[\"default\"].findOne({\n            channelId\n        });\n        // 조회 결과를 캐시에 저장\n        userCache.set(channelId, {\n            data: user,\n            timestamp: now\n        });\n        return user;\n    } catch (error) {\n        // DB 조회 실패 시 만료된 캐시라도 있으면 사용\n        if (cached) {\n            console.log('DB 조회 실패, 만료된 캐시 사용:', channelId);\n            return cached.data;\n        }\n        throw error;\n    }\n}\nconst authOptions = {\n    providers: [\n        (0,_lib_chzzkOAuthProvider__WEBPACK_IMPORTED_MODULE_8__[\"default\"])({\n            clientId: process.env.CHZZK_CLIENT_ID,\n            clientSecret: process.env.CHZZK_CLIENT_SECRET\n        }),\n        (0,next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n            id: \"chzzk-cookie\",\n            name: \"치지직 쿠키 로그인\",\n            credentials: {\n                cookies: {\n                    label: \"치지직 쿠키\",\n                    type: \"text\",\n                    placeholder: \"NID_AUT=...; NID_SES=...\"\n                }\n            },\n            async authorize (credentials) {\n                try {\n                    if (!credentials?.cookies) return null;\n                    const { client, userInfo } = await (0,_lib_chzzkCookieManual__WEBPACK_IMPORTED_MODULE_1__.createManualChzzkClient)('cookie-user', credentials.cookies);\n                    if (!userInfo || !userInfo.loggedIn) return null;\n                    let channelInfo = null;\n                    try {\n                        if (client.channel && typeof client.channel.info === 'function') {\n                            channelInfo = await client.channel.info(userInfo.userIdHash);\n                        }\n                    } catch (error) {\n                        console.log('채널 정보 가져오기 실패:', error);\n                    }\n                    const channelId = channelInfo?.channelId || userInfo.userIdHash;\n                    const channelName = channelInfo?.channelName || userInfo.nickname || '치지직 사용자';\n                    const isAdmin = (0,_lib_adminChannels__WEBPACK_IMPORTED_MODULE_2__.isAdminChannel)(channelId);\n                    const adminInfo = (0,_lib_adminChannels__WEBPACK_IMPORTED_MODULE_2__.getAdminInfo)(channelId);\n                    const result = {\n                        id: userInfo.userIdHash,\n                        name: channelName,\n                        email: null,\n                        image: channelInfo?.channelImageUrl || null,\n                        naverId: null,\n                        channelId: channelId,\n                        channelName: channelName,\n                        channelImageUrl: channelInfo?.channelImageUrl || null,\n                        followerCount: channelInfo?.followerCount || null,\n                        isAdmin,\n                        adminRole: adminInfo?.role || null\n                    };\n                    try {\n                        await (0,_lib_userService__WEBPACK_IMPORTED_MODULE_4__.createOrUpdateUser)({\n                            channelId: channelId,\n                            channelName: channelName,\n                            profileImageUrl: channelInfo?.channelImageUrl\n                        });\n                    } catch (dbError) {\n                        console.error('사용자 DB 저장 오류:', dbError);\n                    }\n                    return result;\n                } catch (error) {\n                    console.error('치지직 쿠키 로그인 오류:', error);\n                    return null;\n                }\n            }\n        })\n    ],\n    callbacks: {\n        async jwt ({ token, user, account }) {\n            if (user) {\n                // OAuth 방식 (치지직 공식 API)\n                if (account?.provider === 'chzzk') {\n                    const channelId = user.channelId || user.id;\n                    const channelName = user.channelName || user.name;\n                    const role = (0,_lib_adminChannels__WEBPACK_IMPORTED_MODULE_2__.getStaticUserRole)(channelId);\n                    const adminInfo = (0,_lib_adminChannels__WEBPACK_IMPORTED_MODULE_2__.getAdminInfo)(channelId);\n                    token.naverId = null;\n                    token.channelId = channelId;\n                    token.channelName = channelName;\n                    token.channelImageUrl = user.channelImageUrl || user.image;\n                    token.followerCount = user.followerCount;\n                    token.role = role;\n                    token.isAdmin = (0,_lib_permissions__WEBPACK_IMPORTED_MODULE_3__.roleToIsAdmin)(role) // 하위 호환성\n                    ;\n                    token.adminRole = adminInfo?.role || null;\n                    // 사용자 정보 DB에 저장\n                    try {\n                        const dbUser = await (0,_lib_userService__WEBPACK_IMPORTED_MODULE_4__.createOrUpdateUser)({\n                            channelId: channelId,\n                            channelName: channelName,\n                            profileImageUrl: user.channelImageUrl || user.image\n                        });\n                        token.userId = dbUser._id.toString() // MongoDB ObjectId를 토큰에 저장\n                        ;\n                    } catch (dbError) {\n                        console.error('OAuth 사용자 DB 저장 오류:', dbError);\n                    }\n                } else {\n                    const role = (0,_lib_adminChannels__WEBPACK_IMPORTED_MODULE_2__.getStaticUserRole)(user.channelId);\n                    const adminInfo = (0,_lib_adminChannels__WEBPACK_IMPORTED_MODULE_2__.getAdminInfo)(user.channelId);\n                    token.naverId = user.naverId;\n                    token.channelId = user.channelId;\n                    token.channelName = user.channelName;\n                    token.channelImageUrl = user.channelImageUrl;\n                    token.followerCount = user.followerCount;\n                    token.role = role;\n                    token.isAdmin = (0,_lib_permissions__WEBPACK_IMPORTED_MODULE_3__.roleToIsAdmin)(role) // 하위 호환성\n                    ;\n                    token.adminRole = adminInfo?.role || null;\n                    // 쿠키 방식에서도 DB에 사용자 정보 저장하고 ObjectId 가져오기\n                    try {\n                        const dbUser = await (0,_lib_userService__WEBPACK_IMPORTED_MODULE_4__.createOrUpdateUser)({\n                            channelId: user.channelId,\n                            channelName: user.channelName,\n                            profileImageUrl: user.channelImageUrl\n                        });\n                        token.userId = dbUser._id.toString() // MongoDB ObjectId를 토큰에 저장\n                        ;\n                    } catch (dbError) {\n                        console.error('쿠키 방식 사용자 DB 저장 오류:', dbError);\n                    }\n                }\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            if (token && session.user) {\n                // 기본 토큰 정보 설정\n                session.user.id = token.userId // NextAuth 표준 필드\n                ;\n                session.user.naverId = token.naverId || null;\n                session.user.channelId = token.channelId;\n                session.user.userId = token.userId // MongoDB ObjectId 추가\n                ;\n                session.user.followerCount = token.followerCount;\n                session.user.role = token.role;\n                session.user.isAdmin = token.isAdmin;\n                session.user.adminRole = token.adminRole;\n                // 기본 세션 정보 먼저 설정 (토큰 기반)\n                session.user.channelName = token.channelName;\n                session.user.name = token.channelName;\n                session.user.channelImageUrl = token.channelImageUrl;\n                // 캐시된 사용자 정보 가져오기 (선택적 업데이트)\n                try {\n                    const user = await getCachedUser(token.channelId);\n                    if (user) {\n                        // DB에서 가져온 정보로 업데이트 (기존 정보 덮어씀)\n                        session.user.channelName = user.channelName;\n                        session.user.name = user.displayName || user.channelName;\n                        session.user.image = user.profileImageUrl || session.user.channelImageUrl;\n                        session.user.channelImageUrl = user.profileImageUrl || session.user.channelImageUrl;\n                        session.user.role = user.role // DB에서 가져온 최신 권한 사용\n                        ;\n                        session.user.isAdmin = (0,_lib_permissions__WEBPACK_IMPORTED_MODULE_3__.roleToIsAdmin)(user.role);\n                        // 선택된 칭호 정보 추가\n                        const selectedTitle = (0,_lib_titleSystem__WEBPACK_IMPORTED_MODULE_9__.getSelectedTitleInfo)(user);\n                        session.user.selectedTitle = selectedTitle;\n                    }\n                // DB에 사용자가 없으면 기본 정보 그대로 사용\n                } catch (error) {\n                    console.error('세션 콜백에서 사용자 정보 조회 오류:', error);\n                // DB 연결 실패 시 기본 정보(토큰 기반) 그대로 사용\n                // 별도 처리 불필요 - 이미 위에서 기본값 설정됨\n                }\n            }\n            return session;\n        }\n    },\n    pages: {\n        signIn: '/auth/signin',\n        error: '/auth/error'\n    },\n    session: {\n        strategy: \"jwt\"\n    },\n    secret: process.env.NEXTAUTH_SECRET,\n    debug: false\n};\n// 중복 체크인 방지를 위한 메모리 캐시 (userId:date -> timestamp)\nconst checkinCache = new Map();\n/**\r\n * 세션 콜백에서 자동으로 일일 체크인 처리\r\n */ async function performDailyCheckin(user) {\n    try {\n        const today = new Date().toISOString().split('T')[0] // YYYY-MM-DD\n        ;\n        const now = new Date();\n        // 오늘 활동 기록이 있는지 확인 (세션에서는 첫 방문 생성만)\n        let todayActivity = await _models_UserActivity__WEBPACK_IMPORTED_MODULE_7__[\"default\"].findOne({\n            userId: user._id,\n            date: today\n        });\n        // 오늘 활동 기록이 이미 있으면 아무것도 하지 않음\n        if (todayActivity) {\n            return;\n        }\n        // 기존 사용자의 activityStats가 없으면 초기화\n        if (!user.activityStats) {\n            user.activityStats = {\n                totalLoginDays: 0,\n                currentStreak: 0,\n                longestStreak: 0,\n                lastVisitDate: null\n            };\n        }\n        // 오늘 첫 방문 - 새로운 활동 기록 생성\n        todayActivity = new _models_UserActivity__WEBPACK_IMPORTED_MODULE_7__[\"default\"]({\n            userId: user._id,\n            date: today,\n            visitCount: 1,\n            firstVisitAt: now,\n            lastVisitAt: now\n        });\n        // 연속 접속일 계산\n        const yesterday = new Date();\n        yesterday.setDate(yesterday.getDate() - 1);\n        const yesterdayStr = yesterday.toISOString().split('T')[0];\n        if (user.activityStats.lastVisitDate === yesterdayStr) {\n            // 어제 방문했으면 연속 접속일 증가\n            user.activityStats.currentStreak += 1;\n        } else if (user.activityStats.lastVisitDate !== today) {\n            // 어제 방문 안했으면 연속 접속일 초기화 (오늘부터 1일)\n            user.activityStats.currentStreak = 1;\n        }\n        // 최장 연속 접속일 기록 업데이트\n        if (user.activityStats.currentStreak > user.activityStats.longestStreak) {\n            user.activityStats.longestStreak = user.activityStats.currentStreak;\n        }\n        // 총 로그인 날 수 증가\n        user.activityStats.totalLoginDays += 1;\n        user.activityStats.lastVisitDate = today;\n        await todayActivity.save();\n        await user.save();\n        console.log(`🎯 첫 방문 기록 생성: ${user.channelName} - 연속 ${user.activityStats.currentStreak}일`);\n    } catch (error) {\n        console.error('자동 체크인 처리 오류:', error);\n    // 에러가 발생해도 세션 처리는 계속 진행\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/authOptions.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/chzzkCookieManual.ts":
/*!**************************************!*\
  !*** ./src/lib/chzzkCookieManual.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addManualChzzkCookie: () => (/* binding */ addManualChzzkCookie),\n/* harmony export */   createManualChzzkClient: () => (/* binding */ createManualChzzkClient),\n/* harmony export */   getManualCookies: () => (/* binding */ getManualCookies),\n/* harmony export */   printCookieGuide: () => (/* binding */ printCookieGuide),\n/* harmony export */   removeManualCookie: () => (/* binding */ removeManualCookie)\n/* harmony export */ });\n/* harmony import */ var chzzk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! chzzk */ \"(rsc)/./node_modules/chzzk/dist/index.js\");\n/* harmony import */ var chzzk__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(chzzk__WEBPACK_IMPORTED_MODULE_0__);\n/**\r\n * 수동 쿠키 입력 및 관리 시스템\r\n * 자동 인증이 실패할 경우를 대비한 수동 방법\r\n */ \n// 수동으로 설정할 수 있는 치지직 쿠키 저장소\nconst MANUAL_CHZZK_COOKIES = {\n};\n/**\r\n * 수동 쿠키를 추가하는 함수 (개발자 도구용)\r\n */ function addManualChzzkCookie(naverId, cookies) {\n    MANUAL_CHZZK_COOKIES[naverId] = cookies;\n    console.log(`수동 쿠키 추가됨: ${naverId}`);\n}\n/**\r\n * 수동 쿠키를 사용해서 치지직 클라이언트 생성\r\n */ async function createManualChzzkClient(naverId, providedCookies) {\n    console.log('=== 수동 쿠키로 치지직 클라이언트 생성 ===');\n    // 직접 제공된 쿠키가 있으면 우선 사용\n    const cookies = providedCookies || MANUAL_CHZZK_COOKIES[naverId];\n    if (!cookies) {\n        console.log(`네이버 ID ${naverId}에 대한 수동 쿠키가 없습니다`);\n        return {\n            client: new chzzk__WEBPACK_IMPORTED_MODULE_0__.ChzzkClient(),\n            userInfo: null\n        };\n    }\n    try {\n        console.log('수동 쿠키로 클라이언트 생성:', cookies.substring(0, 50) + '...');\n        console.log('전체 쿠키 길이:', cookies.length);\n        // 쿠키에서 NID_AUT와 NID_SES 추출\n        const nidAuth = cookies.match(/NID_AUT=([^;]+)/)?.[1];\n        const nidSession = cookies.match(/NID_SES=([^;]+)/)?.[1];\n        console.log('추출된 NID_AUT:', nidAuth ? nidAuth.substring(0, 20) + '...' : 'null');\n        console.log('추출된 NID_SES:', nidSession ? nidSession.substring(0, 20) + '...' : 'null');\n        if (!nidAuth || !nidSession) {\n            console.log('필수 쿠키 (NID_AUT 또는 NID_SES)가 없습니다');\n            return {\n                client: new chzzk__WEBPACK_IMPORTED_MODULE_0__.ChzzkClient(),\n                userInfo: null\n            };\n        }\n        // 치지직 비공식 API 클라이언트 생성 (올바른 방식)\n        const client = new chzzk__WEBPACK_IMPORTED_MODULE_0__.ChzzkClient({\n            nidAuth: nidAuth,\n            nidSession: nidSession\n        });\n        console.log('ChzzkClient 생성 완료, 사용자 정보 조회 시도...');\n        // 다양한 API 메서드 시도\n        let userInfo = null;\n        try {\n            console.log('client.user() 메서드 시도...');\n            userInfo = await client.user();\n            console.log('client.user() 결과:', JSON.stringify(userInfo, null, 2));\n        } catch (userError) {\n            console.log('client.user() 실패:', userError);\n            try {\n                console.log('client.me.user() 메서드 시도...');\n                userInfo = await client.me.user();\n                console.log('client.me.user() 결과:', JSON.stringify(userInfo, null, 2));\n            } catch (meError) {\n                console.log('client.me.user() 실패:', meError);\n                try {\n                    console.log('client.me 프로퍼티 확인...');\n                    console.log('client.me:', client.me);\n                    if (client.me && typeof client.me.user === 'function') {\n                        userInfo = await client.me.user();\n                        console.log('client.me.user() 재시도 결과:', JSON.stringify(userInfo, null, 2));\n                    }\n                } catch (me2Error) {\n                    console.log('client.me 재시도 실패:', me2Error);\n                }\n            }\n        }\n        if (userInfo && userInfo.loggedIn) {\n            console.log('수동 쿠키 인증 성공!');\n            return {\n                client,\n                userInfo\n            };\n        } else {\n            console.log('사용자 정보 조회 실패, 하지만 클라이언트는 생성됨');\n            return {\n                client,\n                userInfo: null\n            };\n        }\n    } catch (error) {\n        console.log('수동 쿠키 클라이언트 생성 실패:', error);\n        console.log('error.message:', error instanceof Error ? error.message : 'Unknown error');\n        return {\n            client: new chzzk__WEBPACK_IMPORTED_MODULE_0__.ChzzkClient(),\n            userInfo: null\n        };\n    }\n}\n/**\r\n * 쿠키 설정 가이드 출력\r\n */ function printCookieGuide(naverId) {\n    console.log('=== 치지직 쿠키 수동 설정 가이드 ===');\n    console.log('1. 브라우저에서 https://chzzk.naver.com 에 로그인');\n    console.log('2. 개발자 도구 (F12) → Application/Storage → Cookies');\n    console.log('3. NID_AUT와 NID_SES 쿠키 값을 복사');\n    console.log('4. 다음 코드를 브라우저 콘솔에서 실행:');\n    console.log(``);\n    console.log(`   // 쿠키 값을 여기에 입력`);\n    console.log(`   const cookies = \"NID_AUT=당신의_NID_AUT_값; NID_SES=당신의_NID_SES_값\"`);\n    console.log(`   `);\n    console.log(`   // API 호출`);\n    console.log(`   fetch('/api/admin/set-manual-cookie', {`);\n    console.log(`     method: 'POST',`);\n    console.log(`     headers: { 'Content-Type': 'application/json' },`);\n    console.log(`     body: JSON.stringify({`);\n    console.log(`       naverId: '${naverId}',`);\n    console.log(`       cookies: cookies`);\n    console.log(`     })`);\n    console.log(`   })`);\n    console.log('');\n    console.log('5. 로그아웃 후 다시 로그인하여 테스트');\n}\n/**\r\n * 현재 등록된 수동 쿠키 목록 조회\r\n */ function getManualCookies() {\n    return {\n        ...MANUAL_CHZZK_COOKIES\n    };\n}\n/**\r\n * 수동 쿠키 삭제\r\n */ function removeManualCookie(naverId) {\n    delete MANUAL_CHZZK_COOKIES[naverId];\n    console.log(`수동 쿠키 삭제됨: ${naverId}`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/chzzkCookieManual.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/chzzkOAuthProvider.ts":
/*!***************************************!*\
  !*** ./src/lib/chzzkOAuthProvider.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ChzzkProvider)\n/* harmony export */ });\n// 토큰을 저장할 임시 변수\nlet currentAccessToken = null;\nfunction ChzzkProvider(options) {\n    return {\n        id: \"chzzk\",\n        name: \"치지직\",\n        type: \"oauth\",\n        authorization: {\n            url: \"https://chzzk.naver.com/account-interlock\",\n            params: {\n                clientId: options.clientId,\n                redirectUri: `${process.env.NEXTAUTH_URL}/api/auth/callback/chzzk`,\n                response_type: \"code\"\n            }\n        },\n        // 디버깅을 위한 로그\n        ... true && {\n            debug: true\n        },\n        token: {\n            url: \"https://chzzk.naver.com/auth/v1/token\",\n            async request (context) {\n                const response = await fetch(\"https://chzzk.naver.com/auth/v1/token\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        grantType: \"authorization_code\",\n                        clientId: options.clientId,\n                        clientSecret: options.clientSecret,\n                        code: context.params.code,\n                        state: context.params.state\n                    })\n                });\n                if (!response.ok) {\n                    const errorText = await response.text();\n                    console.error('치지직 토큰 요청 실패:', {\n                        status: response.status,\n                        statusText: response.statusText,\n                        error: errorText,\n                        clientId: options.clientId,\n                        redirectUri: `${process.env.NEXTAUTH_URL}/api/auth/callback/chzzk`\n                    });\n                    // API 승인 관련 오류인지 확인\n                    if (response.status === 401 || response.status === 403) {\n                        throw new Error(`치지직 API 승인이 필요합니다. 클라이언트 ID/SECRET을 확인하거나 API 승인 상태를 확인하세요. (${response.status})`);\n                    }\n                    throw new Error(`Token request failed: ${response.status} - ${errorText}`);\n                }\n                const tokens = await response.json();\n                const result = {\n                    access_token: tokens.content?.accessToken || tokens.accessToken,\n                    refresh_token: tokens.content?.refreshToken || tokens.refreshToken,\n                    token_type: tokens.content?.tokenType || tokens.tokenType || \"Bearer\",\n                    expires_in: tokens.content?.expiresIn || tokens.expiresIn || 86400\n                };\n                // 토큰을 임시 변수에 저장\n                currentAccessToken = result.access_token;\n                return result;\n            }\n        },\n        userinfo: {\n            url: \"https://chzzk.naver.com/open/v1/users/me\",\n            async request (context) {\n                // context에서 토큰을 가져오거나 임시 저장된 토큰 사용\n                const accessToken = context.tokens?.access_token || currentAccessToken;\n                // 액세스 토큰이 없으면 로그인 실패\n                if (!accessToken) {\n                    throw new Error('Access token not found');\n                }\n                // 치지직 공식 사용자 정보 API 호출\n                try {\n                    const response = await fetch(\"https://openapi.chzzk.naver.com/open/v1/users/me\", {\n                        method: \"GET\",\n                        headers: {\n                            Authorization: `Bearer ${accessToken}`,\n                            \"Content-Type\": \"application/json\"\n                        }\n                    });\n                    if (response.ok) {\n                        const userData = await response.json();\n                        const content = userData.content || userData;\n                        if (content.channelId && content.channelName) {\n                            return {\n                                userIdHash: content.channelId,\n                                nickname: content.channelName || content.nickname,\n                                profileImageUrl: content.profileImageUrl || content.channelImageUrl,\n                                channelId: content.channelId,\n                                channelName: content.channelName || content.nickname,\n                                channelImageUrl: content.channelImageUrl,\n                                followerCount: content.followerCount || 0\n                            };\n                        }\n                    } else {\n                        const errorText = await response.text();\n                        console.error('치지직 사용자 정보 API 호출 실패:', {\n                            status: response.status,\n                            statusText: response.statusText,\n                            error: errorText,\n                            accessToken: accessToken ? '토큰 있음' : '토큰 없음'\n                        });\n                        // API 승인 관련 오류인지 확인\n                        if (response.status === 401 || response.status === 403) {\n                            throw new Error(`치지직 API 승인이 필요합니다. 개발자 콘솔에서 API 승인 상태를 확인하세요. (${response.status})`);\n                        }\n                    }\n                // 공식 API 응답이 유효하지 않음\n                } catch (error) {\n                    console.error('치지직 공식 API 호출 실패:', error);\n                    // API 승인 관련 오류라면 더 명확한 메시지 표시\n                    if (error.message && error.message.includes('승인')) {\n                        throw error;\n                    }\n                }\n                // Fallback API들 시도\n                const fallbackUrls = [\n                    'https://api.chzzk.naver.com/open/v1/users/me',\n                    'https://comm-api.game.naver.com/nng_main/v1/user/getUserStatus'\n                ];\n                for (const url of fallbackUrls){\n                    try {\n                        const response = await fetch(url, {\n                            method: \"GET\",\n                            headers: {\n                                Authorization: `Bearer ${accessToken}`,\n                                \"Content-Type\": \"application/json\"\n                            }\n                        });\n                        if (response.ok) {\n                            const responseText = await response.text();\n                            // HTML 응답 건너뛰기\n                            if (responseText.includes('<!doctype html>')) continue;\n                            const userData = JSON.parse(responseText);\n                            const content = userData.content || userData.response || userData;\n                            if (content.channelId && content.channelName) {\n                                return {\n                                    userIdHash: content.channelId,\n                                    nickname: content.channelName,\n                                    profileImageUrl: content.profileImageUrl || content.channelImageUrl,\n                                    channelId: content.channelId,\n                                    channelName: content.channelName,\n                                    channelImageUrl: content.channelImageUrl,\n                                    followerCount: content.followerCount || 0\n                                };\n                            }\n                        }\n                    } catch (error) {\n                        continue;\n                    }\n                }\n                // 모든 API 실패\n                throw new Error('Chzzk user info API failed');\n            }\n        },\n        profile (profile) {\n            return {\n                id: profile.userIdHash,\n                name: profile.channelName || profile.nickname,\n                email: null,\n                image: profile.channelImageUrl || profile.profileImageUrl,\n                channelId: profile.channelId || profile.userIdHash,\n                channelName: profile.channelName || profile.nickname,\n                channelImageUrl: profile.channelImageUrl,\n                followerCount: profile.followerCount\n            };\n        },\n        ...options\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/chzzkOAuthProvider.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/mongodb.ts":
/*!****************************!*\
  !*** ./src/lib/mongodb.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connectToDatabase: () => (/* binding */ dbConnect),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst MONGODB_URI = process.env.MONGODB_URI;\nif (!MONGODB_URI) {\n    throw new Error('Please define the MONGODB_URI environment variable inside .env.local');\n}\nlet cached = global.mongoose;\nif (!cached) {\n    cached = global.mongoose = {\n        conn: null,\n        promise: null\n    };\n}\nasync function dbConnect() {\n    if (cached.conn) {\n        // console.log('🔄 기존 MongoDB 연결 재사용');\n        return cached.conn;\n    }\n    if (!cached.promise) {\n        // console.log('🚀 새로운 MongoDB 연결 시작...');\n        // console.log('📍 MongoDB URI:', MONGODB_URI ? 'URI 설정됨' : 'URI 없음');\n        const opts = {\n            bufferCommands: false,\n            serverSelectionTimeoutMS: 8000,\n            connectTimeoutMS: 8000,\n            socketTimeoutMS: 8000,\n            // 재시도 옵션\n            retryWrites: true,\n            retryReads: true,\n            maxPoolSize: 10,\n            minPoolSize: 1,\n            maxIdleTimeMS: 30000,\n            // Heartbeat 옵션\n            heartbeatFrequencyMS: 10000\n        };\n        cached.promise = mongoose__WEBPACK_IMPORTED_MODULE_0___default().connect(MONGODB_URI, opts).then((mongoose)=>{\n            // console.log('✅ MongoDB 연결 성공!');\n            return mongoose;\n        });\n    }\n    try {\n        cached.conn = await cached.promise;\n    } catch (e) {\n        console.error('❌ MongoDB 연결 실패:', e);\n        cached.promise = null;\n        throw e;\n    }\n    return cached.conn;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dbConnect);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL21vbmdvZGIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFnQztBQUVoQyxNQUFNQyxjQUFjQyxRQUFRQyxHQUFHLENBQUNGLFdBQVc7QUFFM0MsSUFBSSxDQUFDQSxhQUFhO0lBQ2hCLE1BQU0sSUFBSUcsTUFDUjtBQUVKO0FBV0EsSUFBSUMsU0FBU0MsT0FBT04sUUFBUTtBQUU1QixJQUFJLENBQUNLLFFBQVE7SUFDWEEsU0FBU0MsT0FBT04sUUFBUSxHQUFHO1FBQUVPLE1BQU07UUFBTUMsU0FBUztJQUFLO0FBQ3pEO0FBRUEsZUFBZUM7SUFDYixJQUFJSixPQUFPRSxJQUFJLEVBQUU7UUFDZix1Q0FBdUM7UUFDdkMsT0FBT0YsT0FBT0UsSUFBSTtJQUNwQjtJQUVBLElBQUksQ0FBQ0YsT0FBT0csT0FBTyxFQUFFO1FBQ25CLDBDQUEwQztRQUMxQyxzRUFBc0U7UUFFdEUsTUFBTUUsT0FBTztZQUNYQyxnQkFBZ0I7WUFDaEJDLDBCQUEwQjtZQUMxQkMsa0JBQWtCO1lBQ2xCQyxpQkFBaUI7WUFDakIsU0FBUztZQUNUQyxhQUFhO1lBQ2JDLFlBQVk7WUFDWkMsYUFBYTtZQUNiQyxhQUFhO1lBQ2JDLGVBQWU7WUFDZixlQUFlO1lBQ2ZDLHNCQUFzQjtRQUN4QjtRQUVBZixPQUFPRyxPQUFPLEdBQUdSLHVEQUFnQixDQUFDQyxhQUFjUyxNQUFNWSxJQUFJLENBQUMsQ0FBQ3RCO1lBQzFELG1DQUFtQztZQUNuQyxPQUFPQTtRQUNUO0lBQ0Y7SUFFQSxJQUFJO1FBQ0ZLLE9BQU9FLElBQUksR0FBRyxNQUFNRixPQUFPRyxPQUFPO0lBQ3BDLEVBQUUsT0FBT2UsR0FBRztRQUNWQyxRQUFRQyxLQUFLLENBQUMsb0JBQW9CRjtRQUNsQ2xCLE9BQU9HLE9BQU8sR0FBRztRQUNqQixNQUFNZTtJQUNSO0lBRUEsT0FBT2xCLE9BQU9FLElBQUk7QUFDcEI7QUFFQSxpRUFBZUUsU0FBU0EsRUFBQztBQUNpQiIsInNvdXJjZXMiOlsiL21udC9mL0RhdGEvR2l0L2NsYXVkZS1jb2RlL2F5YXVrZS1wYWdlL2F5YXVrZS1wYWdlL3NyYy9saWIvbW9uZ29kYi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xyXG5cclxuY29uc3QgTU9OR09EQl9VUkkgPSBwcm9jZXNzLmVudi5NT05HT0RCX1VSSTtcclxuXHJcbmlmICghTU9OR09EQl9VUkkpIHtcclxuICB0aHJvdyBuZXcgRXJyb3IoXHJcbiAgICAnUGxlYXNlIGRlZmluZSB0aGUgTU9OR09EQl9VUkkgZW52aXJvbm1lbnQgdmFyaWFibGUgaW5zaWRlIC5lbnYubG9jYWwnXHJcbiAgKTtcclxufVxyXG5cclxuaW50ZXJmYWNlIE1vbmdvb3NlQ2FjaGUge1xyXG4gIGNvbm46IHR5cGVvZiBtb25nb29zZSB8IG51bGw7XHJcbiAgcHJvbWlzZTogUHJvbWlzZTx0eXBlb2YgbW9uZ29vc2U+IHwgbnVsbDtcclxufVxyXG5cclxuZGVjbGFyZSBnbG9iYWwge1xyXG4gIHZhciBtb25nb29zZTogTW9uZ29vc2VDYWNoZTtcclxufVxyXG5cclxubGV0IGNhY2hlZCA9IGdsb2JhbC5tb25nb29zZTtcclxuXHJcbmlmICghY2FjaGVkKSB7XHJcbiAgY2FjaGVkID0gZ2xvYmFsLm1vbmdvb3NlID0geyBjb25uOiBudWxsLCBwcm9taXNlOiBudWxsIH07XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGRiQ29ubmVjdCgpOiBQcm9taXNlPHR5cGVvZiBtb25nb29zZT4ge1xyXG4gIGlmIChjYWNoZWQuY29ubikge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ/CflIQg6riw7KG0IE1vbmdvREIg7Jew6rKwIOyerOyCrOyaqScpO1xyXG4gICAgcmV0dXJuIGNhY2hlZC5jb25uO1xyXG4gIH1cclxuXHJcbiAgaWYgKCFjYWNoZWQucHJvbWlzZSkge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ/CfmoAg7IOI66Gc7Jq0IE1vbmdvREIg7Jew6rKwIOyLnOyekS4uLicpO1xyXG4gICAgLy8gY29uc29sZS5sb2coJ/Cfk40gTW9uZ29EQiBVUkk6JywgTU9OR09EQl9VUkkgPyAnVVJJIOyEpOygleuQqCcgOiAnVVJJIOyXhuydjCcpO1xyXG4gICAgXHJcbiAgICBjb25zdCBvcHRzID0ge1xyXG4gICAgICBidWZmZXJDb21tYW5kczogZmFsc2UsXHJcbiAgICAgIHNlcnZlclNlbGVjdGlvblRpbWVvdXRNUzogODAwMCwgLy8gOOy0iOuhnCDspp3qsIBcclxuICAgICAgY29ubmVjdFRpbWVvdXRNUzogODAwMCxcclxuICAgICAgc29ja2V0VGltZW91dE1TOiA4MDAwLFxyXG4gICAgICAvLyDsnqzsi5zrj4Qg7Ji17IWYXHJcbiAgICAgIHJldHJ5V3JpdGVzOiB0cnVlLFxyXG4gICAgICByZXRyeVJlYWRzOiB0cnVlLFxyXG4gICAgICBtYXhQb29sU2l6ZTogMTAsXHJcbiAgICAgIG1pblBvb2xTaXplOiAxLFxyXG4gICAgICBtYXhJZGxlVGltZU1TOiAzMDAwMCxcclxuICAgICAgLy8gSGVhcnRiZWF0IOyYteyFmFxyXG4gICAgICBoZWFydGJlYXRGcmVxdWVuY3lNUzogMTAwMDAsXHJcbiAgICB9O1xyXG5cclxuICAgIGNhY2hlZC5wcm9taXNlID0gbW9uZ29vc2UuY29ubmVjdChNT05HT0RCX1VSSSEsIG9wdHMpLnRoZW4oKG1vbmdvb3NlKSA9PiB7XHJcbiAgICAgIC8vIGNvbnNvbGUubG9nKCfinIUgTW9uZ29EQiDsl7DqsrAg7ISx6rO1IScpO1xyXG4gICAgICByZXR1cm4gbW9uZ29vc2U7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHRyeSB7XHJcbiAgICBjYWNoZWQuY29ubiA9IGF3YWl0IGNhY2hlZC5wcm9taXNlO1xyXG4gIH0gY2F0Y2ggKGUpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBNb25nb0RCIOyXsOqysCDsi6TtjKg6JywgZSk7XHJcbiAgICBjYWNoZWQucHJvbWlzZSA9IG51bGw7XHJcbiAgICB0aHJvdyBlO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGNhY2hlZC5jb25uO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBkYkNvbm5lY3Q7XHJcbmV4cG9ydCB7IGRiQ29ubmVjdCBhcyBjb25uZWN0VG9EYXRhYmFzZSB9OyJdLCJuYW1lcyI6WyJtb25nb29zZSIsIk1PTkdPREJfVVJJIiwicHJvY2VzcyIsImVudiIsIkVycm9yIiwiY2FjaGVkIiwiZ2xvYmFsIiwiY29ubiIsInByb21pc2UiLCJkYkNvbm5lY3QiLCJvcHRzIiwiYnVmZmVyQ29tbWFuZHMiLCJzZXJ2ZXJTZWxlY3Rpb25UaW1lb3V0TVMiLCJjb25uZWN0VGltZW91dE1TIiwic29ja2V0VGltZW91dE1TIiwicmV0cnlXcml0ZXMiLCJyZXRyeVJlYWRzIiwibWF4UG9vbFNpemUiLCJtaW5Qb29sU2l6ZSIsIm1heElkbGVUaW1lTVMiLCJoZWFydGJlYXRGcmVxdWVuY3lNUyIsImNvbm5lY3QiLCJ0aGVuIiwiZSIsImNvbnNvbGUiLCJlcnJvciIsImNvbm5lY3RUb0RhdGFiYXNlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/mongodb.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/permissions.ts":
/*!********************************!*\
  !*** ./src/lib/permissions.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Permission: () => (/* binding */ Permission),\n/* harmony export */   UserRole: () => (/* binding */ UserRole),\n/* harmony export */   canAccessAdminPanel: () => (/* binding */ canAccessAdminPanel),\n/* harmony export */   canManageSongs: () => (/* binding */ canManageSongs),\n/* harmony export */   hasPermission: () => (/* binding */ hasPermission),\n/* harmony export */   isSuperAdmin: () => (/* binding */ isSuperAdmin),\n/* harmony export */   roleToIsAdmin: () => (/* binding */ roleToIsAdmin)\n/* harmony export */ });\nvar UserRole = /*#__PURE__*/ function(UserRole) {\n    UserRole[\"SUPER_ADMIN\"] = \"super_admin\";\n    UserRole[\"SONG_ADMIN\"] = \"song_admin\";\n    UserRole[\"AYAUKE_ADMIN\"] = \"ayauke_admin\";\n    UserRole[\"SONG_EDITOR\"] = \"song_editor\";\n    UserRole[\"USER\"] = \"user\";\n    return UserRole;\n}({});\nvar Permission = /*#__PURE__*/ function(Permission) {\n    // 시스템 관리\n    Permission[\"SYSTEM_ADMIN\"] = \"system.admin\";\n    Permission[\"USER_MANAGE\"] = \"users.manage\";\n    // 노래 관리\n    Permission[\"SONGS_VIEW\"] = \"songs.view\";\n    Permission[\"SONGS_CREATE\"] = \"songs.create\";\n    Permission[\"SONGS_EDIT\"] = \"songs.edit\";\n    Permission[\"SONGS_DELETE\"] = \"songs.delete\";\n    Permission[\"SONGS_BULK_EDIT\"] = \"songs.bulk_edit\";\n    Permission[\"SONGS_STATS\"] = \"songs.stats\";\n    return Permission;\n}({});\nconst ROLE_PERMISSIONS = {\n    [\"super_admin\"]: [\n        \"system.admin\",\n        \"users.manage\",\n        \"songs.view\",\n        \"songs.create\",\n        \"songs.edit\",\n        \"songs.delete\",\n        \"songs.bulk_edit\",\n        \"songs.stats\"\n    ],\n    [\"song_admin\"]: [\n        \"songs.view\",\n        \"songs.create\",\n        \"songs.edit\",\n        \"songs.delete\",\n        \"songs.bulk_edit\",\n        \"songs.stats\"\n    ],\n    [\"ayauke_admin\"]: [\n        \"songs.view\",\n        \"songs.create\",\n        \"songs.edit\",\n        \"songs.delete\",\n        \"songs.bulk_edit\",\n        \"songs.stats\"\n    ],\n    [\"song_editor\"]: [\n        \"songs.view\",\n        \"songs.edit\",\n        \"songs.stats\"\n    ],\n    [\"user\"]: []\n};\nfunction hasPermission(userRole, permission) {\n    const permissions = ROLE_PERMISSIONS[userRole] || [];\n    return permissions.includes(permission);\n}\nfunction canAccessAdminPanel(role) {\n    return role !== \"user\";\n}\nfunction isSuperAdmin(role) {\n    return role === \"super_admin\";\n}\nfunction canManageSongs(role) {\n    return hasPermission(role, \"songs.view\");\n}\n// 하위 호환성을 위한 임시 함수 (나중에 제거)\nfunction roleToIsAdmin(role) {\n    return role !== \"user\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3Blcm1pc3Npb25zLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBTyxzQ0FBS0E7Ozs7OztXQUFBQTtNQU1YO0FBRU0sd0NBQUtDO0lBQ1YsU0FBUzs7O0lBSVQsUUFBUTs7Ozs7OztXQUxFQTtNQVlYO0FBRUQsTUFBTUMsbUJBQW1CO0lBQ3ZCLGVBQXNCLEVBQUU7Ozs7Ozs7OztLQVN2QjtJQUNELGNBQXFCLEVBQUU7Ozs7Ozs7S0FPdEI7SUFDRCxnQkFBdUIsRUFBRTs7Ozs7OztLQU94QjtJQUNELGVBQXNCLEVBQUU7Ozs7S0FJdkI7SUFDRCxRQUFlLEVBQUUsRUFBRTtBQUNyQjtBQUVPLFNBQVNDLGNBQWNDLFFBQWtCLEVBQUVDLFVBQXNCO0lBQ3RFLE1BQU1DLGNBQWNKLGdCQUFnQixDQUFDRSxTQUFTLElBQUksRUFBRTtJQUNwRCxPQUFPRSxZQUFZQyxRQUFRLENBQUNGO0FBQzlCO0FBRU8sU0FBU0csb0JBQW9CQyxJQUFjO0lBQ2hELE9BQU9BO0FBQ1Q7QUFFTyxTQUFTQyxhQUFhRCxJQUFjO0lBQ3pDLE9BQU9BO0FBQ1Q7QUFFTyxTQUFTRSxlQUFlRixJQUFjO0lBQzNDLE9BQU9OLGNBQWNNO0FBQ3ZCO0FBRUEsNEJBQTRCO0FBQ3JCLFNBQVNHLGNBQWNILElBQWM7SUFDMUMsT0FBT0E7QUFDVCIsInNvdXJjZXMiOlsiL21udC9mL0RhdGEvR2l0L2NsYXVkZS1jb2RlL2F5YXVrZS1wYWdlL2F5YXVrZS1wYWdlL3NyYy9saWIvcGVybWlzc2lvbnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGVudW0gVXNlclJvbGUge1xyXG4gIFNVUEVSX0FETUlOID0gJ3N1cGVyX2FkbWluJyxcclxuICBTT05HX0FETUlOID0gJ3NvbmdfYWRtaW4nLCBcclxuICBBWUFVS0VfQURNSU4gPSAnYXlhdWtlX2FkbWluJywgLy8g7JWE7JW87Jqw7LyAIOq0gOumrOyekCAoU09OR19BRE1JTuqzvCDrj5nsnbztlZwg6raM7ZWcKVxyXG4gIFNPTkdfRURJVE9SID0gJ3NvbmdfZWRpdG9yJyxcclxuICBVU0VSID0gJ3VzZXInXHJcbn1cclxuXHJcbmV4cG9ydCBlbnVtIFBlcm1pc3Npb24ge1xyXG4gIC8vIOyLnOyKpO2FnCDqtIDrpqxcclxuICBTWVNURU1fQURNSU4gPSAnc3lzdGVtLmFkbWluJyxcclxuICBVU0VSX01BTkFHRSA9ICd1c2Vycy5tYW5hZ2UnLFxyXG4gIFxyXG4gIC8vIOuFuOuemCDqtIDrpqxcclxuICBTT05HU19WSUVXID0gJ3NvbmdzLnZpZXcnLFxyXG4gIFNPTkdTX0NSRUFURSA9ICdzb25ncy5jcmVhdGUnLFxyXG4gIFNPTkdTX0VESVQgPSAnc29uZ3MuZWRpdCcsXHJcbiAgU09OR1NfREVMRVRFID0gJ3NvbmdzLmRlbGV0ZScsXHJcbiAgU09OR1NfQlVMS19FRElUID0gJ3NvbmdzLmJ1bGtfZWRpdCcsXHJcbiAgU09OR1NfU1RBVFMgPSAnc29uZ3Muc3RhdHMnLFxyXG59XHJcblxyXG5jb25zdCBST0xFX1BFUk1JU1NJT05TID0ge1xyXG4gIFtVc2VyUm9sZS5TVVBFUl9BRE1JTl06IFtcclxuICAgIFBlcm1pc3Npb24uU1lTVEVNX0FETUlOLFxyXG4gICAgUGVybWlzc2lvbi5VU0VSX01BTkFHRSxcclxuICAgIFBlcm1pc3Npb24uU09OR1NfVklFVyxcclxuICAgIFBlcm1pc3Npb24uU09OR1NfQ1JFQVRFLFxyXG4gICAgUGVybWlzc2lvbi5TT05HU19FRElULFxyXG4gICAgUGVybWlzc2lvbi5TT05HU19ERUxFVEUsXHJcbiAgICBQZXJtaXNzaW9uLlNPTkdTX0JVTEtfRURJVCxcclxuICAgIFBlcm1pc3Npb24uU09OR1NfU1RBVFMsXHJcbiAgXSxcclxuICBbVXNlclJvbGUuU09OR19BRE1JTl06IFtcclxuICAgIFBlcm1pc3Npb24uU09OR1NfVklFVyxcclxuICAgIFBlcm1pc3Npb24uU09OR1NfQ1JFQVRFLFxyXG4gICAgUGVybWlzc2lvbi5TT05HU19FRElULFxyXG4gICAgUGVybWlzc2lvbi5TT05HU19ERUxFVEUsXHJcbiAgICBQZXJtaXNzaW9uLlNPTkdTX0JVTEtfRURJVCxcclxuICAgIFBlcm1pc3Npb24uU09OR1NfU1RBVFMsXHJcbiAgXSxcclxuICBbVXNlclJvbGUuQVlBVUtFX0FETUlOXTogW1xyXG4gICAgUGVybWlzc2lvbi5TT05HU19WSUVXLFxyXG4gICAgUGVybWlzc2lvbi5TT05HU19DUkVBVEUsXHJcbiAgICBQZXJtaXNzaW9uLlNPTkdTX0VESVQsXHJcbiAgICBQZXJtaXNzaW9uLlNPTkdTX0RFTEVURSxcclxuICAgIFBlcm1pc3Npb24uU09OR1NfQlVMS19FRElULFxyXG4gICAgUGVybWlzc2lvbi5TT05HU19TVEFUUyxcclxuICBdLFxyXG4gIFtVc2VyUm9sZS5TT05HX0VESVRPUl06IFtcclxuICAgIFBlcm1pc3Npb24uU09OR1NfVklFVyxcclxuICAgIFBlcm1pc3Npb24uU09OR1NfRURJVCxcclxuICAgIFBlcm1pc3Npb24uU09OR1NfU1RBVFMsXHJcbiAgXSxcclxuICBbVXNlclJvbGUuVVNFUl06IFtdXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBoYXNQZXJtaXNzaW9uKHVzZXJSb2xlOiBVc2VyUm9sZSwgcGVybWlzc2lvbjogUGVybWlzc2lvbik6IGJvb2xlYW4ge1xyXG4gIGNvbnN0IHBlcm1pc3Npb25zID0gUk9MRV9QRVJNSVNTSU9OU1t1c2VyUm9sZV0gfHwgW11cclxuICByZXR1cm4gcGVybWlzc2lvbnMuaW5jbHVkZXMocGVybWlzc2lvbilcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNhbkFjY2Vzc0FkbWluUGFuZWwocm9sZTogVXNlclJvbGUpOiBib29sZWFuIHtcclxuICByZXR1cm4gcm9sZSAhPT0gVXNlclJvbGUuVVNFUlxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaXNTdXBlckFkbWluKHJvbGU6IFVzZXJSb2xlKTogYm9vbGVhbiB7XHJcbiAgcmV0dXJuIHJvbGUgPT09IFVzZXJSb2xlLlNVUEVSX0FETUlOXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjYW5NYW5hZ2VTb25ncyhyb2xlOiBVc2VyUm9sZSk6IGJvb2xlYW4ge1xyXG4gIHJldHVybiBoYXNQZXJtaXNzaW9uKHJvbGUsIFBlcm1pc3Npb24uU09OR1NfVklFVylcclxufVxyXG5cclxuLy8g7ZWY7JyEIO2YuO2ZmOyEseydhCDsnITtlZwg7J6E7IucIO2VqOyImCAo64KY7KSR7JeQIOygnOqxsClcclxuZXhwb3J0IGZ1bmN0aW9uIHJvbGVUb0lzQWRtaW4ocm9sZTogVXNlclJvbGUpOiBib29sZWFuIHtcclxuICByZXR1cm4gcm9sZSAhPT0gVXNlclJvbGUuVVNFUlxyXG59Il0sIm5hbWVzIjpbIlVzZXJSb2xlIiwiUGVybWlzc2lvbiIsIlJPTEVfUEVSTUlTU0lPTlMiLCJoYXNQZXJtaXNzaW9uIiwidXNlclJvbGUiLCJwZXJtaXNzaW9uIiwicGVybWlzc2lvbnMiLCJpbmNsdWRlcyIsImNhbkFjY2Vzc0FkbWluUGFuZWwiLCJyb2xlIiwiaXNTdXBlckFkbWluIiwiY2FuTWFuYWdlU29uZ3MiLCJyb2xlVG9Jc0FkbWluIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/permissions.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/titleSystem.ts":
/*!********************************!*\
  !*** ./src/lib/titleSystem.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TITLE_DEFINITIONS: () => (/* binding */ TITLE_DEFINITIONS),\n/* harmony export */   checkForNewTitles: () => (/* binding */ checkForNewTitles),\n/* harmony export */   getSelectedTitleInfo: () => (/* binding */ getSelectedTitleInfo),\n/* harmony export */   getTitleDefinition: () => (/* binding */ getTitleDefinition),\n/* harmony export */   getTitleRarityColor: () => (/* binding */ getTitleRarityColor),\n/* harmony export */   grantTitle: () => (/* binding */ grantTitle)\n/* harmony export */ });\n// 칭호 정의들\nconst TITLE_DEFINITIONS = [\n    // 관리자 칭호 (기존 role 기반)\n    {\n        id: \"super_admin\",\n        name: \"최고 관리자\",\n        description: \"사이트의 모든 권한을 가진 최고 관리자입니다\",\n        condition: \"사이트 관리자 권한 보유\",\n        rarity: \"legendary\",\n        checkCondition: (user)=>user.role === \"super_admin\",\n        autoGrant: true\n    },\n    {\n        id: \"ayauke_admin\",\n        name: \"아야냥이\",\n        description: \"스트리머 아야에게 부여되는 특별한 칭호입니다\",\n        condition: \"사이트를 선물받은 스트리머\",\n        rarity: \"epic\",\n        checkCondition: (user)=>user.role === \"ayauke_admin\",\n        autoGrant: true\n    },\n    {\n        id: \"honeyz\",\n        name: \"HONEYZ\",\n        description: \"허니즈에게 부여되는 칭호입니다\",\n        condition: \"허니즈 소속 스트리머\",\n        rarity: \"epic\",\n        checkCondition: (user)=>{\n            const honeyzChannelIds = [\n                \"abe8aa82baf3d3ef54ad8468ee73e7fc\",\n                \"798e100206987b59805cfb75f927e965\",\n                \"b82e8bc2505e37156b2d1140ba1fc05c\",\n                \"c0d9723cbb75dc223c6aa8a9d4f56002\",\n                \"bd07973b6021d72512240c01a386d5c9\",\n                \"65a53076fe1a39636082dd6dba8b8a4b\",\n                \"d6017f757614569add71b0bc83a81382\"\n            ];\n            return honeyzChannelIds.includes(user.channelId);\n        },\n        autoGrant: true\n    },\n    {\n        id: \"song_admin\",\n        name: \"노래 관리자\",\n        description: \"노래 정보를 관리하는 관리자입니다\",\n        condition: \"노래 관리자 권한 보유\",\n        rarity: \"epic\",\n        checkCondition: (user)=>user.role === \"song_admin\",\n        autoGrant: true\n    },\n    {\n        id: \"song_editor\",\n        name: \"편집자\",\n        description: \"노래 정보를 편집할 수 있는 편집자입니다\",\n        condition: \"편집자 권한 보유\",\n        rarity: \"rare\",\n        checkCondition: (user)=>user.role === \"song_editor\",\n        autoGrant: true\n    },\n    // 활동 기반 칭호\n    {\n        id: \"chzzk_user\",\n        name: \"치지직 사용자\",\n        description: \"아야의 팬사이트에 오신 것을 환영합니다!\",\n        condition: \"회원가입 시 자동 부여\",\n        rarity: \"common\",\n        checkCondition: ()=>true,\n        autoGrant: true\n    },\n    {\n        id: \"regular_visitor\",\n        name: \"단골손님\",\n        description: \"자주 방문해주시는 소중한 단골손님입니다\",\n        condition: \"로그인 10회 이상\",\n        rarity: \"common\",\n        checkCondition: (user, stats)=>(stats?.loginCount || 0) >= 10,\n        autoGrant: true\n    },\n    {\n        id: \"music_lover\",\n        name: \"노래 매니아\",\n        description: \"음악을 사랑하는 진정한 매니아입니다\",\n        condition: \"좋아요 50개 이상\",\n        rarity: \"rare\",\n        checkCondition: (user, stats)=>(stats?.likeCount || 0) >= 50,\n        autoGrant: true\n    },\n    {\n        id: \"playlist_curator\",\n        name: \"플레이리스트 큐레이터\",\n        description: \"음악 취향이 뛰어난 플레이리스트 전문가입니다\",\n        condition: \"플레이리스트 5개 이상 생성\",\n        rarity: \"rare\",\n        checkCondition: (user, stats)=>(stats?.playlistCount || 0) >= 5,\n        autoGrant: true\n    },\n    {\n        id: \"loyal_fan\",\n        name: \"충성스러운 팬\",\n        description: \"아야를 꾸준히 응원해주시는 충성스러운 팬입니다\",\n        condition: \"30일 연속 접속\",\n        rarity: \"epic\",\n        checkCondition: (user, stats)=>(stats?.consecutiveDays || 0) >= 30,\n        autoGrant: true\n    },\n    // 특별 칭호 (수동 부여)\n    {\n        id: \"developer_friend\",\n        name: \"개발자의 친구\",\n        description: \"개발자와 특별한 인연이 있는 소중한 친구입니다\",\n        condition: \"개발자가 직접 부여\",\n        rarity: \"legendary\",\n        checkCondition: ()=>false,\n        autoGrant: false\n    },\n    {\n        id: \"beta_tester\",\n        name: \"베타 테스터\",\n        description: \"사이트 초기부터 함께해주신 베타 테스터입니다\",\n        condition: \"특정 기간 가입자\",\n        rarity: \"epic\",\n        checkCondition: ()=>false,\n        autoGrant: false\n    }\n];\n// 칭호 ID로 정의 찾기\nfunction getTitleDefinition(titleId) {\n    return TITLE_DEFINITIONS.find((title)=>title.id === titleId);\n}\n// 희귀도별 색상 반환\nfunction getTitleRarityColor(rarity) {\n    switch(rarity){\n        case \"common\":\n            return \"bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200 border border-gray-800 dark:border-gray-700\";\n        case \"rare\":\n            return \"bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 border border-blue-800 dark:border-blue-700\";\n        case \"epic\":\n            return \"bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-200 border border-purple-800 dark:border-purple-700\";\n        case \"legendary\":\n            return \"bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200 border border-yellow-800 dark:border-yellow-700\";\n        default:\n            return \"bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200 border border-gray-800 dark:border-gray-700\";\n    }\n}\n// 사용자가 획득할 수 있는 새로운 칭호 확인\nfunction checkForNewTitles(user, stats) {\n    const currentTitleIds = user.titles.map((title)=>title.id);\n    const newTitles = [];\n    for (const titleDef of TITLE_DEFINITIONS){\n        // 이미 보유한 칭호는 건너뛰기\n        if (currentTitleIds.includes(titleDef.id)) continue;\n        // 자동 부여 칭호만 체크\n        if (!titleDef.autoGrant) continue;\n        // 조건 확인\n        if (titleDef.checkCondition(user, stats)) {\n            newTitles.push(titleDef);\n        }\n    }\n    return newTitles;\n}\n// 사용자에게 칭호 부여\nfunction grantTitle(user, titleDef) {\n    console.log(\"🏆 칭호 부여 시도:\", {\n        titleId: titleDef.id,\n        titleName: titleDef.name\n    });\n    // 이미 보유한 칭호인지 확인\n    const alreadyHas = user.titles.some((title)=>title.id === titleDef.id);\n    if (alreadyHas) {\n        console.log(\"🏆 이미 보유한 칭호:\", titleDef.name);\n        return false;\n    }\n    // 칭호 추가\n    const newTitle = {\n        id: titleDef.id,\n        name: titleDef.name,\n        description: titleDef.description,\n        earnedAt: new Date(),\n        condition: titleDef.condition,\n        rarity: titleDef.rarity\n    };\n    console.log(\"🏆 칭호 추가 전 titles.length:\", user.titles.length);\n    user.titles.push(newTitle);\n    console.log(\"🏆 칭호 추가 후 titles.length:\", user.titles.length);\n    console.log(\"🏆 추가된 칭호:\", newTitle);\n    // 첫 번째 칭호라면 자동으로 선택\n    if (!user.selectedTitle) {\n        user.selectedTitle = titleDef.id;\n        console.log(\"🏆 첫 번째 칭호로 선택됨:\", titleDef.id);\n    }\n    return true;\n}\n// 선택된 칭호 정보 가져오기\nfunction getSelectedTitleInfo(user) {\n    if (!user.selectedTitle) return null;\n    const selectedTitle = user.titles.find((title)=>title.id === user.selectedTitle);\n    if (!selectedTitle) return null;\n    // Mongoose 객체를 순수한 JavaScript 객체로 변환\n    const titleObj = typeof selectedTitle.toObject === \"function\" ? selectedTitle.toObject() : JSON.parse(JSON.stringify(selectedTitle));\n    return {\n        id: titleObj.id,\n        name: titleObj.name,\n        description: titleObj.description,\n        rarity: titleObj.rarity,\n        colorClass: getTitleRarityColor(titleObj.rarity)\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3RpdGxlU3lzdGVtLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQW1CQSxTQUFTO0FBQ0YsTUFBTUEsb0JBQXVDO0lBQ2xELHNCQUFzQjtJQUN0QjtRQUNFQyxJQUFJO1FBQ0pDLE1BQU07UUFDTkMsYUFBYTtRQUNiQyxXQUFXO1FBQ1hDLFFBQVE7UUFDUkMsZ0JBQWdCLENBQUNDLE9BQVNBLEtBQUtDLElBQUksS0FBSztRQUN4Q0MsV0FBVztJQUNiO0lBQ0E7UUFDRVIsSUFBSTtRQUNKQyxNQUFNO1FBQ05DLGFBQWE7UUFDYkMsV0FBVztRQUNYQyxRQUFRO1FBQ1JDLGdCQUFnQixDQUFDQyxPQUFTQSxLQUFLQyxJQUFJLEtBQUs7UUFDeENDLFdBQVc7SUFDYjtJQUNBO1FBQ0VSLElBQUk7UUFDSkMsTUFBTTtRQUNOQyxhQUFhO1FBQ2JDLFdBQVc7UUFDWEMsUUFBUTtRQUNSQyxnQkFBZ0IsQ0FBQ0M7WUFDZixNQUFNRyxtQkFBbUI7Z0JBQ3ZCO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2FBQ0Q7WUFDRCxPQUFPQSxpQkFBaUJDLFFBQVEsQ0FBQ0osS0FBS0ssU0FBUztRQUNqRDtRQUNBSCxXQUFXO0lBQ2I7SUFDQTtRQUNFUixJQUFJO1FBQ0pDLE1BQU07UUFDTkMsYUFBYTtRQUNiQyxXQUFXO1FBQ1hDLFFBQVE7UUFDUkMsZ0JBQWdCLENBQUNDLE9BQVNBLEtBQUtDLElBQUksS0FBSztRQUN4Q0MsV0FBVztJQUNiO0lBQ0E7UUFDRVIsSUFBSTtRQUNKQyxNQUFNO1FBQ05DLGFBQWE7UUFDYkMsV0FBVztRQUNYQyxRQUFRO1FBQ1JDLGdCQUFnQixDQUFDQyxPQUFTQSxLQUFLQyxJQUFJLEtBQUs7UUFDeENDLFdBQVc7SUFDYjtJQUVBLFdBQVc7SUFDWDtRQUNFUixJQUFJO1FBQ0pDLE1BQU07UUFDTkMsYUFBYTtRQUNiQyxXQUFXO1FBQ1hDLFFBQVE7UUFDUkMsZ0JBQWdCLElBQU07UUFDdEJHLFdBQVc7SUFDYjtJQUNBO1FBQ0VSLElBQUk7UUFDSkMsTUFBTTtRQUNOQyxhQUFhO1FBQ2JDLFdBQVc7UUFDWEMsUUFBUTtRQUNSQyxnQkFBZ0IsQ0FBQ0MsTUFBTU0sUUFBVSxDQUFDQSxPQUFPQyxjQUFjLE1BQU07UUFDN0RMLFdBQVc7SUFDYjtJQUNBO1FBQ0VSLElBQUk7UUFDSkMsTUFBTTtRQUNOQyxhQUFhO1FBQ2JDLFdBQVc7UUFDWEMsUUFBUTtRQUNSQyxnQkFBZ0IsQ0FBQ0MsTUFBTU0sUUFBVSxDQUFDQSxPQUFPRSxhQUFhLE1BQU07UUFDNUROLFdBQVc7SUFDYjtJQUNBO1FBQ0VSLElBQUk7UUFDSkMsTUFBTTtRQUNOQyxhQUFhO1FBQ2JDLFdBQVc7UUFDWEMsUUFBUTtRQUNSQyxnQkFBZ0IsQ0FBQ0MsTUFBTU0sUUFBVSxDQUFDQSxPQUFPRyxpQkFBaUIsTUFBTTtRQUNoRVAsV0FBVztJQUNiO0lBQ0E7UUFDRVIsSUFBSTtRQUNKQyxNQUFNO1FBQ05DLGFBQWE7UUFDYkMsV0FBVztRQUNYQyxRQUFRO1FBQ1JDLGdCQUFnQixDQUFDQyxNQUFNTSxRQUFVLENBQUNBLE9BQU9JLG1CQUFtQixNQUFNO1FBQ2xFUixXQUFXO0lBQ2I7SUFFQSxnQkFBZ0I7SUFDaEI7UUFDRVIsSUFBSTtRQUNKQyxNQUFNO1FBQ05DLGFBQWE7UUFDYkMsV0FBVztRQUNYQyxRQUFRO1FBQ1JDLGdCQUFnQixJQUFNO1FBQ3RCRyxXQUFXO0lBQ2I7SUFDQTtRQUNFUixJQUFJO1FBQ0pDLE1BQU07UUFDTkMsYUFBYTtRQUNiQyxXQUFXO1FBQ1hDLFFBQVE7UUFDUkMsZ0JBQWdCLElBQU07UUFDdEJHLFdBQVc7SUFDYjtDQUNELENBQUM7QUFFRixlQUFlO0FBQ1IsU0FBU1MsbUJBQ2RDLE9BQWU7SUFFZixPQUFPbkIsa0JBQWtCb0IsSUFBSSxDQUFDLENBQUNDLFFBQVVBLE1BQU1wQixFQUFFLEtBQUtrQjtBQUN4RDtBQUVBLGFBQWE7QUFDTixTQUFTRyxvQkFBb0JqQixNQUFjO0lBQ2hELE9BQVFBO1FBQ04sS0FBSztZQUNILE9BQU87UUFDVCxLQUFLO1lBQ0gsT0FBTztRQUNULEtBQUs7WUFDSCxPQUFPO1FBQ1QsS0FBSztZQUNILE9BQU87UUFDVDtZQUNFLE9BQU87SUFDWDtBQUNGO0FBRUEsMEJBQTBCO0FBQ25CLFNBQVNrQixrQkFDZGhCLElBQVcsRUFDWE0sS0FBaUI7SUFFakIsTUFBTVcsa0JBQWtCakIsS0FBS2tCLE1BQU0sQ0FBQ0MsR0FBRyxDQUFDLENBQUNMLFFBQVVBLE1BQU1wQixFQUFFO0lBQzNELE1BQU0wQixZQUErQixFQUFFO0lBRXZDLEtBQUssTUFBTUMsWUFBWTVCLGtCQUFtQjtRQUN4QyxrQkFBa0I7UUFDbEIsSUFBSXdCLGdCQUFnQmIsUUFBUSxDQUFDaUIsU0FBUzNCLEVBQUUsR0FBRztRQUUzQyxlQUFlO1FBQ2YsSUFBSSxDQUFDMkIsU0FBU25CLFNBQVMsRUFBRTtRQUV6QixRQUFRO1FBQ1IsSUFBSW1CLFNBQVN0QixjQUFjLENBQUNDLE1BQU1NLFFBQVE7WUFDeENjLFVBQVVFLElBQUksQ0FBQ0Q7UUFDakI7SUFDRjtJQUVBLE9BQU9EO0FBQ1Q7QUFFQSxjQUFjO0FBQ1AsU0FBU0csV0FBV3ZCLElBQVcsRUFBRXFCLFFBQXlCO0lBQy9ERyxRQUFRQyxHQUFHLENBQUMsZ0JBQWdCO1FBQzFCYixTQUFTUyxTQUFTM0IsRUFBRTtRQUNwQmdDLFdBQVdMLFNBQVMxQixJQUFJO0lBQzFCO0lBRUEsaUJBQWlCO0lBQ2pCLE1BQU1nQyxhQUFhM0IsS0FBS2tCLE1BQU0sQ0FBQ1UsSUFBSSxDQUFDLENBQUNkLFFBQVVBLE1BQU1wQixFQUFFLEtBQUsyQixTQUFTM0IsRUFBRTtJQUN2RSxJQUFJaUMsWUFBWTtRQUNkSCxRQUFRQyxHQUFHLENBQUMsaUJBQWlCSixTQUFTMUIsSUFBSTtRQUMxQyxPQUFPO0lBQ1Q7SUFFQSxRQUFRO0lBQ1IsTUFBTWtDLFdBQVc7UUFDZm5DLElBQUkyQixTQUFTM0IsRUFBRTtRQUNmQyxNQUFNMEIsU0FBUzFCLElBQUk7UUFDbkJDLGFBQWF5QixTQUFTekIsV0FBVztRQUNqQ2tDLFVBQVUsSUFBSUM7UUFDZGxDLFdBQVd3QixTQUFTeEIsU0FBUztRQUM3QkMsUUFBUXVCLFNBQVN2QixNQUFNO0lBQ3pCO0lBRUEwQixRQUFRQyxHQUFHLENBQUMsNkJBQTZCekIsS0FBS2tCLE1BQU0sQ0FBQ2MsTUFBTTtJQUMzRGhDLEtBQUtrQixNQUFNLENBQUNJLElBQUksQ0FBQ087SUFDakJMLFFBQVFDLEdBQUcsQ0FBQyw2QkFBNkJ6QixLQUFLa0IsTUFBTSxDQUFDYyxNQUFNO0lBQzNEUixRQUFRQyxHQUFHLENBQUMsY0FBY0k7SUFFMUIsb0JBQW9CO0lBQ3BCLElBQUksQ0FBQzdCLEtBQUtpQyxhQUFhLEVBQUU7UUFDdkJqQyxLQUFLaUMsYUFBYSxHQUFHWixTQUFTM0IsRUFBRTtRQUNoQzhCLFFBQVFDLEdBQUcsQ0FBQyxvQkFBb0JKLFNBQVMzQixFQUFFO0lBQzdDO0lBRUEsT0FBTztBQUNUO0FBRUEsaUJBQWlCO0FBQ1YsU0FBU3dDLHFCQUFxQmxDLElBQVc7SUFDOUMsSUFBSSxDQUFDQSxLQUFLaUMsYUFBYSxFQUFFLE9BQU87SUFFaEMsTUFBTUEsZ0JBQWdCakMsS0FBS2tCLE1BQU0sQ0FBQ0wsSUFBSSxDQUNwQyxDQUFDQyxRQUFVQSxNQUFNcEIsRUFBRSxLQUFLTSxLQUFLaUMsYUFBYTtJQUU1QyxJQUFJLENBQUNBLGVBQWUsT0FBTztJQUUzQixxQ0FBcUM7SUFDckMsTUFBTUUsV0FDSixPQUFPRixjQUFjRyxRQUFRLEtBQUssYUFDOUJILGNBQWNHLFFBQVEsS0FDdEJDLEtBQUtDLEtBQUssQ0FBQ0QsS0FBS0UsU0FBUyxDQUFDTjtJQUVoQyxPQUFPO1FBQ0x2QyxJQUFJeUMsU0FBU3pDLEVBQUU7UUFDZkMsTUFBTXdDLFNBQVN4QyxJQUFJO1FBQ25CQyxhQUFhdUMsU0FBU3ZDLFdBQVc7UUFDakNFLFFBQVFxQyxTQUFTckMsTUFBTTtRQUN2QjBDLFlBQVl6QixvQkFBb0JvQixTQUFTckMsTUFBTTtJQUNqRDtBQUNGIiwic291cmNlcyI6WyIvbW50L2YvRGF0YS9HaXQvY2xhdWRlLWNvZGUvYXlhdWtlLXBhZ2UvYXlhdWtlLXBhZ2Uvc3JjL2xpYi90aXRsZVN5c3RlbS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJVXNlciB9IGZyb20gXCJAL21vZGVscy9Vc2VyXCI7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFRpdGxlRGVmaW5pdGlvbiB7XHJcbiAgaWQ6IHN0cmluZztcclxuICBuYW1lOiBzdHJpbmc7XHJcbiAgZGVzY3JpcHRpb246IHN0cmluZztcclxuICBjb25kaXRpb246IHN0cmluZztcclxuICByYXJpdHk6IFwiY29tbW9uXCIgfCBcInJhcmVcIiB8IFwiZXBpY1wiIHwgXCJsZWdlbmRhcnlcIjtcclxuICBjaGVja0NvbmRpdGlvbjogKHVzZXI6IElVc2VyLCBzdGF0cz86IGFueSkgPT4gYm9vbGVhbjtcclxuICBhdXRvR3JhbnQ6IGJvb2xlYW47IC8vIOyekOuPmSDrtoDsl6wg7Jes67aAXHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgVXNlclN0YXRzIHtcclxuICBsaWtlQ291bnQ6IG51bWJlcjtcclxuICBwbGF5bGlzdENvdW50OiBudW1iZXI7XHJcbiAgbG9naW5Db3VudDogbnVtYmVyO1xyXG4gIGNvbnNlY3V0aXZlRGF5czogbnVtYmVyO1xyXG59XHJcblxyXG4vLyDsua3tmLgg7KCV7J2Y65OkXHJcbmV4cG9ydCBjb25zdCBUSVRMRV9ERUZJTklUSU9OUzogVGl0bGVEZWZpbml0aW9uW10gPSBbXHJcbiAgLy8g6rSA66as7J6QIOy5re2YuCAo6riw7KG0IHJvbGUg6riw67CYKVxyXG4gIHtcclxuICAgIGlkOiBcInN1cGVyX2FkbWluXCIsXHJcbiAgICBuYW1lOiBcIuy1nOqzoCDqtIDrpqzsnpBcIixcclxuICAgIGRlc2NyaXB0aW9uOiBcIuyCrOydtO2KuOydmCDrqqjrk6Ag6raM7ZWc7J2EIOqwgOynhCDstZzqs6Ag6rSA66as7J6Q7J6F64uI64ukXCIsXHJcbiAgICBjb25kaXRpb246IFwi7IKs7J207Yq4IOq0gOumrOyekCDqtoztlZwg67O07JygXCIsXHJcbiAgICByYXJpdHk6IFwibGVnZW5kYXJ5XCIsXHJcbiAgICBjaGVja0NvbmRpdGlvbjogKHVzZXIpID0+IHVzZXIucm9sZSA9PT0gXCJzdXBlcl9hZG1pblwiLFxyXG4gICAgYXV0b0dyYW50OiB0cnVlLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgaWQ6IFwiYXlhdWtlX2FkbWluXCIsXHJcbiAgICBuYW1lOiBcIuyVhOyVvOuDpeydtFwiLFxyXG4gICAgZGVzY3JpcHRpb246IFwi7Iqk7Yq466as66i4IOyVhOyVvOyXkOqyjCDrtoDsl6zrkJjripQg7Yq567OE7ZWcIOy5re2YuOyeheuLiOuLpFwiLFxyXG4gICAgY29uZGl0aW9uOiBcIuyCrOydtO2KuOulvCDshKDrrLzrsJvsnYAg7Iqk7Yq466as66i4XCIsXHJcbiAgICByYXJpdHk6IFwiZXBpY1wiLFxyXG4gICAgY2hlY2tDb25kaXRpb246ICh1c2VyKSA9PiB1c2VyLnJvbGUgPT09IFwiYXlhdWtlX2FkbWluXCIsXHJcbiAgICBhdXRvR3JhbnQ6IHRydWUsXHJcbiAgfSxcclxuICB7XHJcbiAgICBpZDogXCJob25leXpcIixcclxuICAgIG5hbWU6IFwiSE9ORVlaXCIsXHJcbiAgICBkZXNjcmlwdGlvbjogXCLtl4jri4jspojsl5Dqsowg67aA7Jes65CY64qUIOy5re2YuOyeheuLiOuLpFwiLFxyXG4gICAgY29uZGl0aW9uOiBcIu2XiOuLiOymiCDshozsho0g7Iqk7Yq466as66i4XCIsXHJcbiAgICByYXJpdHk6IFwiZXBpY1wiLFxyXG4gICAgY2hlY2tDb25kaXRpb246ICh1c2VyKSA9PiB7XHJcbiAgICAgIGNvbnN0IGhvbmV5ekNoYW5uZWxJZHMgPSBbXHJcbiAgICAgICAgXCJhYmU4YWE4MmJhZjNkM2VmNTRhZDg0NjhlZTczZTdmY1wiLCAvLyDslYTslbxcclxuICAgICAgICBcIjc5OGUxMDAyMDY5ODdiNTk4MDVjZmI3NWY5MjdlOTY1XCIsIC8vIOuUlOuUlOuUlOyaqVxyXG4gICAgICAgIFwiYjgyZThiYzI1MDVlMzcxNTZiMmQxMTQwYmExZmMwNWNcIiwgLy8g64u07Jyg7J20XHJcbiAgICAgICAgXCJjMGQ5NzIzY2JiNzVkYzIyM2M2YWE4YTlkNGY1NjAwMlwiLCAvLyDtl4jri4jsuITrn6zsiqRcclxuICAgICAgICBcImJkMDc5NzNiNjAyMWQ3MjUxMjI0MGMwMWEzODZkNWM5XCIsIC8vIOunneuCtFxyXG4gICAgICAgIFwiNjVhNTMwNzZmZTFhMzk2MzYwODJkZDZkYmE4YjhhNGJcIiwgLy8g7Jik7ZmU7JqUXHJcbiAgICAgICAgXCJkNjAxN2Y3NTc2MTQ1NjlhZGQ3MWIwYmM4M2E4MTM4MlwiLCAvLyDthYzsiqTtirhcclxuICAgICAgXTtcclxuICAgICAgcmV0dXJuIGhvbmV5ekNoYW5uZWxJZHMuaW5jbHVkZXModXNlci5jaGFubmVsSWQpO1xyXG4gICAgfSxcclxuICAgIGF1dG9HcmFudDogdHJ1ZSxcclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiBcInNvbmdfYWRtaW5cIixcclxuICAgIG5hbWU6IFwi64W4656YIOq0gOumrOyekFwiLFxyXG4gICAgZGVzY3JpcHRpb246IFwi64W4656YIOygleuztOulvCDqtIDrpqztlZjripQg6rSA66as7J6Q7J6F64uI64ukXCIsXHJcbiAgICBjb25kaXRpb246IFwi64W4656YIOq0gOumrOyekCDqtoztlZwg67O07JygXCIsXHJcbiAgICByYXJpdHk6IFwiZXBpY1wiLFxyXG4gICAgY2hlY2tDb25kaXRpb246ICh1c2VyKSA9PiB1c2VyLnJvbGUgPT09IFwic29uZ19hZG1pblwiLFxyXG4gICAgYXV0b0dyYW50OiB0cnVlLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgaWQ6IFwic29uZ19lZGl0b3JcIixcclxuICAgIG5hbWU6IFwi7Y647KeR7J6QXCIsXHJcbiAgICBkZXNjcmlwdGlvbjogXCLrhbjrnpgg7KCV67O066W8IO2OuOynke2VoCDsiJgg7J6I64qUIO2OuOynkeyekOyeheuLiOuLpFwiLFxyXG4gICAgY29uZGl0aW9uOiBcIu2OuOynkeyekCDqtoztlZwg67O07JygXCIsXHJcbiAgICByYXJpdHk6IFwicmFyZVwiLFxyXG4gICAgY2hlY2tDb25kaXRpb246ICh1c2VyKSA9PiB1c2VyLnJvbGUgPT09IFwic29uZ19lZGl0b3JcIixcclxuICAgIGF1dG9HcmFudDogdHJ1ZSxcclxuICB9LFxyXG5cclxuICAvLyDtmZzrj5kg6riw67CYIOy5re2YuFxyXG4gIHtcclxuICAgIGlkOiBcImNoenprX3VzZXJcIixcclxuICAgIG5hbWU6IFwi7LmY7KeA7KeBIOyCrOyaqeyekFwiLFxyXG4gICAgZGVzY3JpcHRpb246IFwi7JWE7JW87J2YIO2MrOyCrOydtO2KuOyXkCDsmKTsi6Ag6rKD7J2EIO2ZmOyYge2VqeuLiOuLpCFcIixcclxuICAgIGNvbmRpdGlvbjogXCLtmozsm5DqsIDsnoUg7IucIOyekOuPmSDrtoDsl6xcIixcclxuICAgIHJhcml0eTogXCJjb21tb25cIixcclxuICAgIGNoZWNrQ29uZGl0aW9uOiAoKSA9PiB0cnVlLCAvLyDrqqjrk6Ag7Iug6recIOyCrOyaqeyekOyXkOqyjCDrtoDsl6xcclxuICAgIGF1dG9HcmFudDogdHJ1ZSxcclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiBcInJlZ3VsYXJfdmlzaXRvclwiLFxyXG4gICAgbmFtZTogXCLri6jqs6jshpDri5hcIixcclxuICAgIGRlc2NyaXB0aW9uOiBcIuyekOyjvCDrsKnrrLjtlbTso7zsi5zripQg7IaM7KSR7ZWcIOuLqOqzqOyGkOuLmOyeheuLiOuLpFwiLFxyXG4gICAgY29uZGl0aW9uOiBcIuuhnOq3uOyduCAxMO2ajCDsnbTsg4FcIixcclxuICAgIHJhcml0eTogXCJjb21tb25cIixcclxuICAgIGNoZWNrQ29uZGl0aW9uOiAodXNlciwgc3RhdHMpID0+IChzdGF0cz8ubG9naW5Db3VudCB8fCAwKSA+PSAxMCxcclxuICAgIGF1dG9HcmFudDogdHJ1ZSxcclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiBcIm11c2ljX2xvdmVyXCIsXHJcbiAgICBuYW1lOiBcIuuFuOuemCDrp6Tri4jslYRcIixcclxuICAgIGRlc2NyaXB0aW9uOiBcIuydjOyVheydhCDsgqzrnpHtlZjripQg7KeE7KCV7ZWcIOunpOuLiOyVhOyeheuLiOuLpFwiLFxyXG4gICAgY29uZGl0aW9uOiBcIuyii+yVhOyalCA1MOqwnCDsnbTsg4FcIixcclxuICAgIHJhcml0eTogXCJyYXJlXCIsXHJcbiAgICBjaGVja0NvbmRpdGlvbjogKHVzZXIsIHN0YXRzKSA9PiAoc3RhdHM/Lmxpa2VDb3VudCB8fCAwKSA+PSA1MCxcclxuICAgIGF1dG9HcmFudDogdHJ1ZSxcclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiBcInBsYXlsaXN0X2N1cmF0b3JcIixcclxuICAgIG5hbWU6IFwi7ZSM66CI7J2066as7Iqk7Yq4IO2BkOugiOydtO2EsFwiLFxyXG4gICAgZGVzY3JpcHRpb246IFwi7J2M7JWFIOy3qO2WpeydtCDrm7DslrTrgpwg7ZSM66CI7J2066as7Iqk7Yq4IOyghOusuOqwgOyeheuLiOuLpFwiLFxyXG4gICAgY29uZGl0aW9uOiBcIu2UjOugiOydtOumrOyKpO2KuCA16rCcIOydtOyDgSDsg53shLFcIixcclxuICAgIHJhcml0eTogXCJyYXJlXCIsXHJcbiAgICBjaGVja0NvbmRpdGlvbjogKHVzZXIsIHN0YXRzKSA9PiAoc3RhdHM/LnBsYXlsaXN0Q291bnQgfHwgMCkgPj0gNSxcclxuICAgIGF1dG9HcmFudDogdHJ1ZSxcclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiBcImxveWFsX2ZhblwiLFxyXG4gICAgbmFtZTogXCLstqnshLHsiqTrn6zsmrQg7YysXCIsXHJcbiAgICBkZXNjcmlwdGlvbjogXCLslYTslbzrpbwg6r647KSA7Z6IIOydkeybkO2VtOyjvOyLnOuKlCDstqnshLHsiqTrn6zsmrQg7Yys7J6F64uI64ukXCIsXHJcbiAgICBjb25kaXRpb246IFwiMzDsnbwg7Jew7IaNIOygkeyGjVwiLFxyXG4gICAgcmFyaXR5OiBcImVwaWNcIixcclxuICAgIGNoZWNrQ29uZGl0aW9uOiAodXNlciwgc3RhdHMpID0+IChzdGF0cz8uY29uc2VjdXRpdmVEYXlzIHx8IDApID49IDMwLFxyXG4gICAgYXV0b0dyYW50OiB0cnVlLFxyXG4gIH0sXHJcblxyXG4gIC8vIO2KueuzhCDsua3tmLggKOyImOuPmSDrtoDsl6wpXHJcbiAge1xyXG4gICAgaWQ6IFwiZGV2ZWxvcGVyX2ZyaWVuZFwiLFxyXG4gICAgbmFtZTogXCLqsJzrsJzsnpDsnZgg7Lmc6rWsXCIsXHJcbiAgICBkZXNjcmlwdGlvbjogXCLqsJzrsJzsnpDsmYAg7Yq567OE7ZWcIOyduOyXsOydtCDsnojripQg7IaM7KSR7ZWcIOy5nOq1rOyeheuLiOuLpFwiLFxyXG4gICAgY29uZGl0aW9uOiBcIuqwnOuwnOyekOqwgCDsp4HsoJEg67aA7JesXCIsXHJcbiAgICByYXJpdHk6IFwibGVnZW5kYXJ5XCIsXHJcbiAgICBjaGVja0NvbmRpdGlvbjogKCkgPT4gZmFsc2UsIC8vIOyImOuPmSDrtoDsl6zrp4xcclxuICAgIGF1dG9HcmFudDogZmFsc2UsXHJcbiAgfSxcclxuICB7XHJcbiAgICBpZDogXCJiZXRhX3Rlc3RlclwiLFxyXG4gICAgbmFtZTogXCLrsqDtg4Ag7YWM7Iqk7YSwXCIsXHJcbiAgICBkZXNjcmlwdGlvbjogXCLsgqzsnbTtirgg7LSI6riw67aA7YSwIO2VqOq7mO2VtOyjvOyLoCDrsqDtg4Ag7YWM7Iqk7YSw7J6F64uI64ukXCIsXHJcbiAgICBjb25kaXRpb246IFwi7Yq57KCVIOq4sOqwhCDqsIDsnoXsnpBcIixcclxuICAgIHJhcml0eTogXCJlcGljXCIsXHJcbiAgICBjaGVja0NvbmRpdGlvbjogKCkgPT4gZmFsc2UsIC8vIOyImOuPmSDrtoDsl6zrp4xcclxuICAgIGF1dG9HcmFudDogZmFsc2UsXHJcbiAgfSxcclxuXTtcclxuXHJcbi8vIOy5re2YuCBJROuhnCDsoJXsnZgg7LC+6riwXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRUaXRsZURlZmluaXRpb24oXHJcbiAgdGl0bGVJZDogc3RyaW5nXHJcbik6IFRpdGxlRGVmaW5pdGlvbiB8IHVuZGVmaW5lZCB7XHJcbiAgcmV0dXJuIFRJVExFX0RFRklOSVRJT05TLmZpbmQoKHRpdGxlKSA9PiB0aXRsZS5pZCA9PT0gdGl0bGVJZCk7XHJcbn1cclxuXHJcbi8vIO2drOq3gOuPhOuzhCDsg4nsg4Eg67CY7ZmYXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRUaXRsZVJhcml0eUNvbG9yKHJhcml0eTogc3RyaW5nKTogc3RyaW5nIHtcclxuICBzd2l0Y2ggKHJhcml0eSkge1xyXG4gICAgY2FzZSBcImNvbW1vblwiOlxyXG4gICAgICByZXR1cm4gXCJiZy1ncmF5LTEwMCBkYXJrOmJnLWdyYXktODAwIHRleHQtZ3JheS04MDAgZGFyazp0ZXh0LWdyYXktMjAwIGJvcmRlciBib3JkZXItZ3JheS04MDAgZGFyazpib3JkZXItZ3JheS03MDBcIjtcclxuICAgIGNhc2UgXCJyYXJlXCI6XHJcbiAgICAgIHJldHVybiBcImJnLWJsdWUtMTAwIGRhcms6YmctYmx1ZS05MDAgdGV4dC1ibHVlLTgwMCBkYXJrOnRleHQtYmx1ZS0yMDAgYm9yZGVyIGJvcmRlci1ibHVlLTgwMCBkYXJrOmJvcmRlci1ibHVlLTcwMFwiO1xyXG4gICAgY2FzZSBcImVwaWNcIjpcclxuICAgICAgcmV0dXJuIFwiYmctcHVycGxlLTEwMCBkYXJrOmJnLXB1cnBsZS05MDAgdGV4dC1wdXJwbGUtODAwIGRhcms6dGV4dC1wdXJwbGUtMjAwIGJvcmRlciBib3JkZXItcHVycGxlLTgwMCBkYXJrOmJvcmRlci1wdXJwbGUtNzAwXCI7XHJcbiAgICBjYXNlIFwibGVnZW5kYXJ5XCI6XHJcbiAgICAgIHJldHVybiBcImJnLXllbGxvdy0xMDAgZGFyazpiZy15ZWxsb3ctOTAwIHRleHQteWVsbG93LTgwMCBkYXJrOnRleHQteWVsbG93LTIwMCBib3JkZXIgYm9yZGVyLXllbGxvdy04MDAgZGFyazpib3JkZXIteWVsbG93LTcwMFwiO1xyXG4gICAgZGVmYXVsdDpcclxuICAgICAgcmV0dXJuIFwiYmctZ3JheS0xMDAgZGFyazpiZy1ncmF5LTgwMCB0ZXh0LWdyYXktODAwIGRhcms6dGV4dC1ncmF5LTIwMCBib3JkZXIgYm9yZGVyLWdyYXktODAwIGRhcms6Ym9yZGVyLWdyYXktNzAwXCI7XHJcbiAgfVxyXG59XHJcblxyXG4vLyDsgqzsmqnsnpDqsIAg7ZqN65Od7ZWgIOyImCDsnojripQg7IOI66Gc7Jq0IOy5re2YuCDtmZXsnbhcclxuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrRm9yTmV3VGl0bGVzKFxyXG4gIHVzZXI6IElVc2VyLFxyXG4gIHN0YXRzPzogVXNlclN0YXRzXHJcbik6IFRpdGxlRGVmaW5pdGlvbltdIHtcclxuICBjb25zdCBjdXJyZW50VGl0bGVJZHMgPSB1c2VyLnRpdGxlcy5tYXAoKHRpdGxlKSA9PiB0aXRsZS5pZCk7XHJcbiAgY29uc3QgbmV3VGl0bGVzOiBUaXRsZURlZmluaXRpb25bXSA9IFtdO1xyXG5cclxuICBmb3IgKGNvbnN0IHRpdGxlRGVmIG9mIFRJVExFX0RFRklOSVRJT05TKSB7XHJcbiAgICAvLyDsnbTrr7gg67O07Jyg7ZWcIOy5re2YuOuKlCDqsbTrhIjrm7DquLBcclxuICAgIGlmIChjdXJyZW50VGl0bGVJZHMuaW5jbHVkZXModGl0bGVEZWYuaWQpKSBjb250aW51ZTtcclxuXHJcbiAgICAvLyDsnpDrj5kg67aA7JesIOy5re2YuOunjCDssrTtgaxcclxuICAgIGlmICghdGl0bGVEZWYuYXV0b0dyYW50KSBjb250aW51ZTtcclxuXHJcbiAgICAvLyDsobDqsbQg7ZmV7J24XHJcbiAgICBpZiAodGl0bGVEZWYuY2hlY2tDb25kaXRpb24odXNlciwgc3RhdHMpKSB7XHJcbiAgICAgIG5ld1RpdGxlcy5wdXNoKHRpdGxlRGVmKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiBuZXdUaXRsZXM7XHJcbn1cclxuXHJcbi8vIOyCrOyaqeyekOyXkOqyjCDsua3tmLgg67aA7JesXHJcbmV4cG9ydCBmdW5jdGlvbiBncmFudFRpdGxlKHVzZXI6IElVc2VyLCB0aXRsZURlZjogVGl0bGVEZWZpbml0aW9uKTogYm9vbGVhbiB7XHJcbiAgY29uc29sZS5sb2coXCLwn4+GIOy5re2YuCDrtoDsl6wg7Iuc64+EOlwiLCB7XHJcbiAgICB0aXRsZUlkOiB0aXRsZURlZi5pZCxcclxuICAgIHRpdGxlTmFtZTogdGl0bGVEZWYubmFtZSxcclxuICB9KTtcclxuXHJcbiAgLy8g7J2066+4IOuztOycoO2VnCDsua3tmLjsnbjsp4Ag7ZmV7J24XHJcbiAgY29uc3QgYWxyZWFkeUhhcyA9IHVzZXIudGl0bGVzLnNvbWUoKHRpdGxlKSA9PiB0aXRsZS5pZCA9PT0gdGl0bGVEZWYuaWQpO1xyXG4gIGlmIChhbHJlYWR5SGFzKSB7XHJcbiAgICBjb25zb2xlLmxvZyhcIvCfj4Yg7J2066+4IOuztOycoO2VnCDsua3tmLg6XCIsIHRpdGxlRGVmLm5hbWUpO1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgLy8g7Lmt7Zi4IOy2lOqwgFxyXG4gIGNvbnN0IG5ld1RpdGxlID0ge1xyXG4gICAgaWQ6IHRpdGxlRGVmLmlkLFxyXG4gICAgbmFtZTogdGl0bGVEZWYubmFtZSxcclxuICAgIGRlc2NyaXB0aW9uOiB0aXRsZURlZi5kZXNjcmlwdGlvbixcclxuICAgIGVhcm5lZEF0OiBuZXcgRGF0ZSgpLFxyXG4gICAgY29uZGl0aW9uOiB0aXRsZURlZi5jb25kaXRpb24sXHJcbiAgICByYXJpdHk6IHRpdGxlRGVmLnJhcml0eSxcclxuICB9O1xyXG5cclxuICBjb25zb2xlLmxvZyhcIvCfj4Yg7Lmt7Zi4IOy2lOqwgCDsoIQgdGl0bGVzLmxlbmd0aDpcIiwgdXNlci50aXRsZXMubGVuZ3RoKTtcclxuICB1c2VyLnRpdGxlcy5wdXNoKG5ld1RpdGxlKTtcclxuICBjb25zb2xlLmxvZyhcIvCfj4Yg7Lmt7Zi4IOy2lOqwgCDtm4QgdGl0bGVzLmxlbmd0aDpcIiwgdXNlci50aXRsZXMubGVuZ3RoKTtcclxuICBjb25zb2xlLmxvZyhcIvCfj4Yg7LaU6rCA65CcIOy5re2YuDpcIiwgbmV3VGl0bGUpO1xyXG5cclxuICAvLyDssqsg67KI7Ke4IOy5re2YuOudvOuptCDsnpDrj5nsnLzroZwg7ISg7YOdXHJcbiAgaWYgKCF1c2VyLnNlbGVjdGVkVGl0bGUpIHtcclxuICAgIHVzZXIuc2VsZWN0ZWRUaXRsZSA9IHRpdGxlRGVmLmlkO1xyXG4gICAgY29uc29sZS5sb2coXCLwn4+GIOyyqyDrsojsp7gg7Lmt7Zi466GcIOyEoO2DneuQqDpcIiwgdGl0bGVEZWYuaWQpO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHRydWU7XHJcbn1cclxuXHJcbi8vIOyEoO2DneuQnCDsua3tmLgg7KCV67O0IOqwgOyguOyYpOq4sFxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0U2VsZWN0ZWRUaXRsZUluZm8odXNlcjogSVVzZXIpIHtcclxuICBpZiAoIXVzZXIuc2VsZWN0ZWRUaXRsZSkgcmV0dXJuIG51bGw7XHJcblxyXG4gIGNvbnN0IHNlbGVjdGVkVGl0bGUgPSB1c2VyLnRpdGxlcy5maW5kKFxyXG4gICAgKHRpdGxlKSA9PiB0aXRsZS5pZCA9PT0gdXNlci5zZWxlY3RlZFRpdGxlXHJcbiAgKTtcclxuICBpZiAoIXNlbGVjdGVkVGl0bGUpIHJldHVybiBudWxsO1xyXG5cclxuICAvLyBNb25nb29zZSDqsJ3ssrTrpbwg7Iic7IiY7ZWcIEphdmFTY3JpcHQg6rCd7LK066GcIOuzgO2ZmFxyXG4gIGNvbnN0IHRpdGxlT2JqID1cclxuICAgIHR5cGVvZiBzZWxlY3RlZFRpdGxlLnRvT2JqZWN0ID09PSBcImZ1bmN0aW9uXCJcclxuICAgICAgPyBzZWxlY3RlZFRpdGxlLnRvT2JqZWN0KClcclxuICAgICAgOiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHNlbGVjdGVkVGl0bGUpKTtcclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIGlkOiB0aXRsZU9iai5pZCxcclxuICAgIG5hbWU6IHRpdGxlT2JqLm5hbWUsXHJcbiAgICBkZXNjcmlwdGlvbjogdGl0bGVPYmouZGVzY3JpcHRpb24sXHJcbiAgICByYXJpdHk6IHRpdGxlT2JqLnJhcml0eSxcclxuICAgIGNvbG9yQ2xhc3M6IGdldFRpdGxlUmFyaXR5Q29sb3IodGl0bGVPYmoucmFyaXR5KSxcclxuICB9O1xyXG59XHJcbiJdLCJuYW1lcyI6WyJUSVRMRV9ERUZJTklUSU9OUyIsImlkIiwibmFtZSIsImRlc2NyaXB0aW9uIiwiY29uZGl0aW9uIiwicmFyaXR5IiwiY2hlY2tDb25kaXRpb24iLCJ1c2VyIiwicm9sZSIsImF1dG9HcmFudCIsImhvbmV5ekNoYW5uZWxJZHMiLCJpbmNsdWRlcyIsImNoYW5uZWxJZCIsInN0YXRzIiwibG9naW5Db3VudCIsImxpa2VDb3VudCIsInBsYXlsaXN0Q291bnQiLCJjb25zZWN1dGl2ZURheXMiLCJnZXRUaXRsZURlZmluaXRpb24iLCJ0aXRsZUlkIiwiZmluZCIsInRpdGxlIiwiZ2V0VGl0bGVSYXJpdHlDb2xvciIsImNoZWNrRm9yTmV3VGl0bGVzIiwiY3VycmVudFRpdGxlSWRzIiwidGl0bGVzIiwibWFwIiwibmV3VGl0bGVzIiwidGl0bGVEZWYiLCJwdXNoIiwiZ3JhbnRUaXRsZSIsImNvbnNvbGUiLCJsb2ciLCJ0aXRsZU5hbWUiLCJhbHJlYWR5SGFzIiwic29tZSIsIm5ld1RpdGxlIiwiZWFybmVkQXQiLCJEYXRlIiwibGVuZ3RoIiwic2VsZWN0ZWRUaXRsZSIsImdldFNlbGVjdGVkVGl0bGVJbmZvIiwidGl0bGVPYmoiLCJ0b09iamVjdCIsIkpTT04iLCJwYXJzZSIsInN0cmluZ2lmeSIsImNvbG9yQ2xhc3MiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/titleSystem.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/userService.ts":
/*!********************************!*\
  !*** ./src/lib/userService.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createOrUpdateUser: () => (/* binding */ createOrUpdateUser),\n/* harmony export */   getAdminUsers: () => (/* binding */ getAdminUsers),\n/* harmony export */   getUserByChannelId: () => (/* binding */ getUserByChannelId),\n/* harmony export */   getUserStats: () => (/* binding */ getUserStats),\n/* harmony export */   updateUserPreferences: () => (/* binding */ updateUserPreferences)\n/* harmony export */ });\n/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/models/User */ \"(rsc)/./src/models/User.ts\");\n/* harmony import */ var _lib_adminChannels__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/adminChannels */ \"(rsc)/./src/lib/adminChannels.ts\");\n/* harmony import */ var _lib_titleSystem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/titleSystem */ \"(rsc)/./src/lib/titleSystem.ts\");\n\n\n\n/**\r\n * 사용자 생성 또는 업데이트 (로그인 시 호출)\r\n */ async function createOrUpdateUser(userData) {\n    try {\n        const staticRole = (0,_lib_adminChannels__WEBPACK_IMPORTED_MODULE_1__.getStaticUserRole)(userData.channelId);\n        // 기존 사용자 찾기\n        let user = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findOne({\n            channelId: userData.channelId\n        });\n        if (user) {\n            // 기존 사용자 업데이트\n            const oldChannelName = user.channelName;\n            const newChannelName = userData.channelName;\n            // channelName 변경 감지 및 이력 추가\n            if (oldChannelName !== newChannelName) {\n                user.channelNameHistory.push({\n                    channelName: newChannelName,\n                    changedAt: new Date(),\n                    source: \"login\"\n                });\n                console.log(`치지직 채널명 변경 감지: ${oldChannelName} → ${newChannelName}`);\n            }\n            user.channelName = newChannelName;\n            // displayName이 없으면 channelName으로 설정하지 않음 (프로필 수정 시에만 생성)\n            user.profileImageUrl = userData.profileImageUrl || user.profileImageUrl;\n            // 정적 권한이 현재 권한보다 높으면 업데이트\n            // if (staticRole !== 'user' && (user.role === 'user' || staticRole === 'super_admin')) {\n            //   user.role = staticRole\n            //   console.log(`사용자 권한 업데이트: ${userData.channelName} → ${staticRole}`)\n            // }\n            user.lastLoginAt = new Date();\n            // 기존 사용자의 칭호 필드가 없으면 초기화\n            if (!user.titles) {\n                user.titles = [];\n            }\n            if (user.selectedTitle === undefined) {\n                user.selectedTitle = null;\n            }\n            // 칭호 체크 및 부여\n            await checkAndGrantTitles(user);\n            const savedUser = await user.save();\n            console.log(`기존 사용자 업데이트: ${userData.channelName} (${userData.channelId})`);\n            // 저장 후 실제 DB 상태 확인\n            console.log(\"🏆 저장 후 DB 상태:\", {\n                titlesCount: savedUser.titles?.length || 0,\n                selectedTitle: savedUser.selectedTitle,\n                titles: savedUser.titles?.map((t)=>t.name) || []\n            });\n            // DB에서 다시 조회해서 실제 저장 확인\n            const reloadedUser = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findOne({\n                channelId: userData.channelId\n            });\n            console.log(\"🏆 DB 재조회 결과:\", {\n                titlesCount: reloadedUser?.titles?.length || 0,\n                selectedTitle: reloadedUser?.selectedTitle,\n                titles: reloadedUser?.titles?.map((t)=>t.name) || []\n            });\n        } else {\n            // 새 사용자 생성\n            user = new _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n                channelId: userData.channelId,\n                channelName: userData.channelName,\n                displayName: userData.channelName,\n                profileImageUrl: userData.profileImageUrl,\n                role: staticRole,\n                lastLoginAt: new Date(),\n                channelNameHistory: [\n                    {\n                        channelName: userData.channelName,\n                        changedAt: new Date(),\n                        source: \"initial\"\n                    }\n                ],\n                titles: [],\n                selectedTitle: null,\n                preferences: {\n                    theme: \"system\",\n                    defaultPlaylistView: \"grid\"\n                }\n            });\n            // 신규 사용자 칭호 체크 및 부여\n            await checkAndGrantTitles(user);\n            await user.save();\n            console.log(`새 사용자 생성: ${userData.channelName} (${userData.channelId}) - 권한: ${staticRole}`);\n        }\n        return user;\n    } catch (error) {\n        console.error(\"사용자 생성/업데이트 오류:\", error);\n        throw error;\n    }\n}\n/**\r\n * 사용자 정보 조회\r\n */ async function getUserByChannelId(channelId) {\n    try {\n        return await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findOne({\n            channelId\n        });\n    } catch (error) {\n        console.error(\"사용자 조회 오류:\", error);\n        return null;\n    }\n}\n/**\r\n * 사용자 환경설정 업데이트\r\n */ async function updateUserPreferences(channelId, preferences) {\n    try {\n        const user = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findOne({\n            channelId\n        });\n        if (!user) return null;\n        user.preferences = {\n            ...user.preferences,\n            ...preferences\n        };\n        await user.save();\n        return user;\n    } catch (error) {\n        console.error(\"사용자 환경설정 업데이트 오류:\", error);\n        return null;\n    }\n}\n/**\r\n * 관리자 목록 조회\r\n */ async function getAdminUsers() {\n    try {\n        return await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].find({\n            role: {\n                $ne: \"user\"\n            }\n        }).sort({\n            lastLoginAt: -1\n        });\n    } catch (error) {\n        console.error(\"관리자 목록 조회 오류:\", error);\n        return [];\n    }\n}\n/**\r\n * 활성 사용자 통계\r\n */ async function getUserStats() {\n    try {\n        const totalUsers = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].countDocuments();\n        const activeUsers = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].countDocuments({\n            lastLoginAt: {\n                $gte: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)\n            }\n        });\n        const adminUsers = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].countDocuments({\n            role: {\n                $ne: \"user\"\n            }\n        });\n        return {\n            totalUsers,\n            activeUsers,\n            adminUsers\n        };\n    } catch (error) {\n        console.error(\"사용자 통계 조회 오류:\", error);\n        return {\n            totalUsers: 0,\n            activeUsers: 0,\n            adminUsers: 0\n        };\n    }\n}\n/**\r\n * 사용자 통계 수집\r\n */ async function getUserStatsForTitles(user) {\n    try {\n        // Like 모델에서 해당 사용자의 좋아요 수 조회\n        const Like = (await __webpack_require__.e(/*! import() */ \"_rsc_src_models_Like_ts\").then(__webpack_require__.bind(__webpack_require__, /*! @/models/Like */ \"(rsc)/./src/models/Like.ts\"))).default;\n        const likeCount = await Like.countDocuments({\n            userId: user._id\n        });\n        // Playlist 모델에서 해당 사용자의 플레이리스트 수 조회\n        const Playlist = (await __webpack_require__.e(/*! import() */ \"_rsc_src_models_Playlist_ts\").then(__webpack_require__.bind(__webpack_require__, /*! @/models/Playlist */ \"(rsc)/./src/models/Playlist.ts\"))).default;\n        const playlistCount = await Playlist.countDocuments({\n            userId: user._id\n        });\n        // 실제 활동 통계 사용 (activityStats가 없으면 기본값)\n        const activityStats = user.activityStats || {\n            totalLoginDays: 1,\n            currentStreak: 1,\n            longestStreak: 1,\n            lastVisitDate: null\n        };\n        return {\n            likeCount,\n            playlistCount,\n            loginCount: activityStats.totalLoginDays,\n            consecutiveDays: activityStats.currentStreak\n        };\n    } catch (error) {\n        console.error(\"사용자 통계 수집 오류:\", error);\n        return {\n            likeCount: 0,\n            playlistCount: 0,\n            loginCount: 1,\n            consecutiveDays: 1\n        };\n    }\n}\n/**\r\n * 사용자 칭호 체크 및 부여\r\n */ async function checkAndGrantTitles(user) {\n    try {\n        // 기존 칭호가 없으면 빈 배열로 초기화\n        if (!user.titles) {\n            user.titles = [];\n        }\n        if (user.selectedTitle === undefined) {\n            user.selectedTitle = null;\n        }\n        // 사용자 통계 수집\n        const stats = await getUserStatsForTitles(user);\n        // 새로 획득할 수 있는 칭호 확인\n        const newTitleDefs = (0,_lib_titleSystem__WEBPACK_IMPORTED_MODULE_2__.checkForNewTitles)(user, stats);\n        // 새 칭호 부여\n        let grantedCount = 0;\n        for (const titleDef of newTitleDefs){\n            if ((0,_lib_titleSystem__WEBPACK_IMPORTED_MODULE_2__.grantTitle)(user, titleDef)) {\n                grantedCount++;\n                console.log(`칭호 부여: ${user.channelName} → ${titleDef.name}`);\n                // Mongoose가 배열 변경을 감지하도록 명시적으로 표시\n                user.markModified(\"titles\");\n                user.markModified(\"selectedTitle\");\n            }\n        }\n        if (grantedCount > 0) {\n            console.log(`총 ${grantedCount}개의 새로운 칭호를 부여했습니다`);\n            console.log(\"🏆 현재 사용자 칭호 상태:\", {\n                titlesCount: user.titles.length,\n                selectedTitle: user.selectedTitle,\n                titles: user.titles.map((t)=>t.name)\n            });\n        }\n    } catch (error) {\n        console.error(\"칭호 체크 및 부여 오류:\", error);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/userService.ts\n");

/***/ }),

/***/ "(rsc)/./src/models/SongDetail.ts":
/*!**********************************!*\
  !*** ./src/models/SongDetail.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst MRLinkSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    url: {\n        type: String,\n        required: true,\n        trim: true\n    },\n    skipSeconds: {\n        type: Number,\n        default: 0,\n        min: 0\n    },\n    label: {\n        type: String,\n        trim: true\n    },\n    duration: {\n        type: String,\n        trim: true\n    }\n}, {\n    _id: false\n});\nconst SongDetailSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    title: {\n        type: String,\n        required: true,\n        trim: true\n    },\n    artist: {\n        type: String,\n        required: true,\n        trim: true\n    },\n    titleAlias: {\n        type: String,\n        trim: true\n    },\n    artistAlias: {\n        type: String,\n        trim: true\n    },\n    language: {\n        type: String,\n        trim: true,\n        enum: [\n            'Korean',\n            'English',\n            'Japanese',\n            'Chinese',\n            'Other'\n        ]\n    },\n    lyrics: {\n        type: String,\n        trim: true\n    },\n    searchTags: [\n        {\n            type: String,\n            trim: true\n        }\n    ],\n    sungCount: {\n        type: Number,\n        default: 0,\n        min: 0\n    },\n    likeCount: {\n        type: Number,\n        default: 0,\n        min: 0\n    },\n    lastSungDate: {\n        type: String,\n        trim: true\n    },\n    keyAdjustment: {\n        type: Number,\n        default: null,\n        validate: {\n            validator: function(v) {\n                if (v === undefined || v === null) return true;\n                return v >= -12 && v <= 12;\n            },\n            message: '키 조절은 -12부터 +12 사이의 숫자로 입력해주세요.'\n        }\n    },\n    mrLinks: [\n        MRLinkSchema\n    ],\n    selectedMRIndex: {\n        type: Number,\n        default: 0,\n        min: 0,\n        validate: {\n            validator: function(v) {\n                if (v === undefined || v === null) return true;\n                const mrLinks = this.mrLinks;\n                if (!mrLinks || mrLinks.length === 0) return true;\n                return v < mrLinks.length;\n            },\n            message: 'selectedMRIndex must be within the range of available MR links'\n        }\n    },\n    personalNotes: {\n        type: String,\n        trim: true\n    },\n    imageUrl: {\n        type: String,\n        trim: true,\n        validate: {\n            validator: function(v) {\n                if (!v) return true; // 빈 값은 허용\n                // URL 형식 검증\n                try {\n                    new URL(v);\n                    return true;\n                } catch  {\n                    return false;\n                }\n            },\n            message: '올바른 URL 형식을 입력해주세요.'\n        }\n    },\n    // 곡 상태 관리\n    status: {\n        type: String,\n        enum: [\n            'active',\n            'deleted',\n            'pending',\n            'rejected'\n        ],\n        default: 'active'\n    },\n    // 곡 소스 타입 (기존 source 필드 확장)\n    sourceType: {\n        type: String,\n        enum: [\n            'sheet',\n            'admin',\n            'user_suggestion'\n        ],\n        default: 'sheet'\n    },\n    // 추천자 정보 (사용자 추천곡인 경우)\n    suggestedBy: {\n        type: String,\n        trim: true\n    },\n    // 삭제 관련 정보\n    deletedAt: {\n        type: Date\n    },\n    deletedBy: {\n        type: String,\n        trim: true\n    },\n    deleteReason: {\n        type: String,\n        trim: true\n    },\n    // 승인 관련 정보 (추천곡용)\n    approvedAt: {\n        type: Date\n    },\n    approvedBy: {\n        type: String,\n        trim: true\n    }\n}, {\n    timestamps: true\n});\n// 제목+아티스트 복합 unique 인덱스 (같은 제목이라도 다른 아티스트면 허용)\nSongDetailSchema.index({\n    title: 1,\n    artist: 1\n}, {\n    unique: true\n});\nSongDetailSchema.index({\n    title: 1\n}); // 제목 검색용\nSongDetailSchema.index({\n    sungCount: -1\n});\nSongDetailSchema.index({\n    lastSungDate: -1\n});\nSongDetailSchema.index({\n    searchTags: 1\n});\nSongDetailSchema.index({\n    language: 1\n});\nSongDetailSchema.index({\n    status: 1\n});\nSongDetailSchema.index({\n    sourceType: 1\n});\nSongDetailSchema.index({\n    suggestedBy: 1\n});\nSongDetailSchema.index({\n    deletedAt: -1\n});\n// 새로운 통일된 모델명 (SongDetail)\nconst SongDetail = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).SongDetail || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('SongDetail', SongDetailSchema);\n// 기존 호환성을 위한 별칭 제거 (마이그레이션 완료)\n// SongDetail 모델만 사용\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SongDetail);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/models/SongDetail.ts\n");

/***/ }),

/***/ "(rsc)/./src/models/User.ts":
/*!****************************!*\
  !*** ./src/models/User.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst userSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    channelId: {\n        type: String,\n        required: true,\n        unique: true\n    },\n    channelName: {\n        type: String,\n        required: true\n    },\n    displayName: {\n        type: String,\n        required: false\n    },\n    profileImageUrl: {\n        type: String,\n        default: null\n    },\n    role: {\n        type: String,\n        enum: [\n            \"super_admin\",\n            \"song_admin\",\n            \"song_editor\",\n            \"user\"\n        ],\n        default: \"user\"\n    },\n    grantedBy: {\n        type: String,\n        default: null\n    },\n    grantedAt: {\n        type: Date,\n        default: null\n    },\n    lastLoginAt: {\n        type: Date,\n        default: Date.now\n    },\n    channelNameHistory: [\n        {\n            channelName: {\n                type: String,\n                required: true\n            },\n            changedAt: {\n                type: Date,\n                default: Date.now\n            },\n            source: {\n                type: String,\n                enum: [\n                    \"login\",\n                    \"initial\"\n                ],\n                required: true\n            }\n        }\n    ],\n    titles: [\n        {\n            id: {\n                type: String,\n                required: true\n            },\n            name: {\n                type: String,\n                required: true\n            },\n            description: {\n                type: String,\n                required: true\n            },\n            earnedAt: {\n                type: Date,\n                default: Date.now\n            },\n            condition: {\n                type: String,\n                required: true\n            },\n            rarity: {\n                type: String,\n                enum: [\n                    \"common\",\n                    \"rare\",\n                    \"epic\",\n                    \"legendary\"\n                ],\n                required: true\n            }\n        }\n    ],\n    selectedTitle: {\n        type: String,\n        default: null\n    },\n    preferences: {\n        theme: {\n            type: String,\n            enum: [\n                \"light\",\n                \"dark\",\n                \"system\"\n            ],\n            default: \"system\"\n        },\n        defaultPlaylistView: {\n            type: String,\n            enum: [\n                \"grid\",\n                \"list\"\n            ],\n            default: \"grid\"\n        }\n    },\n    activityStats: {\n        totalLoginDays: {\n            type: Number,\n            default: 0\n        },\n        currentStreak: {\n            type: Number,\n            default: 0\n        },\n        longestStreak: {\n            type: Number,\n            default: 0\n        },\n        lastVisitDate: {\n            type: String,\n            default: null\n        }\n    }\n}, {\n    timestamps: true\n});\n// 인덱스 추가 (channelId는 unique: true로 자동 인덱스 생성됨)\nuserSchema.index({\n    role: 1\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).User || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model(\"User\", userSchema));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/models/User.ts\n");

/***/ }),

/***/ "(rsc)/./src/models/UserActivity.ts":
/*!************************************!*\
  !*** ./src/models/UserActivity.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserActivity: () => (/* binding */ UserActivity),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst UserActivitySchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    userId: {\n        type: mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema.Types.ObjectId,\n        ref: 'User',\n        required: true,\n        index: true\n    },\n    date: {\n        type: String,\n        required: true\n    },\n    visitCount: {\n        type: Number,\n        default: 1\n    },\n    firstVisitAt: {\n        type: Date,\n        required: true\n    },\n    lastVisitAt: {\n        type: Date,\n        required: true\n    }\n}, {\n    timestamps: true\n});\n// 복합 인덱스: 사용자별 날짜 조회 최적화\nUserActivitySchema.index({\n    userId: 1,\n    date: 1\n}, {\n    unique: true\n});\n// 날짜별 인덱스: 오래된 데이터 정리 시 사용\nUserActivitySchema.index({\n    date: 1\n});\nconst UserActivity = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).UserActivity || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('UserActivity', UserActivitySchema);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UserActivity);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbW9kZWxzL1VzZXJBY3Rpdml0eS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXFEO0FBWXJELE1BQU1FLHFCQUFxQixJQUFJRCw0Q0FBTUEsQ0FBZ0I7SUFDbkRFLFFBQVE7UUFDTkMsTUFBTUgsNENBQU1BLENBQUNJLEtBQUssQ0FBQ0MsUUFBUTtRQUMzQkMsS0FBSztRQUNMQyxVQUFVO1FBQ1ZDLE9BQU87SUFDVDtJQUNBQyxNQUFNO1FBQ0pOLE1BQU1PO1FBQ05ILFVBQVU7SUFDWjtJQUNBSSxZQUFZO1FBQ1ZSLE1BQU1TO1FBQ05DLFNBQVM7SUFDWDtJQUNBQyxjQUFjO1FBQ1pYLE1BQU1ZO1FBQ05SLFVBQVU7SUFDWjtJQUNBUyxhQUFhO1FBQ1hiLE1BQU1ZO1FBQ05SLFVBQVU7SUFDWjtBQUNGLEdBQUc7SUFDRFUsWUFBWTtBQUNkO0FBRUEseUJBQXlCO0FBQ3pCaEIsbUJBQW1CTyxLQUFLLENBQUM7SUFBRU4sUUFBUTtJQUFHTyxNQUFNO0FBQUUsR0FBRztJQUFFUyxRQUFRO0FBQUs7QUFFaEUsMkJBQTJCO0FBQzNCakIsbUJBQW1CTyxLQUFLLENBQUM7SUFBRUMsTUFBTTtBQUFFO0FBRW5DLE1BQU1VLGVBQWVwQix3REFBZSxDQUFDb0IsWUFBWSxJQUFJcEIscURBQWMsQ0FBZ0IsZ0JBQWdCRTtBQUU1RTtBQUN2QixpRUFBZWtCLFlBQVlBLEVBQUEiLCJzb3VyY2VzIjpbIi9tbnQvZi9EYXRhL0dpdC9jbGF1ZGUtY29kZS9heWF1a2UtcGFnZS9heWF1a2UtcGFnZS9zcmMvbW9kZWxzL1VzZXJBY3Rpdml0eS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UsIHsgU2NoZW1hLCBEb2N1bWVudCB9IGZyb20gJ21vbmdvb3NlJ1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJVXNlckFjdGl2aXR5IGV4dGVuZHMgRG9jdW1lbnQge1xyXG4gIHVzZXJJZDogbW9uZ29vc2UuVHlwZXMuT2JqZWN0SWRcclxuICBkYXRlOiBzdHJpbmcgLy8gJ1lZWVktTU0tREQnIO2YleyLnVxyXG4gIHZpc2l0Q291bnQ6IG51bWJlclxyXG4gIGZpcnN0VmlzaXRBdDogRGF0ZVxyXG4gIGxhc3RWaXNpdEF0OiBEYXRlXHJcbiAgY3JlYXRlZEF0OiBEYXRlXHJcbiAgdXBkYXRlZEF0OiBEYXRlXHJcbn1cclxuXHJcbmNvbnN0IFVzZXJBY3Rpdml0eVNjaGVtYSA9IG5ldyBTY2hlbWE8SVVzZXJBY3Rpdml0eT4oe1xyXG4gIHVzZXJJZDoge1xyXG4gICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG4gICAgcmVmOiAnVXNlcicsXHJcbiAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgIGluZGV4OiB0cnVlXHJcbiAgfSxcclxuICBkYXRlOiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICByZXF1aXJlZDogdHJ1ZVxyXG4gIH0sXHJcbiAgdmlzaXRDb3VudDoge1xyXG4gICAgdHlwZTogTnVtYmVyLFxyXG4gICAgZGVmYXVsdDogMVxyXG4gIH0sXHJcbiAgZmlyc3RWaXNpdEF0OiB7XHJcbiAgICB0eXBlOiBEYXRlLFxyXG4gICAgcmVxdWlyZWQ6IHRydWVcclxuICB9LFxyXG4gIGxhc3RWaXNpdEF0OiB7XHJcbiAgICB0eXBlOiBEYXRlLFxyXG4gICAgcmVxdWlyZWQ6IHRydWVcclxuICB9XHJcbn0sIHtcclxuICB0aW1lc3RhbXBzOiB0cnVlXHJcbn0pXHJcblxyXG4vLyDrs7Xtlakg7J24642x7IqkOiDsgqzsmqnsnpDrs4Qg64Kg7KecIOyhsO2ajCDstZzsoIHtmZRcclxuVXNlckFjdGl2aXR5U2NoZW1hLmluZGV4KHsgdXNlcklkOiAxLCBkYXRlOiAxIH0sIHsgdW5pcXVlOiB0cnVlIH0pXHJcblxyXG4vLyDrgqDsp5zrs4Qg7J24642x7IqkOiDsmKTrnpjrkJwg642w7J207YSwIOygleumrCDsi5wg7IKs7JqpXHJcblVzZXJBY3Rpdml0eVNjaGVtYS5pbmRleCh7IGRhdGU6IDEgfSlcclxuXHJcbmNvbnN0IFVzZXJBY3Rpdml0eSA9IG1vbmdvb3NlLm1vZGVscy5Vc2VyQWN0aXZpdHkgfHwgbW9uZ29vc2UubW9kZWw8SVVzZXJBY3Rpdml0eT4oJ1VzZXJBY3Rpdml0eScsIFVzZXJBY3Rpdml0eVNjaGVtYSlcclxuXHJcbmV4cG9ydCB7IFVzZXJBY3Rpdml0eSB9XHJcbmV4cG9ydCBkZWZhdWx0IFVzZXJBY3Rpdml0eSJdLCJuYW1lcyI6WyJtb25nb29zZSIsIlNjaGVtYSIsIlVzZXJBY3Rpdml0eVNjaGVtYSIsInVzZXJJZCIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwicmVxdWlyZWQiLCJpbmRleCIsImRhdGUiLCJTdHJpbmciLCJ2aXNpdENvdW50IiwiTnVtYmVyIiwiZGVmYXVsdCIsImZpcnN0VmlzaXRBdCIsIkRhdGUiLCJsYXN0VmlzaXRBdCIsInRpbWVzdGFtcHMiLCJ1bmlxdWUiLCJVc2VyQWN0aXZpdHkiLCJtb2RlbHMiLCJtb2RlbCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/models/UserActivity.ts\n");

/***/ }),

/***/ "(rsc)/./src/models/YouTubeComment.ts":
/*!**************************************!*\
  !*** ./src/models/YouTubeComment.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   YouTubeChannel: () => (/* binding */ YouTubeChannel),\n/* harmony export */   YouTubeComment: () => (/* binding */ YouTubeComment),\n/* harmony export */   YouTubeVideo: () => (/* binding */ YouTubeVideo)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst ChannelSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    channelId: {\n        type: String,\n        required: true,\n        unique: true\n    },\n    channelName: {\n        type: String,\n        required: true\n    },\n    channelUrl: {\n        type: String,\n        required: true\n    },\n    lastSyncDate: {\n        type: Date,\n        default: Date.now\n    },\n    totalVideos: {\n        type: Number,\n        default: 0\n    },\n    totalComments: {\n        type: Number,\n        default: 0\n    },\n    timelineComments: {\n        type: Number,\n        default: 0\n    }\n}, {\n    timestamps: true\n});\nconst VideoSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    videoId: {\n        type: String,\n        required: true,\n        unique: true\n    },\n    channelId: {\n        type: String,\n        required: true\n    },\n    title: {\n        type: String,\n        required: true\n    },\n    publishedAt: {\n        type: Date,\n        required: true\n    },\n    duration: {\n        type: String,\n        default: ''\n    },\n    viewCount: {\n        type: Number,\n        default: 0\n    },\n    totalComments: {\n        type: Number,\n        default: 0\n    },\n    timelineComments: {\n        type: Number,\n        default: 0\n    },\n    lastCommentSync: {\n        type: Date,\n        default: Date.now\n    },\n    lastNewCommentAt: {\n        type: Date\n    },\n    thumbnailUrl: {\n        type: String,\n        default: ''\n    }\n}, {\n    timestamps: true\n});\nconst CommentSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    commentId: {\n        type: String,\n        required: true,\n        unique: true\n    },\n    videoId: {\n        type: String,\n        required: true\n    },\n    authorName: {\n        type: String,\n        required: true\n    },\n    textContent: {\n        type: String,\n        required: true\n    },\n    publishedAt: {\n        type: Date,\n        required: true\n    },\n    likeCount: {\n        type: Number,\n        default: 0\n    },\n    isTimeline: {\n        type: Boolean,\n        default: false\n    },\n    extractedTimestamps: [\n        {\n            type: String\n        }\n    ],\n    isProcessed: {\n        type: Boolean,\n        default: false\n    },\n    processedBy: {\n        type: String\n    },\n    processedAt: {\n        type: Date\n    },\n    manuallyMarked: {\n        type: Boolean,\n        default: false\n    }\n}, {\n    timestamps: true\n});\n// 인덱스 설정\nVideoSchema.index({\n    channelId: 1,\n    publishedAt: -1\n});\nCommentSchema.index({\n    videoId: 1,\n    isTimeline: 1\n});\nCommentSchema.index({\n    isProcessed: 1,\n    isTimeline: 1\n});\nconst YouTubeChannel = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).YouTubeChannel || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('YouTubeChannel', ChannelSchema);\nconst YouTubeVideo = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).YouTubeVideo || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('YouTubeVideo', VideoSchema);\nconst YouTubeComment = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).YouTubeComment || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('YouTubeComment', CommentSchema);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/models/YouTubeComment.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "?32c4":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?66e9":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("mongoose");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/next-auth","vendor-chunks/@babel","vendor-chunks/jose","vendor-chunks/openid-client","vendor-chunks/ws","vendor-chunks/chzzk","vendor-chunks/oauth","vendor-chunks/preact","vendor-chunks/yallist","vendor-chunks/preact-render-to-string","vendor-chunks/cookie","vendor-chunks/oidc-token-hash","vendor-chunks/@panva","vendor-chunks/isomorphic-ws"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ftimeline-parser%2Froute&page=%2Fapi%2Ftimeline-parser%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftimeline-parser%2Froute.ts&appDir=%2Fmnt%2Ff%2FData%2FGit%2Fclaude-code%2Fayauke-page%2Fayauke-page%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fmnt%2Ff%2FData%2FGit%2Fclaude-code%2Fayauke-page%2Fayauke-page&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();