/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/admin/songs/route";
exports.ids = ["app/api/admin/songs/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fadmin%2Fsongs%2Froute&page=%2Fapi%2Fadmin%2Fsongs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fsongs%2Froute.ts&appDir=%2Fmnt%2Ff%2FData%2FGit%2Fclaude-code%2Fayauke-page%2Fayauke-page%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fmnt%2Ff%2FData%2FGit%2Fclaude-code%2Fayauke-page%2Fayauke-page&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fadmin%2Fsongs%2Froute&page=%2Fapi%2Fadmin%2Fsongs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fsongs%2Froute.ts&appDir=%2Fmnt%2Ff%2FData%2FGit%2Fclaude-code%2Fayauke-page%2Fayauke-page%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fmnt%2Ff%2FData%2FGit%2Fclaude-code%2Fayauke-page%2Fayauke-page&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mnt_f_Data_Git_claude_code_ayauke_page_ayauke_page_src_app_api_admin_songs_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/admin/songs/route.ts */ \"(rsc)/./src/app/api/admin/songs/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/admin/songs/route\",\n        pathname: \"/api/admin/songs\",\n        filename: \"route\",\n        bundlePath: \"app/api/admin/songs/route\"\n    },\n    resolvedPagePath: \"/mnt/f/Data/Git/claude-code/ayauke-page/ayauke-page/src/app/api/admin/songs/route.ts\",\n    nextConfigOutput,\n    userland: _mnt_f_Data_Git_claude_code_ayauke_page_ayauke_page_src_app_api_admin_songs_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZhZG1pbiUyRnNvbmdzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZhZG1pbiUyRnNvbmdzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGYWRtaW4lMkZzb25ncyUyRnJvdXRlLnRzJmFwcERpcj0lMkZtbnQlMkZmJTJGRGF0YSUyRkdpdCUyRmNsYXVkZS1jb2RlJTJGYXlhdWtlLXBhZ2UlMkZheWF1a2UtcGFnZSUyRnNyYyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGbW50JTJGZiUyRkRhdGElMkZHaXQlMkZjbGF1ZGUtY29kZSUyRmF5YXVrZS1wYWdlJTJGYXlhdWtlLXBhZ2UmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ3FCO0FBQ29DO0FBQ2pIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5R0FBbUI7QUFDM0M7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQXNEO0FBQzlEO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzBGOztBQUUxRiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvbW50L2YvRGF0YS9HaXQvY2xhdWRlLWNvZGUvYXlhdWtlLXBhZ2UvYXlhdWtlLXBhZ2Uvc3JjL2FwcC9hcGkvYWRtaW4vc29uZ3Mvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2FkbWluL3NvbmdzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYWRtaW4vc29uZ3NcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2FkbWluL3NvbmdzL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL21udC9mL0RhdGEvR2l0L2NsYXVkZS1jb2RlL2F5YXVrZS1wYWdlL2F5YXVrZS1wYWdlL3NyYy9hcHAvYXBpL2FkbWluL3NvbmdzL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgd29ya0FzeW5jU3RvcmFnZSxcbiAgICAgICAgd29ya1VuaXRBc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fadmin%2Fsongs%2Froute&page=%2Fapi%2Fadmin%2Fsongs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fsongs%2Froute.ts&appDir=%2Fmnt%2Ff%2FData%2FGit%2Fclaude-code%2Fayauke-page%2Fayauke-page%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fmnt%2Ff%2FData%2FGit%2Fclaude-code%2Fayauke-page%2Fayauke-page&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/admin/songs/route.ts":
/*!******************************************!*\
  !*** ./src/app/api/admin/songs/route.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/next */ \"(rsc)/./node_modules/next-auth/next/index.js\");\n/* harmony import */ var _lib_authOptions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/authOptions */ \"(rsc)/./src/lib/authOptions.ts\");\n/* harmony import */ var _lib_googleSheets__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/googleSheets */ \"(rsc)/./src/lib/googleSheets.ts\");\n/* harmony import */ var _lib_permissions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/permissions */ \"(rsc)/./src/lib/permissions.ts\");\n/* harmony import */ var _lib_mongodb__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/mongodb */ \"(rsc)/./src/lib/mongodb.ts\");\n/* harmony import */ var _models_SongDetail__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/models/SongDetail */ \"(rsc)/./src/models/SongDetail.ts\");\n\n\n\n\n\n\n\nasync function GET(request) {\n    try {\n        // 노래 조회 권한 체크\n        const session = await (0,next_auth_next__WEBPACK_IMPORTED_MODULE_1__.getServerSession)(_lib_authOptions__WEBPACK_IMPORTED_MODULE_2__.authOptions);\n        if (!session || !(0,_lib_permissions__WEBPACK_IMPORTED_MODULE_4__.hasPermission)(session.user.role, _lib_permissions__WEBPACK_IMPORTED_MODULE_4__.Permission.SONGS_VIEW)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: '노래 관리 권한이 필요합니다.'\n            }, {\n                status: 403\n            });\n        }\n        // MongoDB에서 곡 데이터 직접 가져오기 (구글시트 제외)\n        const { songDetails } = await (0,_lib_googleSheets__WEBPACK_IMPORTED_MODULE_3__.fetchSongDetailsFromMongo)();\n        // SongDetail을 Song 형태로 변환하여 관리용 데이터 생성\n        const songs = songDetails.map((detail)=>({\n                id: detail._id.toString(),\n                title: detail.title,\n                artist: detail.artist,\n                titleAlias: detail.titleAlias,\n                artistAlias: detail.artistAlias,\n                language: detail.language || 'Korean',\n                mrLinks: detail.mrLinks || [],\n                lyrics: detail.lyrics || '',\n                personalNotes: detail.personalNotes || '',\n                tags: detail.searchTags || [],\n                keyAdjustment: detail.keyAdjustment,\n                selectedMRIndex: detail.selectedMRIndex || 0,\n                createdAt: detail.createdAt,\n                updatedAt: detail.updatedAt,\n                source: 'mongodb'\n            }));\n        // 관리용 데이터 변환 및 통계 계산\n        const songsWithStatus = songs.map((song)=>{\n            let status = 'complete';\n            // MR 링크 상태 확인\n            const hasMR = song.mrLinks && song.mrLinks.length > 0;\n            // 가사 상태 확인\n            const hasLyrics = song.lyrics && song.lyrics.trim().length > 0;\n            // 상태 결정\n            if (!hasMR && !hasLyrics) {\n                status = 'incomplete';\n            } else if (!hasMR) {\n                status = 'missing-mr';\n            } else if (!hasLyrics) {\n                status = 'missing-lyrics';\n            }\n            return {\n                id: song.id,\n                title: song.titleAlias || song.title,\n                artist: song.artistAlias || song.artist,\n                originalTitle: song.title,\n                originalArtist: song.artist,\n                language: song.language || 'Unknown',\n                tags: song.tags || [],\n                mrLinks: song.mrLinks || [],\n                hasLyrics: hasLyrics,\n                lyrics: song.lyrics || '',\n                sungCount: 0,\n                likedCount: 0,\n                addedDate: song.createdAt || new Date(),\n                status: status,\n                keyAdjustment: song.keyAdjustment,\n                selectedMRIndex: song.selectedMRIndex || 0,\n                personalNotes: song.personalNotes || '',\n                source: 'mongodb'\n            };\n        });\n        // 통계 계산\n        const stats = {\n            total: songsWithStatus.length,\n            complete: songsWithStatus.filter((s)=>s.status === 'complete').length,\n            missingMR: songsWithStatus.filter((s)=>s.status === 'missing-mr' || s.status === 'incomplete').length,\n            missingLyrics: songsWithStatus.filter((s)=>s.status === 'missing-lyrics' || s.status === 'incomplete').length,\n            incomplete: songsWithStatus.filter((s)=>s.status === 'incomplete').length,\n            languages: {\n                Korean: songsWithStatus.filter((s)=>s.language === 'Korean').length,\n                English: songsWithStatus.filter((s)=>s.language === 'English').length,\n                Japanese: songsWithStatus.filter((s)=>s.language === 'Japanese').length,\n                Chinese: songsWithStatus.filter((s)=>s.language === 'Chinese').length,\n                Other: songsWithStatus.filter((s)=>![\n                        'Korean',\n                        'English',\n                        'Japanese',\n                        'Chinese'\n                    ].includes(s.language)).length\n            }\n        };\n        console.log(`📊 관리자 목록: MongoDB에서 ${songsWithStatus.length}곡 로드`);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            songs: songsWithStatus,\n            stats: stats\n        });\n    } catch (error) {\n        console.error('❌ 관리자 노래 목록 조회 오류:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: '노래 목록을 불러오는 중 오류가 발생했습니다.'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const session = await (0,next_auth_next__WEBPACK_IMPORTED_MODULE_1__.getServerSession)(_lib_authOptions__WEBPACK_IMPORTED_MODULE_2__.authOptions);\n        if (!session) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: '로그인이 필요합니다.'\n            }, {\n                status: 401\n            });\n        }\n        const body = await request.json();\n        const { action, songIds, data, songData } = body;\n        // 작업별 권한 체크\n        const userRole = session.user.role;\n        switch(action){\n            case 'bulk-edit':\n                if (!(0,_lib_permissions__WEBPACK_IMPORTED_MODULE_4__.hasPermission)(userRole, _lib_permissions__WEBPACK_IMPORTED_MODULE_4__.Permission.SONGS_EDIT)) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: '노래 편집 권한이 필요합니다.'\n                    }, {\n                        status: 403\n                    });\n                }\n                return await handleBulkEdit(songIds, data);\n            case 'add-tags':\n                if (!(0,_lib_permissions__WEBPACK_IMPORTED_MODULE_4__.hasPermission)(userRole, _lib_permissions__WEBPACK_IMPORTED_MODULE_4__.Permission.SONGS_EDIT)) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: '노래 편집 권한이 필요합니다.'\n                    }, {\n                        status: 403\n                    });\n                }\n                return await handleAddTags(songIds, data);\n            case 'edit-song':\n                if (!(0,_lib_permissions__WEBPACK_IMPORTED_MODULE_4__.hasPermission)(userRole, _lib_permissions__WEBPACK_IMPORTED_MODULE_4__.Permission.SONGS_EDIT)) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: '노래 편집 권한이 필요합니다.'\n                    }, {\n                        status: 403\n                    });\n                }\n                return await handleEditSong(songIds[0], data);\n            case 'auto-search-mr':\n                if (!(0,_lib_permissions__WEBPACK_IMPORTED_MODULE_4__.hasPermission)(userRole, _lib_permissions__WEBPACK_IMPORTED_MODULE_4__.Permission.SONGS_EDIT)) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: '노래 편집 권한이 필요합니다.'\n                    }, {\n                        status: 403\n                    });\n                }\n                break;\n            case 'add-lyrics':\n                if (!(0,_lib_permissions__WEBPACK_IMPORTED_MODULE_4__.hasPermission)(userRole, _lib_permissions__WEBPACK_IMPORTED_MODULE_4__.Permission.SONGS_EDIT)) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: '노래 편집 권한이 필요합니다.'\n                    }, {\n                        status: 403\n                    });\n                }\n                break;\n            case 'add-song':\n                if (!(0,_lib_permissions__WEBPACK_IMPORTED_MODULE_4__.hasPermission)(userRole, _lib_permissions__WEBPACK_IMPORTED_MODULE_4__.Permission.SONGS_CREATE)) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: '노래 생성 권한이 필요합니다.'\n                    }, {\n                        status: 403\n                    });\n                }\n                return await handleAddSong(songData);\n            case 'create':\n                if (!(0,_lib_permissions__WEBPACK_IMPORTED_MODULE_4__.hasPermission)(userRole, _lib_permissions__WEBPACK_IMPORTED_MODULE_4__.Permission.SONGS_CREATE)) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: '노래 생성 권한이 필요합니다.'\n                    }, {\n                        status: 403\n                    });\n                }\n                break;\n            case 'delete-songs':\n                if (!(0,_lib_permissions__WEBPACK_IMPORTED_MODULE_4__.hasPermission)(userRole, _lib_permissions__WEBPACK_IMPORTED_MODULE_4__.Permission.SONGS_DELETE)) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: '노래 삭제 권한이 필요합니다.'\n                    }, {\n                        status: 403\n                    });\n                }\n                return await handleDeleteSongs(songIds, session.user.channelId, data?.reason);\n            case 'delete':\n                if (!(0,_lib_permissions__WEBPACK_IMPORTED_MODULE_4__.hasPermission)(userRole, _lib_permissions__WEBPACK_IMPORTED_MODULE_4__.Permission.SONGS_DELETE)) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: '노래 삭제 권한이 필요합니다.'\n                    }, {\n                        status: 403\n                    });\n                }\n                break;\n            default:\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: '알 수 없는 작업입니다.'\n                }, {\n                    status: 400\n                });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: `${action} 작업이 완료되었습니다.`,\n            affectedCount: songIds?.length || 0\n        });\n    } catch (error) {\n        console.error('❌ 일괄 작업 오류:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: '일괄 작업 중 오류가 발생했습니다.'\n        }, {\n            status: 500\n        });\n    }\n}\n// 새 곡 추가 함수\nasync function handleAddSong(songData) {\n    try {\n        await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n        // 중복 체크 (제목+아티스트 복합 unique이므로 둘 다 확인)\n        const existingSong = await _models_SongDetail__WEBPACK_IMPORTED_MODULE_6__[\"default\"].findOne({\n            title: songData.title,\n            artist: songData.artist\n        });\n        if (existingSong) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: '같은 제목과 아티스트의 곡이 이미 존재합니다.'\n            }, {\n                status: 400\n            });\n        }\n        // MR 링크를 올바른 형식으로 변환\n        const mrLinks = songData.mrLinks?.map((url)=>({\n                url\n            })) || [];\n        // 새 곡 생성\n        const newSong = new _models_SongDetail__WEBPACK_IMPORTED_MODULE_6__[\"default\"]({\n            title: songData.title,\n            artist: songData.artist,\n            language: songData.language,\n            lyrics: songData.lyrics || '',\n            mrLinks: mrLinks,\n            searchTags: songData.tags || [],\n            personalNotes: '',\n            sungCount: 0,\n            // 새 필드들 (명시적으로 설정)\n            status: 'active',\n            sourceType: 'admin'\n        });\n        await newSong.save();\n        console.log(`✅ 새 곡 추가: ${songData.title}`);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: `${songData.title} 곡이 성공적으로 추가되었습니다.`,\n            song: newSong\n        });\n    } catch (error) {\n        console.error('❌ 새 곡 추가 오류:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: '곡 추가 중 오류가 발생했습니다.'\n        }, {\n            status: 500\n        });\n    }\n}\n// 일괄 편집 함수\nasync function handleBulkEdit(songIds, editData) {\n    try {\n        await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n        if (!songIds || songIds.length === 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: '편집할 곡을 선택해주세요.'\n            }, {\n                status: 400\n            });\n        }\n        if (!editData || Object.keys(editData).length === 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: '변경할 정보를 입력해주세요.'\n            }, {\n                status: 400\n            });\n        }\n        let modifiedCount = 0;\n        // 아티스트 필드가 있는 경우 각 곡별로 처리 (alias 로직 때문에)\n        if (editData.artist) {\n            // 선택된 곡들 조회\n            const songs = await _models_SongDetail__WEBPACK_IMPORTED_MODULE_6__[\"default\"].find({\n                _id: {\n                    $in: songIds\n                },\n                status: {\n                    $ne: 'deleted'\n                }\n            });\n            for (const song of songs){\n                const updateFields = {\n                    updatedAt: new Date()\n                };\n                // 아티스트 alias 로직\n                if (editData.artist === song.artist) {\n                    // 입력된 아티스트가 원본과 같으면 alias 제거\n                    updateFields.artistAlias = null;\n                } else {\n                    // 입력된 아티스트가 원본과 다르면 alias로 설정\n                    updateFields.artistAlias = editData.artist;\n                }\n                // 키 조절 필드 처리\n                if (editData.keyAdjustment !== undefined) {\n                    if (editData.keyAdjustment === 999) {\n                        // 특수값 999는 null로 설정 (키 조절 해제)\n                        updateFields.keyAdjustment = null;\n                    } else {\n                        updateFields.keyAdjustment = editData.keyAdjustment;\n                    }\n                }\n                if (editData.language) {\n                    updateFields.language = editData.language;\n                }\n                // 개별 곡 업데이트\n                const result = await _models_SongDetail__WEBPACK_IMPORTED_MODULE_6__[\"default\"].updateOne({\n                    _id: song._id\n                }, {\n                    $set: updateFields\n                });\n                if (result.modifiedCount > 0) {\n                    modifiedCount++;\n                }\n            }\n        } else {\n            // 아티스트 필드가 없는 경우 기존 방식 사용\n            const updateFields = {};\n            if (editData.keyAdjustment !== undefined) {\n                if (editData.keyAdjustment === 999) {\n                    // 특수값 999는 null로 설정 (키 조절 해제)\n                    updateFields.keyAdjustment = null;\n                } else {\n                    updateFields.keyAdjustment = editData.keyAdjustment;\n                }\n            }\n            if (editData.language) {\n                updateFields.language = editData.language;\n            }\n            updateFields.updatedAt = new Date();\n            const result = await _models_SongDetail__WEBPACK_IMPORTED_MODULE_6__[\"default\"].updateMany({\n                _id: {\n                    $in: songIds\n                },\n                status: {\n                    $ne: 'deleted'\n                }\n            }, {\n                $set: updateFields\n            });\n            modifiedCount = result.modifiedCount;\n        }\n        if (modifiedCount > 0) {\n            console.log(`✏️ ${modifiedCount}곡 일괄 편집 완료`);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: `${modifiedCount}곡이 일괄 수정되었습니다.`,\n            affectedCount: modifiedCount\n        });\n    } catch (error) {\n        console.error('❌ 일괄 편집 오류:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: '일괄 편집 중 오류가 발생했습니다.'\n        }, {\n            status: 500\n        });\n    }\n}\n// 개별 곡 편집 함수\nasync function handleEditSong(songId, editData) {\n    try {\n        await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n        if (!songId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: '편집할 곡을 선택해주세요.'\n            }, {\n                status: 400\n            });\n        }\n        if (!editData || Object.keys(editData).length === 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: '변경할 정보를 입력해주세요.'\n            }, {\n                status: 400\n            });\n        }\n        // 곡 조회\n        const song = await _models_SongDetail__WEBPACK_IMPORTED_MODULE_6__[\"default\"].findOne({\n            _id: songId,\n            status: {\n                $ne: 'deleted'\n            }\n        });\n        if (!song) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: '곡을 찾을 수 없습니다.'\n            }, {\n                status: 404\n            });\n        }\n        // 업데이트할 필드 구성\n        const updateFields = {\n            updatedAt: new Date()\n        };\n        // 제목 업데이트\n        if (editData.title) {\n            updateFields.title = editData.title;\n        }\n        // 아티스트 업데이트 (alias 로직 적용)\n        if (editData.artist !== undefined) {\n            if (editData.artist === song.artist) {\n                // 입력된 아티스트가 원본과 같으면 alias 제거\n                updateFields.artistAlias = null;\n            } else {\n                // 입력된 아티스트가 원본과 다르면 alias로 설정\n                updateFields.artistAlias = editData.artist;\n            }\n        }\n        // 언어 업데이트\n        if (editData.language) {\n            updateFields.language = editData.language;\n        }\n        // 키 조절 업데이트\n        if (editData.keyAdjustment !== undefined) {\n            updateFields.keyAdjustment = editData.keyAdjustment;\n        }\n        // 가사 업데이트\n        if (editData.lyrics !== undefined) {\n            updateFields.lyrics = editData.lyrics;\n        }\n        // MR 링크 업데이트\n        if (editData.mrLinks !== undefined) {\n            updateFields.mrLinks = editData.mrLinks;\n        }\n        // 선택된 MR 인덱스 업데이트\n        if (editData.selectedMRIndex !== undefined) {\n            updateFields.selectedMRIndex = editData.selectedMRIndex;\n        }\n        // 태그 업데이트\n        if (editData.tags !== undefined) {\n            updateFields.searchTags = editData.tags;\n        }\n        // 업데이트 실행\n        const result = await _models_SongDetail__WEBPACK_IMPORTED_MODULE_6__[\"default\"].updateOne({\n            _id: songId\n        }, {\n            $set: updateFields\n        });\n        if (result.modifiedCount > 0) {\n            console.log(`✏️ 곡 편집 완료: ${song.title}`);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: `곡이 성공적으로 수정되었습니다.`,\n            affectedCount: result.modifiedCount\n        });\n    } catch (error) {\n        console.error('❌ 개별 곡 편집 오류:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: '곡 편집 중 오류가 발생했습니다.'\n        }, {\n            status: 500\n        });\n    }\n}\n// 태그 추가 함수\nasync function handleAddTags(songIds, tagData) {\n    try {\n        await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n        if (!songIds || songIds.length === 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: '태그를 추가할 곡을 선택해주세요.'\n            }, {\n                status: 400\n            });\n        }\n        if (!tagData?.tags || tagData.tags.length === 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: '추가할 태그를 입력해주세요.'\n            }, {\n                status: 400\n            });\n        }\n        // 기존 태그에 새 태그 추가 ($addToSet으로 중복 방지)\n        const result = await _models_SongDetail__WEBPACK_IMPORTED_MODULE_6__[\"default\"].updateMany({\n            _id: {\n                $in: songIds\n            },\n            status: {\n                $ne: 'deleted'\n            }\n        }, {\n            $addToSet: {\n                searchTags: {\n                    $each: tagData.tags\n                }\n            },\n            $set: {\n                updatedAt: new Date()\n            }\n        });\n        if (result.modifiedCount > 0) {\n            console.log(`🏷️ ${result.modifiedCount}곡에 태그 추가 완료`);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: `${result.modifiedCount}곡에 태그가 추가되었습니다.`,\n            affectedCount: result.modifiedCount\n        });\n    } catch (error) {\n        console.error('❌ 태그 추가 오류:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: '태그 추가 중 오류가 발생했습니다.'\n        }, {\n            status: 500\n        });\n    }\n}\n// 곡 삭제 함수 (소프트 삭제)\nasync function handleDeleteSongs(songIds, deletedBy, reason) {\n    try {\n        await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n        if (!songIds || songIds.length === 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: '삭제할 곡을 선택해주세요.'\n            }, {\n                status: 400\n            });\n        }\n        // 존재하는 곡들 확인\n        const existingSongs = await _models_SongDetail__WEBPACK_IMPORTED_MODULE_6__[\"default\"].find({\n            _id: {\n                $in: songIds\n            },\n            status: {\n                $ne: 'deleted'\n            }\n        });\n        if (existingSongs.length === 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: '삭제할 수 있는 곡이 없습니다.'\n            }, {\n                status: 400\n            });\n        }\n        // 소프트 삭제 실행\n        const result = await _models_SongDetail__WEBPACK_IMPORTED_MODULE_6__[\"default\"].updateMany({\n            _id: {\n                $in: songIds\n            },\n            status: {\n                $ne: 'deleted'\n            }\n        }, {\n            $set: {\n                status: 'deleted',\n                deletedAt: new Date(),\n                deletedBy: deletedBy,\n                deleteReason: reason || '관리자에 의한 삭제'\n            }\n        });\n        if (result.modifiedCount > 0) {\n            console.log(`🗑️ ${result.modifiedCount}곡 삭제`);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: `${result.modifiedCount}곡이 삭제되었습니다.`,\n            affectedCount: result.modifiedCount\n        });\n    } catch (error) {\n        console.error('❌ 곡 삭제 오료:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: '곡 삭제 중 오류가 발생했습니다.'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/admin/songs/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/adminChannels.ts":
/*!**********************************!*\
  !*** ./src/lib/adminChannels.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AYAUKE_ADMIN_CHANNELS: () => (/* binding */ AYAUKE_ADMIN_CHANNELS),\n/* harmony export */   AYAUKE_ADMIN_CHANNEL_IDS: () => (/* binding */ AYAUKE_ADMIN_CHANNEL_IDS),\n/* harmony export */   SUPER_ADMIN_CHANNELS: () => (/* binding */ SUPER_ADMIN_CHANNELS),\n/* harmony export */   SUPER_ADMIN_CHANNEL_IDS: () => (/* binding */ SUPER_ADMIN_CHANNEL_IDS),\n/* harmony export */   getAdminInfo: () => (/* binding */ getAdminInfo),\n/* harmony export */   getAyaukeAdminInfo: () => (/* binding */ getAyaukeAdminInfo),\n/* harmony export */   getStaticUserRole: () => (/* binding */ getStaticUserRole),\n/* harmony export */   getSuperAdminInfo: () => (/* binding */ getSuperAdminInfo),\n/* harmony export */   isAdminChannel: () => (/* binding */ isAdminChannel),\n/* harmony export */   isAyaukeAdminChannel: () => (/* binding */ isAyaukeAdminChannel),\n/* harmony export */   isSuperAdminChannel: () => (/* binding */ isSuperAdminChannel)\n/* harmony export */ });\n/* harmony import */ var _permissions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./permissions */ \"(rsc)/./src/lib/permissions.ts\");\n\n// 최고 관리자 권한을 가진 치지직 채널 ID 목록 (하드코딩)\nconst SUPER_ADMIN_CHANNEL_IDS = [\n    'd6017f757614569add71b0bc83a81382'\n];\n// 아야우케 관리자 권한을 가진 치지직 채널 ID 목록 (하드코딩)\nconst AYAUKE_ADMIN_CHANNEL_IDS = [\n    'abe8aa82baf3d3ef54ad8468ee73e7fc'\n];\n// 최고 관리자 채널 정보\nconst SUPER_ADMIN_CHANNELS = {\n    'd6017f757614569add71b0bc83a81382': {\n        name: '개발자',\n        role: '개발 관리자'\n    }\n};\n// 아야우케 관리자 채널 정보  \nconst AYAUKE_ADMIN_CHANNELS = {\n    'abe8aa82baf3d3ef54ad8468ee73e7fc': {\n        name: '아야우케',\n        role: '노래책 관리자'\n    }\n};\nfunction isSuperAdminChannel(channelId) {\n    if (!channelId) return false;\n    return SUPER_ADMIN_CHANNEL_IDS.includes(channelId);\n}\nfunction isAyaukeAdminChannel(channelId) {\n    if (!channelId) return false;\n    return AYAUKE_ADMIN_CHANNEL_IDS.includes(channelId);\n}\nfunction getSuperAdminInfo(channelId) {\n    if (!channelId || !isSuperAdminChannel(channelId)) return null;\n    return SUPER_ADMIN_CHANNELS[channelId] || null;\n}\nfunction getAyaukeAdminInfo(channelId) {\n    if (!channelId || !isAyaukeAdminChannel(channelId)) return null;\n    return AYAUKE_ADMIN_CHANNELS[channelId] || null;\n}\nfunction getStaticUserRole(channelId) {\n    if (!channelId) return _permissions__WEBPACK_IMPORTED_MODULE_0__.UserRole.USER;\n    if (isSuperAdminChannel(channelId)) {\n        return _permissions__WEBPACK_IMPORTED_MODULE_0__.UserRole.SUPER_ADMIN;\n    }\n    if (isAyaukeAdminChannel(channelId)) {\n        return _permissions__WEBPACK_IMPORTED_MODULE_0__.UserRole.AYAUKE_ADMIN;\n    }\n    return _permissions__WEBPACK_IMPORTED_MODULE_0__.UserRole.USER;\n}\n// 하위 호환성을 위한 함수들 (나중에 제거)\nfunction isAdminChannel(channelId) {\n    return isSuperAdminChannel(channelId) || isAyaukeAdminChannel(channelId);\n}\nfunction getAdminInfo(channelId) {\n    return getSuperAdminInfo(channelId) || getAyaukeAdminInfo(channelId);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2FkbWluQ2hhbm5lbHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXdDO0FBRXhDLG9DQUFvQztBQUM3QixNQUFNQywwQkFBMEI7SUFDckM7Q0FDRCxDQUFTO0FBRVYsc0NBQXNDO0FBQy9CLE1BQU1DLDJCQUEyQjtJQUN0QztDQUNELENBQVM7QUFFVixlQUFlO0FBQ1IsTUFBTUMsdUJBQXVCO0lBQ2xDLG9DQUFvQztRQUNsQ0MsTUFBTTtRQUNOQyxNQUFNO0lBQ1I7QUFDRixFQUFVO0FBRVYsbUJBQW1CO0FBQ1osTUFBTUMsd0JBQXdCO0lBQ25DLG9DQUFvQztRQUNsQ0YsTUFBTTtRQUNOQyxNQUFNO0lBQ1I7QUFDRixFQUFVO0FBRUgsU0FBU0Usb0JBQW9CQyxTQUFvQztJQUN0RSxJQUFJLENBQUNBLFdBQVcsT0FBTztJQUN2QixPQUFPUCx3QkFBd0JRLFFBQVEsQ0FBQ0Q7QUFDMUM7QUFFTyxTQUFTRSxxQkFBcUJGLFNBQW9DO0lBQ3ZFLElBQUksQ0FBQ0EsV0FBVyxPQUFPO0lBQ3ZCLE9BQU9OLHlCQUF5Qk8sUUFBUSxDQUFDRDtBQUMzQztBQUVPLFNBQVNHLGtCQUFrQkgsU0FBb0M7SUFDcEUsSUFBSSxDQUFDQSxhQUFhLENBQUNELG9CQUFvQkMsWUFBWSxPQUFPO0lBQzFELE9BQU9MLG9CQUFvQixDQUFDSyxVQUErQyxJQUFJO0FBQ2pGO0FBRU8sU0FBU0ksbUJBQW1CSixTQUFvQztJQUNyRSxJQUFJLENBQUNBLGFBQWEsQ0FBQ0UscUJBQXFCRixZQUFZLE9BQU87SUFDM0QsT0FBT0YscUJBQXFCLENBQUNFLFVBQWdELElBQUk7QUFDbkY7QUFFTyxTQUFTSyxrQkFBa0JMLFNBQW9DO0lBQ3BFLElBQUksQ0FBQ0EsV0FBVyxPQUFPUixrREFBUUEsQ0FBQ2MsSUFBSTtJQUVwQyxJQUFJUCxvQkFBb0JDLFlBQVk7UUFDbEMsT0FBT1Isa0RBQVFBLENBQUNlLFdBQVc7SUFDN0I7SUFFQSxJQUFJTCxxQkFBcUJGLFlBQVk7UUFDbkMsT0FBT1Isa0RBQVFBLENBQUNnQixZQUFZO0lBQzlCO0lBRUEsT0FBT2hCLGtEQUFRQSxDQUFDYyxJQUFJO0FBQ3RCO0FBRUEsMEJBQTBCO0FBQ25CLFNBQVNHLGVBQWVULFNBQW9DO0lBQ2pFLE9BQU9ELG9CQUFvQkMsY0FBY0UscUJBQXFCRjtBQUNoRTtBQUVPLFNBQVNVLGFBQWFWLFNBQW9DO0lBQy9ELE9BQU9HLGtCQUFrQkgsY0FBY0ksbUJBQW1CSjtBQUM1RCIsInNvdXJjZXMiOlsiL21udC9mL0RhdGEvR2l0L2NsYXVkZS1jb2RlL2F5YXVrZS1wYWdlL2F5YXVrZS1wYWdlL3NyYy9saWIvYWRtaW5DaGFubmVscy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBVc2VyUm9sZSB9IGZyb20gJy4vcGVybWlzc2lvbnMnXHJcblxyXG4vLyDstZzqs6Ag6rSA66as7J6QIOq2jO2VnOydhCDqsIDsp4Qg7LmY7KeA7KeBIOyxhOuEkCBJRCDrqqnroZ0gKO2VmOuTnOy9lOuUqSlcclxuZXhwb3J0IGNvbnN0IFNVUEVSX0FETUlOX0NIQU5ORUxfSURTID0gW1xyXG4gICdkNjAxN2Y3NTc2MTQ1NjlhZGQ3MWIwYmM4M2E4MTM4MicsIC8vIOyCrOyaqeyekCAo6rCc67Cc7J6QKVxyXG5dIGFzIGNvbnN0XHJcblxyXG4vLyDslYTslbzsmrDsvIAg6rSA66as7J6QIOq2jO2VnOydhCDqsIDsp4Qg7LmY7KeA7KeBIOyxhOuEkCBJRCDrqqnroZ0gKO2VmOuTnOy9lOuUqSlcclxuZXhwb3J0IGNvbnN0IEFZQVVLRV9BRE1JTl9DSEFOTkVMX0lEUyA9IFtcclxuICAnYWJlOGFhODJiYWYzZDNlZjU0YWQ4NDY4ZWU3M2U3ZmMnLCAvLyDslYTslbzsmrDsvIAgKOuFuOuemOyxhSDqtIDrpqzsnpApXHJcbl0gYXMgY29uc3RcclxuXHJcbi8vIOy1nOqzoCDqtIDrpqzsnpAg7LGE64SQIOygleuztFxyXG5leHBvcnQgY29uc3QgU1VQRVJfQURNSU5fQ0hBTk5FTFMgPSB7XHJcbiAgJ2Q2MDE3Zjc1NzYxNDU2OWFkZDcxYjBiYzgzYTgxMzgyJzoge1xyXG4gICAgbmFtZTogJ+qwnOuwnOyekCcsXHJcbiAgICByb2xlOiAn6rCc67CcIOq0gOumrOyekCcsXHJcbiAgfSxcclxufSBhcyBjb25zdFxyXG5cclxuLy8g7JWE7JW87Jqw7LyAIOq0gOumrOyekCDssYTrhJAg7KCV67O0ICBcclxuZXhwb3J0IGNvbnN0IEFZQVVLRV9BRE1JTl9DSEFOTkVMUyA9IHtcclxuICAnYWJlOGFhODJiYWYzZDNlZjU0YWQ4NDY4ZWU3M2U3ZmMnOiB7XHJcbiAgICBuYW1lOiAn7JWE7JW87Jqw7LyAJyxcclxuICAgIHJvbGU6ICfrhbjrnpjssYUg6rSA66as7J6QJyxcclxuICB9LFxyXG59IGFzIGNvbnN0XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaXNTdXBlckFkbWluQ2hhbm5lbChjaGFubmVsSWQ6IHN0cmluZyB8IG51bGwgfCB1bmRlZmluZWQpOiBib29sZWFuIHtcclxuICBpZiAoIWNoYW5uZWxJZCkgcmV0dXJuIGZhbHNlXHJcbiAgcmV0dXJuIFNVUEVSX0FETUlOX0NIQU5ORUxfSURTLmluY2x1ZGVzKGNoYW5uZWxJZCBhcyBhbnkpXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpc0F5YXVrZUFkbWluQ2hhbm5lbChjaGFubmVsSWQ6IHN0cmluZyB8IG51bGwgfCB1bmRlZmluZWQpOiBib29sZWFuIHtcclxuICBpZiAoIWNoYW5uZWxJZCkgcmV0dXJuIGZhbHNlXHJcbiAgcmV0dXJuIEFZQVVLRV9BRE1JTl9DSEFOTkVMX0lEUy5pbmNsdWRlcyhjaGFubmVsSWQgYXMgYW55KVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0U3VwZXJBZG1pbkluZm8oY2hhbm5lbElkOiBzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkKSB7XHJcbiAgaWYgKCFjaGFubmVsSWQgfHwgIWlzU3VwZXJBZG1pbkNoYW5uZWwoY2hhbm5lbElkKSkgcmV0dXJuIG51bGxcclxuICByZXR1cm4gU1VQRVJfQURNSU5fQ0hBTk5FTFNbY2hhbm5lbElkIGFzIGtleW9mIHR5cGVvZiBTVVBFUl9BRE1JTl9DSEFOTkVMU10gfHwgbnVsbFxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0QXlhdWtlQWRtaW5JbmZvKGNoYW5uZWxJZDogc3RyaW5nIHwgbnVsbCB8IHVuZGVmaW5lZCkge1xyXG4gIGlmICghY2hhbm5lbElkIHx8ICFpc0F5YXVrZUFkbWluQ2hhbm5lbChjaGFubmVsSWQpKSByZXR1cm4gbnVsbFxyXG4gIHJldHVybiBBWUFVS0VfQURNSU5fQ0hBTk5FTFNbY2hhbm5lbElkIGFzIGtleW9mIHR5cGVvZiBBWUFVS0VfQURNSU5fQ0hBTk5FTFNdIHx8IG51bGxcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldFN0YXRpY1VzZXJSb2xlKGNoYW5uZWxJZDogc3RyaW5nIHwgbnVsbCB8IHVuZGVmaW5lZCk6IFVzZXJSb2xlIHtcclxuICBpZiAoIWNoYW5uZWxJZCkgcmV0dXJuIFVzZXJSb2xlLlVTRVJcclxuICBcclxuICBpZiAoaXNTdXBlckFkbWluQ2hhbm5lbChjaGFubmVsSWQpKSB7XHJcbiAgICByZXR1cm4gVXNlclJvbGUuU1VQRVJfQURNSU5cclxuICB9XHJcbiAgXHJcbiAgaWYgKGlzQXlhdWtlQWRtaW5DaGFubmVsKGNoYW5uZWxJZCkpIHtcclxuICAgIHJldHVybiBVc2VyUm9sZS5BWUFVS0VfQURNSU5cclxuICB9XHJcbiAgXHJcbiAgcmV0dXJuIFVzZXJSb2xlLlVTRVJcclxufVxyXG5cclxuLy8g7ZWY7JyEIO2YuO2ZmOyEseydhCDsnITtlZwg7ZWo7IiY65OkICjrgpjspJHsl5Ag7KCc6rGwKVxyXG5leHBvcnQgZnVuY3Rpb24gaXNBZG1pbkNoYW5uZWwoY2hhbm5lbElkOiBzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkKTogYm9vbGVhbiB7XHJcbiAgcmV0dXJuIGlzU3VwZXJBZG1pbkNoYW5uZWwoY2hhbm5lbElkKSB8fCBpc0F5YXVrZUFkbWluQ2hhbm5lbChjaGFubmVsSWQpXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRBZG1pbkluZm8oY2hhbm5lbElkOiBzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkKSB7XHJcbiAgcmV0dXJuIGdldFN1cGVyQWRtaW5JbmZvKGNoYW5uZWxJZCkgfHwgZ2V0QXlhdWtlQWRtaW5JbmZvKGNoYW5uZWxJZClcclxufSJdLCJuYW1lcyI6WyJVc2VyUm9sZSIsIlNVUEVSX0FETUlOX0NIQU5ORUxfSURTIiwiQVlBVUtFX0FETUlOX0NIQU5ORUxfSURTIiwiU1VQRVJfQURNSU5fQ0hBTk5FTFMiLCJuYW1lIiwicm9sZSIsIkFZQVVLRV9BRE1JTl9DSEFOTkVMUyIsImlzU3VwZXJBZG1pbkNoYW5uZWwiLCJjaGFubmVsSWQiLCJpbmNsdWRlcyIsImlzQXlhdWtlQWRtaW5DaGFubmVsIiwiZ2V0U3VwZXJBZG1pbkluZm8iLCJnZXRBeWF1a2VBZG1pbkluZm8iLCJnZXRTdGF0aWNVc2VyUm9sZSIsIlVTRVIiLCJTVVBFUl9BRE1JTiIsIkFZQVVLRV9BRE1JTiIsImlzQWRtaW5DaGFubmVsIiwiZ2V0QWRtaW5JbmZvIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/adminChannels.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/authOptions.ts":
/*!********************************!*\
  !*** ./src/lib/authOptions.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions)\n/* harmony export */ });\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/providers/credentials */ \"(rsc)/./node_modules/next-auth/providers/credentials.js\");\n/* harmony import */ var _lib_chzzkCookieManual__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/chzzkCookieManual */ \"(rsc)/./src/lib/chzzkCookieManual.ts\");\n/* harmony import */ var _lib_adminChannels__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/adminChannels */ \"(rsc)/./src/lib/adminChannels.ts\");\n/* harmony import */ var _lib_permissions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/permissions */ \"(rsc)/./src/lib/permissions.ts\");\n/* harmony import */ var _lib_userService__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/userService */ \"(rsc)/./src/lib/userService.ts\");\n/* harmony import */ var _lib_mongodb__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/mongodb */ \"(rsc)/./src/lib/mongodb.ts\");\n/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/models/User */ \"(rsc)/./src/models/User.ts\");\n/* harmony import */ var _models_UserActivity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/models/UserActivity */ \"(rsc)/./src/models/UserActivity.ts\");\n/* harmony import */ var _lib_chzzkOAuthProvider__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/lib/chzzkOAuthProvider */ \"(rsc)/./src/lib/chzzkOAuthProvider.ts\");\n/* harmony import */ var _lib_titleSystem__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/lib/titleSystem */ \"(rsc)/./src/lib/titleSystem.ts\");\n\n\n\n\n\n\n\n\n\n\n// 사용자 정보 메모리 캐시 (5분간 유효)\nconst userCache = new Map();\nconst CACHE_DURATION = 5 * 60 * 1000 // 5분\n;\n// 캐시된 사용자 정보 조회\nasync function getCachedUser(channelId) {\n    const now = Date.now();\n    const cached = userCache.get(channelId);\n    // 캐시가 있고 아직 유효하면 캐시 사용\n    if (cached && now - cached.timestamp < CACHE_DURATION) {\n        return cached.data;\n    }\n    // 캐시가 없거나 만료되었으면 DB 조회\n    try {\n        await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n        const user = await _models_User__WEBPACK_IMPORTED_MODULE_6__[\"default\"].findOne({\n            channelId\n        });\n        // 조회 결과를 캐시에 저장\n        userCache.set(channelId, {\n            data: user,\n            timestamp: now\n        });\n        return user;\n    } catch (error) {\n        // DB 조회 실패 시 만료된 캐시라도 있으면 사용\n        if (cached) {\n            console.log('DB 조회 실패, 만료된 캐시 사용:', channelId);\n            return cached.data;\n        }\n        throw error;\n    }\n}\nconst authOptions = {\n    providers: [\n        (0,_lib_chzzkOAuthProvider__WEBPACK_IMPORTED_MODULE_8__[\"default\"])({\n            clientId: process.env.CHZZK_CLIENT_ID,\n            clientSecret: process.env.CHZZK_CLIENT_SECRET\n        }),\n        (0,next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n            id: \"chzzk-cookie\",\n            name: \"치지직 쿠키 로그인\",\n            credentials: {\n                cookies: {\n                    label: \"치지직 쿠키\",\n                    type: \"text\",\n                    placeholder: \"NID_AUT=...; NID_SES=...\"\n                }\n            },\n            async authorize (credentials) {\n                try {\n                    if (!credentials?.cookies) return null;\n                    const { client, userInfo } = await (0,_lib_chzzkCookieManual__WEBPACK_IMPORTED_MODULE_1__.createManualChzzkClient)('cookie-user', credentials.cookies);\n                    if (!userInfo || !userInfo.loggedIn) return null;\n                    let channelInfo = null;\n                    try {\n                        if (client.channel && typeof client.channel.info === 'function') {\n                            channelInfo = await client.channel.info(userInfo.userIdHash);\n                        }\n                    } catch (error) {\n                        console.log('채널 정보 가져오기 실패:', error);\n                    }\n                    const channelId = channelInfo?.channelId || userInfo.userIdHash;\n                    const channelName = channelInfo?.channelName || userInfo.nickname || '치지직 사용자';\n                    const isAdmin = (0,_lib_adminChannels__WEBPACK_IMPORTED_MODULE_2__.isAdminChannel)(channelId);\n                    const adminInfo = (0,_lib_adminChannels__WEBPACK_IMPORTED_MODULE_2__.getAdminInfo)(channelId);\n                    const result = {\n                        id: userInfo.userIdHash,\n                        name: channelName,\n                        email: null,\n                        image: channelInfo?.channelImageUrl || null,\n                        naverId: null,\n                        channelId: channelId,\n                        channelName: channelName,\n                        channelImageUrl: channelInfo?.channelImageUrl || null,\n                        followerCount: channelInfo?.followerCount || null,\n                        isAdmin,\n                        adminRole: adminInfo?.role || null\n                    };\n                    try {\n                        await (0,_lib_userService__WEBPACK_IMPORTED_MODULE_4__.createOrUpdateUser)({\n                            channelId: channelId,\n                            channelName: channelName,\n                            profileImageUrl: channelInfo?.channelImageUrl\n                        });\n                    } catch (dbError) {\n                        console.error('사용자 DB 저장 오류:', dbError);\n                    }\n                    return result;\n                } catch (error) {\n                    console.error('치지직 쿠키 로그인 오류:', error);\n                    return null;\n                }\n            }\n        })\n    ],\n    callbacks: {\n        async jwt ({ token, user, account }) {\n            if (user) {\n                // OAuth 방식 (치지직 공식 API)\n                if (account?.provider === 'chzzk') {\n                    const channelId = user.channelId || user.id;\n                    const channelName = user.channelName || user.name;\n                    const role = (0,_lib_adminChannels__WEBPACK_IMPORTED_MODULE_2__.getStaticUserRole)(channelId);\n                    const adminInfo = (0,_lib_adminChannels__WEBPACK_IMPORTED_MODULE_2__.getAdminInfo)(channelId);\n                    token.naverId = null;\n                    token.channelId = channelId;\n                    token.channelName = channelName;\n                    token.channelImageUrl = user.channelImageUrl || user.image;\n                    token.followerCount = user.followerCount;\n                    token.role = role;\n                    token.isAdmin = (0,_lib_permissions__WEBPACK_IMPORTED_MODULE_3__.roleToIsAdmin)(role) // 하위 호환성\n                    ;\n                    token.adminRole = adminInfo?.role || null;\n                    // 사용자 정보 DB에 저장\n                    try {\n                        const dbUser = await (0,_lib_userService__WEBPACK_IMPORTED_MODULE_4__.createOrUpdateUser)({\n                            channelId: channelId,\n                            channelName: channelName,\n                            profileImageUrl: user.channelImageUrl || user.image\n                        });\n                        token.userId = dbUser._id.toString() // MongoDB ObjectId를 토큰에 저장\n                        ;\n                    } catch (dbError) {\n                        console.error('OAuth 사용자 DB 저장 오류:', dbError);\n                    }\n                } else {\n                    const role = (0,_lib_adminChannels__WEBPACK_IMPORTED_MODULE_2__.getStaticUserRole)(user.channelId);\n                    const adminInfo = (0,_lib_adminChannels__WEBPACK_IMPORTED_MODULE_2__.getAdminInfo)(user.channelId);\n                    token.naverId = user.naverId;\n                    token.channelId = user.channelId;\n                    token.channelName = user.channelName;\n                    token.channelImageUrl = user.channelImageUrl;\n                    token.followerCount = user.followerCount;\n                    token.role = role;\n                    token.isAdmin = (0,_lib_permissions__WEBPACK_IMPORTED_MODULE_3__.roleToIsAdmin)(role) // 하위 호환성\n                    ;\n                    token.adminRole = adminInfo?.role || null;\n                    // 쿠키 방식에서도 DB에 사용자 정보 저장하고 ObjectId 가져오기\n                    try {\n                        const dbUser = await (0,_lib_userService__WEBPACK_IMPORTED_MODULE_4__.createOrUpdateUser)({\n                            channelId: user.channelId,\n                            channelName: user.channelName,\n                            profileImageUrl: user.channelImageUrl\n                        });\n                        token.userId = dbUser._id.toString() // MongoDB ObjectId를 토큰에 저장\n                        ;\n                    } catch (dbError) {\n                        console.error('쿠키 방식 사용자 DB 저장 오류:', dbError);\n                    }\n                }\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            if (token && session.user) {\n                // 기본 토큰 정보 설정\n                session.user.id = token.userId // NextAuth 표준 필드\n                ;\n                session.user.naverId = token.naverId || null;\n                session.user.channelId = token.channelId;\n                session.user.userId = token.userId // MongoDB ObjectId 추가\n                ;\n                session.user.followerCount = token.followerCount;\n                session.user.role = token.role;\n                session.user.isAdmin = token.isAdmin;\n                session.user.adminRole = token.adminRole;\n                // 기본 세션 정보 먼저 설정 (토큰 기반)\n                session.user.channelName = token.channelName;\n                session.user.name = token.channelName;\n                session.user.channelImageUrl = token.channelImageUrl;\n                // 캐시된 사용자 정보 가져오기 (선택적 업데이트)\n                try {\n                    const user = await getCachedUser(token.channelId);\n                    if (user) {\n                        // DB에서 가져온 정보로 업데이트 (기존 정보 덮어씀)\n                        session.user.channelName = user.channelName;\n                        session.user.name = user.displayName || user.channelName;\n                        session.user.image = user.profileImageUrl || session.user.channelImageUrl;\n                        session.user.channelImageUrl = user.profileImageUrl || session.user.channelImageUrl;\n                        session.user.role = user.role // DB에서 가져온 최신 권한 사용\n                        ;\n                        session.user.isAdmin = (0,_lib_permissions__WEBPACK_IMPORTED_MODULE_3__.roleToIsAdmin)(user.role);\n                        // 선택된 칭호 정보 추가\n                        const selectedTitle = (0,_lib_titleSystem__WEBPACK_IMPORTED_MODULE_9__.getSelectedTitleInfo)(user);\n                        session.user.selectedTitle = selectedTitle;\n                    }\n                // DB에 사용자가 없으면 기본 정보 그대로 사용\n                } catch (error) {\n                    console.error('세션 콜백에서 사용자 정보 조회 오류:', error);\n                // DB 연결 실패 시 기본 정보(토큰 기반) 그대로 사용\n                // 별도 처리 불필요 - 이미 위에서 기본값 설정됨\n                }\n            }\n            return session;\n        }\n    },\n    pages: {\n        signIn: '/auth/signin',\n        error: '/auth/error'\n    },\n    session: {\n        strategy: \"jwt\"\n    },\n    secret: process.env.NEXTAUTH_SECRET,\n    debug: false\n};\n// 중복 체크인 방지를 위한 메모리 캐시 (userId:date -> timestamp)\nconst checkinCache = new Map();\n/**\r\n * 세션 콜백에서 자동으로 일일 체크인 처리\r\n */ async function performDailyCheckin(user) {\n    try {\n        const today = new Date().toISOString().split('T')[0] // YYYY-MM-DD\n        ;\n        const now = new Date();\n        // 오늘 활동 기록이 있는지 확인 (세션에서는 첫 방문 생성만)\n        let todayActivity = await _models_UserActivity__WEBPACK_IMPORTED_MODULE_7__[\"default\"].findOne({\n            userId: user._id,\n            date: today\n        });\n        // 오늘 활동 기록이 이미 있으면 아무것도 하지 않음\n        if (todayActivity) {\n            return;\n        }\n        // 기존 사용자의 activityStats가 없으면 초기화\n        if (!user.activityStats) {\n            user.activityStats = {\n                totalLoginDays: 0,\n                currentStreak: 0,\n                longestStreak: 0,\n                lastVisitDate: null\n            };\n        }\n        // 오늘 첫 방문 - 새로운 활동 기록 생성\n        todayActivity = new _models_UserActivity__WEBPACK_IMPORTED_MODULE_7__[\"default\"]({\n            userId: user._id,\n            date: today,\n            visitCount: 1,\n            firstVisitAt: now,\n            lastVisitAt: now\n        });\n        // 연속 접속일 계산\n        const yesterday = new Date();\n        yesterday.setDate(yesterday.getDate() - 1);\n        const yesterdayStr = yesterday.toISOString().split('T')[0];\n        if (user.activityStats.lastVisitDate === yesterdayStr) {\n            // 어제 방문했으면 연속 접속일 증가\n            user.activityStats.currentStreak += 1;\n        } else if (user.activityStats.lastVisitDate !== today) {\n            // 어제 방문 안했으면 연속 접속일 초기화 (오늘부터 1일)\n            user.activityStats.currentStreak = 1;\n        }\n        // 최장 연속 접속일 기록 업데이트\n        if (user.activityStats.currentStreak > user.activityStats.longestStreak) {\n            user.activityStats.longestStreak = user.activityStats.currentStreak;\n        }\n        // 총 로그인 날 수 증가\n        user.activityStats.totalLoginDays += 1;\n        user.activityStats.lastVisitDate = today;\n        await todayActivity.save();\n        await user.save();\n        console.log(`🎯 첫 방문 기록 생성: ${user.channelName} - 연속 ${user.activityStats.currentStreak}일`);\n    } catch (error) {\n        console.error('자동 체크인 처리 오류:', error);\n    // 에러가 발생해도 세션 처리는 계속 진행\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/authOptions.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/chzzkCookieManual.ts":
/*!**************************************!*\
  !*** ./src/lib/chzzkCookieManual.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addManualChzzkCookie: () => (/* binding */ addManualChzzkCookie),\n/* harmony export */   createManualChzzkClient: () => (/* binding */ createManualChzzkClient),\n/* harmony export */   getManualCookies: () => (/* binding */ getManualCookies),\n/* harmony export */   printCookieGuide: () => (/* binding */ printCookieGuide),\n/* harmony export */   removeManualCookie: () => (/* binding */ removeManualCookie)\n/* harmony export */ });\n/* harmony import */ var chzzk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! chzzk */ \"(rsc)/./node_modules/chzzk/dist/index.js\");\n/* harmony import */ var chzzk__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(chzzk__WEBPACK_IMPORTED_MODULE_0__);\n/**\r\n * 수동 쿠키 입력 및 관리 시스템\r\n * 자동 인증이 실패할 경우를 대비한 수동 방법\r\n */ \n// 수동으로 설정할 수 있는 치지직 쿠키 저장소\nconst MANUAL_CHZZK_COOKIES = {\n};\n/**\r\n * 수동 쿠키를 추가하는 함수 (개발자 도구용)\r\n */ function addManualChzzkCookie(naverId, cookies) {\n    MANUAL_CHZZK_COOKIES[naverId] = cookies;\n    console.log(`수동 쿠키 추가됨: ${naverId}`);\n}\n/**\r\n * 수동 쿠키를 사용해서 치지직 클라이언트 생성\r\n */ async function createManualChzzkClient(naverId, providedCookies) {\n    console.log('=== 수동 쿠키로 치지직 클라이언트 생성 ===');\n    // 직접 제공된 쿠키가 있으면 우선 사용\n    const cookies = providedCookies || MANUAL_CHZZK_COOKIES[naverId];\n    if (!cookies) {\n        console.log(`네이버 ID ${naverId}에 대한 수동 쿠키가 없습니다`);\n        return {\n            client: new chzzk__WEBPACK_IMPORTED_MODULE_0__.ChzzkClient(),\n            userInfo: null\n        };\n    }\n    try {\n        console.log('수동 쿠키로 클라이언트 생성:', cookies.substring(0, 50) + '...');\n        console.log('전체 쿠키 길이:', cookies.length);\n        // 쿠키에서 NID_AUT와 NID_SES 추출\n        const nidAuth = cookies.match(/NID_AUT=([^;]+)/)?.[1];\n        const nidSession = cookies.match(/NID_SES=([^;]+)/)?.[1];\n        console.log('추출된 NID_AUT:', nidAuth ? nidAuth.substring(0, 20) + '...' : 'null');\n        console.log('추출된 NID_SES:', nidSession ? nidSession.substring(0, 20) + '...' : 'null');\n        if (!nidAuth || !nidSession) {\n            console.log('필수 쿠키 (NID_AUT 또는 NID_SES)가 없습니다');\n            return {\n                client: new chzzk__WEBPACK_IMPORTED_MODULE_0__.ChzzkClient(),\n                userInfo: null\n            };\n        }\n        // 치지직 비공식 API 클라이언트 생성 (올바른 방식)\n        const client = new chzzk__WEBPACK_IMPORTED_MODULE_0__.ChzzkClient({\n            nidAuth: nidAuth,\n            nidSession: nidSession\n        });\n        console.log('ChzzkClient 생성 완료, 사용자 정보 조회 시도...');\n        // 다양한 API 메서드 시도\n        let userInfo = null;\n        try {\n            console.log('client.user() 메서드 시도...');\n            userInfo = await client.user();\n            console.log('client.user() 결과:', JSON.stringify(userInfo, null, 2));\n        } catch (userError) {\n            console.log('client.user() 실패:', userError);\n            try {\n                console.log('client.me.user() 메서드 시도...');\n                userInfo = await client.me.user();\n                console.log('client.me.user() 결과:', JSON.stringify(userInfo, null, 2));\n            } catch (meError) {\n                console.log('client.me.user() 실패:', meError);\n                try {\n                    console.log('client.me 프로퍼티 확인...');\n                    console.log('client.me:', client.me);\n                    if (client.me && typeof client.me.user === 'function') {\n                        userInfo = await client.me.user();\n                        console.log('client.me.user() 재시도 결과:', JSON.stringify(userInfo, null, 2));\n                    }\n                } catch (me2Error) {\n                    console.log('client.me 재시도 실패:', me2Error);\n                }\n            }\n        }\n        if (userInfo && userInfo.loggedIn) {\n            console.log('수동 쿠키 인증 성공!');\n            return {\n                client,\n                userInfo\n            };\n        } else {\n            console.log('사용자 정보 조회 실패, 하지만 클라이언트는 생성됨');\n            return {\n                client,\n                userInfo: null\n            };\n        }\n    } catch (error) {\n        console.log('수동 쿠키 클라이언트 생성 실패:', error);\n        console.log('error.message:', error instanceof Error ? error.message : 'Unknown error');\n        return {\n            client: new chzzk__WEBPACK_IMPORTED_MODULE_0__.ChzzkClient(),\n            userInfo: null\n        };\n    }\n}\n/**\r\n * 쿠키 설정 가이드 출력\r\n */ function printCookieGuide(naverId) {\n    console.log('=== 치지직 쿠키 수동 설정 가이드 ===');\n    console.log('1. 브라우저에서 https://chzzk.naver.com 에 로그인');\n    console.log('2. 개발자 도구 (F12) → Application/Storage → Cookies');\n    console.log('3. NID_AUT와 NID_SES 쿠키 값을 복사');\n    console.log('4. 다음 코드를 브라우저 콘솔에서 실행:');\n    console.log(``);\n    console.log(`   // 쿠키 값을 여기에 입력`);\n    console.log(`   const cookies = \"NID_AUT=당신의_NID_AUT_값; NID_SES=당신의_NID_SES_값\"`);\n    console.log(`   `);\n    console.log(`   // API 호출`);\n    console.log(`   fetch('/api/admin/set-manual-cookie', {`);\n    console.log(`     method: 'POST',`);\n    console.log(`     headers: { 'Content-Type': 'application/json' },`);\n    console.log(`     body: JSON.stringify({`);\n    console.log(`       naverId: '${naverId}',`);\n    console.log(`       cookies: cookies`);\n    console.log(`     })`);\n    console.log(`   })`);\n    console.log('');\n    console.log('5. 로그아웃 후 다시 로그인하여 테스트');\n}\n/**\r\n * 현재 등록된 수동 쿠키 목록 조회\r\n */ function getManualCookies() {\n    return {\n        ...MANUAL_CHZZK_COOKIES\n    };\n}\n/**\r\n * 수동 쿠키 삭제\r\n */ function removeManualCookie(naverId) {\n    delete MANUAL_CHZZK_COOKIES[naverId];\n    console.log(`수동 쿠키 삭제됨: ${naverId}`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/chzzkCookieManual.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/chzzkOAuthProvider.ts":
/*!***************************************!*\
  !*** ./src/lib/chzzkOAuthProvider.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ChzzkProvider)\n/* harmony export */ });\n// 토큰을 저장할 임시 변수\nlet currentAccessToken = null;\nfunction ChzzkProvider(options) {\n    return {\n        id: \"chzzk\",\n        name: \"치지직\",\n        type: \"oauth\",\n        authorization: {\n            url: \"https://chzzk.naver.com/account-interlock\",\n            params: {\n                clientId: options.clientId,\n                redirectUri: `${process.env.NEXTAUTH_URL}/api/auth/callback/chzzk`,\n                response_type: \"code\"\n            }\n        },\n        // 디버깅을 위한 로그\n        ... true && {\n            debug: true\n        },\n        token: {\n            url: \"https://chzzk.naver.com/auth/v1/token\",\n            async request (context) {\n                const response = await fetch(\"https://chzzk.naver.com/auth/v1/token\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        grantType: \"authorization_code\",\n                        clientId: options.clientId,\n                        clientSecret: options.clientSecret,\n                        code: context.params.code,\n                        state: context.params.state\n                    })\n                });\n                if (!response.ok) {\n                    const errorText = await response.text();\n                    console.error('치지직 토큰 요청 실패:', {\n                        status: response.status,\n                        statusText: response.statusText,\n                        error: errorText,\n                        clientId: options.clientId,\n                        redirectUri: `${process.env.NEXTAUTH_URL}/api/auth/callback/chzzk`\n                    });\n                    // API 승인 관련 오류인지 확인\n                    if (response.status === 401 || response.status === 403) {\n                        throw new Error(`치지직 API 승인이 필요합니다. 클라이언트 ID/SECRET을 확인하거나 API 승인 상태를 확인하세요. (${response.status})`);\n                    }\n                    throw new Error(`Token request failed: ${response.status} - ${errorText}`);\n                }\n                const tokens = await response.json();\n                const result = {\n                    access_token: tokens.content?.accessToken || tokens.accessToken,\n                    refresh_token: tokens.content?.refreshToken || tokens.refreshToken,\n                    token_type: tokens.content?.tokenType || tokens.tokenType || \"Bearer\",\n                    expires_in: tokens.content?.expiresIn || tokens.expiresIn || 86400\n                };\n                // 토큰을 임시 변수에 저장\n                currentAccessToken = result.access_token;\n                return result;\n            }\n        },\n        userinfo: {\n            url: \"https://chzzk.naver.com/open/v1/users/me\",\n            async request (context) {\n                // context에서 토큰을 가져오거나 임시 저장된 토큰 사용\n                const accessToken = context.tokens?.access_token || currentAccessToken;\n                // 액세스 토큰이 없으면 로그인 실패\n                if (!accessToken) {\n                    throw new Error('Access token not found');\n                }\n                // 치지직 공식 사용자 정보 API 호출\n                try {\n                    const response = await fetch(\"https://openapi.chzzk.naver.com/open/v1/users/me\", {\n                        method: \"GET\",\n                        headers: {\n                            Authorization: `Bearer ${accessToken}`,\n                            \"Content-Type\": \"application/json\"\n                        }\n                    });\n                    if (response.ok) {\n                        const userData = await response.json();\n                        const content = userData.content || userData;\n                        if (content.channelId && content.channelName) {\n                            return {\n                                userIdHash: content.channelId,\n                                nickname: content.channelName || content.nickname,\n                                profileImageUrl: content.profileImageUrl || content.channelImageUrl,\n                                channelId: content.channelId,\n                                channelName: content.channelName || content.nickname,\n                                channelImageUrl: content.channelImageUrl,\n                                followerCount: content.followerCount || 0\n                            };\n                        }\n                    } else {\n                        const errorText = await response.text();\n                        console.error('치지직 사용자 정보 API 호출 실패:', {\n                            status: response.status,\n                            statusText: response.statusText,\n                            error: errorText,\n                            accessToken: accessToken ? '토큰 있음' : '토큰 없음'\n                        });\n                        // API 승인 관련 오류인지 확인\n                        if (response.status === 401 || response.status === 403) {\n                            throw new Error(`치지직 API 승인이 필요합니다. 개발자 콘솔에서 API 승인 상태를 확인하세요. (${response.status})`);\n                        }\n                    }\n                // 공식 API 응답이 유효하지 않음\n                } catch (error) {\n                    console.error('치지직 공식 API 호출 실패:', error);\n                    // API 승인 관련 오류라면 더 명확한 메시지 표시\n                    if (error.message && error.message.includes('승인')) {\n                        throw error;\n                    }\n                }\n                // Fallback API들 시도\n                const fallbackUrls = [\n                    'https://api.chzzk.naver.com/open/v1/users/me',\n                    'https://comm-api.game.naver.com/nng_main/v1/user/getUserStatus'\n                ];\n                for (const url of fallbackUrls){\n                    try {\n                        const response = await fetch(url, {\n                            method: \"GET\",\n                            headers: {\n                                Authorization: `Bearer ${accessToken}`,\n                                \"Content-Type\": \"application/json\"\n                            }\n                        });\n                        if (response.ok) {\n                            const responseText = await response.text();\n                            // HTML 응답 건너뛰기\n                            if (responseText.includes('<!doctype html>')) continue;\n                            const userData = JSON.parse(responseText);\n                            const content = userData.content || userData.response || userData;\n                            if (content.channelId && content.channelName) {\n                                return {\n                                    userIdHash: content.channelId,\n                                    nickname: content.channelName,\n                                    profileImageUrl: content.profileImageUrl || content.channelImageUrl,\n                                    channelId: content.channelId,\n                                    channelName: content.channelName,\n                                    channelImageUrl: content.channelImageUrl,\n                                    followerCount: content.followerCount || 0\n                                };\n                            }\n                        }\n                    } catch (error) {\n                        continue;\n                    }\n                }\n                // 모든 API 실패\n                throw new Error('Chzzk user info API failed');\n            }\n        },\n        profile (profile) {\n            return {\n                id: profile.userIdHash,\n                name: profile.channelName || profile.nickname,\n                email: null,\n                image: profile.channelImageUrl || profile.profileImageUrl,\n                channelId: profile.channelId || profile.userIdHash,\n                channelName: profile.channelName || profile.nickname,\n                channelImageUrl: profile.channelImageUrl,\n                followerCount: profile.followerCount\n            };\n        },\n        ...options\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/chzzkOAuthProvider.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/googleSheets.ts":
/*!*********************************!*\
  !*** ./src/lib/googleSheets.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchRawSongsFromSheet: () => (/* binding */ fetchRawSongsFromSheet),\n/* harmony export */   fetchSongDetailsFromMongo: () => (/* binding */ fetchSongDetailsFromMongo),\n/* harmony export */   fetchSongsFromSheet: () => (/* binding */ fetchSongsFromSheet),\n/* harmony export */   getErrorMessage: () => (/* binding */ getErrorMessage),\n/* harmony export */   mergeSongsData: () => (/* binding */ mergeSongsData)\n/* harmony export */ });\nconst SHEET_ID = '1g-hVYnHn20XkS2HLAzOI9UcOnNHNtz1H-1g1MgVXTAc';\nconst API_KEY = \"AIzaSyC0G7FBmFPuO_1UMGQ9crVuEea1_xDlHVQ\";\nasync function fetchSongsFromSheet() {\n    if (!API_KEY || API_KEY === 'test_key') {\n        throw new Error('MISSING_API_KEY');\n    }\n    try {\n        // 1. 구글시트에서 기본 데이터 가져오기\n        const sheetSongs = await fetchRawSongsFromSheet();\n        // 2. MongoDB에서 상세 데이터 가져오기\n        const { songDetails, deletedSongKeys } = await fetchSongDetailsFromMongo();\n        // 3. 두 데이터를 병합\n        const mergedSongs = mergeSongsData(sheetSongs, songDetails, deletedSongKeys);\n        console.log(`✅ 노래 데이터 병합: ${mergedSongs.length}곡`);\n        return mergedSongs;\n    } catch (error) {\n        console.error('Error fetching songs from sheet:', error);\n        throw error;\n    }\n}\nasync function fetchRawSongsFromSheet() {\n    // 여러 범위를 시도해서 데이터가 있는 시트를 찾습니다\n    const ranges = [\n        'Sheet1',\n        'A:Z',\n        '시트1',\n        '노래목록'\n    ];\n    for (const range of ranges){\n        try {\n            const response = await fetch(`https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${encodeURIComponent(range)}?key=${API_KEY}`, {\n                timeout: 10000,\n                signal: AbortSignal.timeout(10000)\n            });\n            if (response.ok) {\n                const data = await response.json();\n                if (data.values && data.values.length > 0) {\n                    console.log(`Successfully fetched data from range: ${range}`);\n                    const songs = parseSheetData(data.values);\n                    if (songs.length > 0) {\n                        return songs;\n                    }\n                }\n            } else if (response.status === 403) {\n                throw new Error('API_KEY_INVALID');\n            } else if (response.status === 404) {\n                throw new Error('SHEET_NOT_FOUND');\n            }\n        } catch (rangeError) {\n            console.warn(`Failed to fetch from range ${range}:`, rangeError);\n            continue;\n        }\n    }\n    throw new Error('NO_DATA_FOUND');\n}\nasync function fetchSongDetailsFromMongo() {\n    try {\n        // 서버사이드에서는 직접 MongoDB 모델 사용\n        const dbConnect = (await __webpack_require__.e(/*! import() */ \"_rsc_src_lib_mongodb_ts\").then(__webpack_require__.bind(__webpack_require__, /*! ./mongodb */ \"(rsc)/./src/lib/mongodb.ts\"))).default;\n        const SongDetail = (await __webpack_require__.e(/*! import() */ \"_rsc_src_models_SongDetail_ts\").then(__webpack_require__.bind(__webpack_require__, /*! ../models/SongDetail */ \"(rsc)/./src/models/SongDetail.ts\"))).default;\n        await dbConnect();\n        // 활성화된 곡들 조회\n        const songDetails = await SongDetail.find({\n            $and: [\n                // 삭제된 곡 제외 (기존 데이터는 status 필드가 없으므로 null도 허용)\n                {\n                    $or: [\n                        {\n                            status: {\n                                $ne: 'deleted'\n                            }\n                        },\n                        {\n                            status: {\n                                $exists: false\n                            }\n                        }\n                    ]\n                },\n                // 유저 추천곡 제외 (기존 데이터는 sourceType 필드가 없으므로 null도 허용)\n                {\n                    $or: [\n                        {\n                            sourceType: {\n                                $in: [\n                                    'sheet',\n                                    'admin'\n                                ]\n                            }\n                        },\n                        {\n                            sourceType: {\n                                $exists: false\n                            }\n                        }\n                    ]\n                }\n            ]\n        }).sort({\n            updatedAt: -1\n        }).lean();\n        // 삭제된 곡들의 키를 별도로 조회\n        const deletedSongs = await SongDetail.find({\n            status: 'deleted'\n        }, {\n            title: 1,\n            artist: 1,\n            titleAlias: 1,\n            artistAlias: 1\n        }).lean();\n        const deletedSongKeys = new Set();\n        deletedSongs.forEach((song)=>{\n            const songKey = createSongKey(song.title, song.artist);\n            deletedSongKeys.add(songKey);\n            console.log(`🗑️ 삭제된 곡 키 추가: \"${song.title}\" - \"${song.artist}\" => \"${songKey}\"`);\n        });\n        console.log(`🗑️ 총 삭제된 곡 키: ${deletedSongKeys.size}개`);\n        // Mongoose 문서를 일반 객체로 변환 (MongoDB _id 포함)\n        const processedSongDetails = songDetails.map((doc)=>({\n                _id: doc._id.toString(),\n                title: doc.title,\n                artist: doc.artist,\n                titleAlias: doc.titleAlias,\n                artistAlias: doc.artistAlias,\n                language: doc.language,\n                lyrics: doc.lyrics,\n                searchTags: doc.searchTags,\n                sungCount: doc.sungCount,\n                likeCount: doc.likeCount,\n                lastSungDate: doc.lastSungDate,\n                keyAdjustment: doc.keyAdjustment,\n                mrLinks: doc.mrLinks,\n                selectedMRIndex: doc.selectedMRIndex,\n                personalNotes: doc.personalNotes,\n                imageUrl: doc.imageUrl,\n                createdAt: doc.createdAt,\n                updatedAt: doc.updatedAt,\n                // 새 필드들 (기존 데이터 호환성을 위한 기본값 설정)\n                status: doc.status || 'active',\n                sourceType: doc.sourceType || 'sheet',\n                suggestedBy: doc.suggestedBy,\n                deletedAt: doc.deletedAt,\n                deletedBy: doc.deletedBy,\n                deleteReason: doc.deleteReason,\n                approvedAt: doc.approvedAt,\n                approvedBy: doc.approvedBy\n            }));\n        return {\n            songDetails: processedSongDetails,\n            deletedSongKeys\n        };\n    } catch (error) {\n        console.error('❌ MongoDB 오류 발생:', error);\n        console.error('스택 트레이스:', error instanceof Error ? error.stack : 'Unknown error');\n        // 에러 타입별로 상세한 로깅\n        if (error instanceof Error) {\n            if (error.message.includes('ENOTFOUND') || error.message.includes('connection')) {\n                console.error('🔌 MongoDB 연결 실패 - 네트워크 또는 MongoDB URI 확인 필요');\n            } else if (error.message.includes('Authentication')) {\n                console.error('🔐 MongoDB 인증 실패 - 사용자명/비밀번호 확인 필요');\n            } else if (error.message.includes('timeout')) {\n                console.error('⏱️ MongoDB 연결 타임아웃');\n            }\n        }\n        return {\n            songDetails: [],\n            deletedSongKeys: new Set()\n        }; // MongoDB 오류 시 빈 객체 반환\n    }\n}\n// 제목을 정규화하는 함수 (대소문자, 띄어쓰기 무시)\nfunction normalizeTitle(title) {\n    return title.toLowerCase().replace(/\\s+/g, '') // 모든 공백 제거\n    .trim();\n}\n// 제목+아티스트 복합키를 생성하는 함수\nfunction createSongKey(title, artist) {\n    return `${normalizeTitle(title)}|||${normalizeTitle(artist)}`;\n}\nfunction mergeSongsData(sheetSongs, songDetails, deletedSongKeys) {\n    // MongoDB 데이터를 정규화된 title+artist 복합키로 맵 생성\n    const detailsMap = new Map();\n    const normalizedToOriginalMap = new Map(); // 디버깅용\n    const usedMongoSongs = new Set(); // 이미 매칭된 MongoDB 곡들 추적\n    songDetails.forEach((detail)=>{\n        const songKey = createSongKey(detail.title, detail.artist);\n        detailsMap.set(songKey, detail);\n        normalizedToOriginalMap.set(songKey, `${detail.title} - ${detail.artist}`);\n    });\n    // 1. 구글시트 데이터에 MongoDB 데이터 병합 (단, 삭제된 곡은 제외)\n    const mergedSheetSongs = sheetSongs.filter((song)=>{\n        const sheetSongKey = createSongKey(song.title, song.artist);\n        // 삭제된 곡이면 제외\n        if (deletedSongKeys.has(sheetSongKey)) {\n            console.log(`🗑️ 삭제된 곡 제외: ${song.title} - ${song.artist}`);\n            return false;\n        }\n        return true;\n    }).map((song)=>{\n        const sheetSongKey = createSongKey(song.title, song.artist);\n        const detail = detailsMap.get(sheetSongKey);\n        if (!detail) {\n            // MongoDB에 데이터가 없는 경우 구글시트 기본 데이터만 반환\n            return {\n                ...song,\n                source: 'sheet'\n            };\n        }\n        // 매칭된 MongoDB 곡 표시\n        usedMongoSongs.add(sheetSongKey);\n        // MongoDB 데이터를 우선하되, title/artist만 구글시트 값 사용\n        return {\n            // MongoDB _id를 메인 ID로 사용\n            id: detail._id,\n            sheetId: song.id,\n            title: song.title,\n            artist: song.artist,\n            source: 'merged',\n            // MongoDB 데이터 우선 사용\n            language: detail.language || song.language,\n            lyrics: detail.lyrics || '',\n            titleAlias: detail.titleAlias,\n            artistAlias: detail.artistAlias,\n            searchTags: detail.searchTags,\n            sungCount: detail.sungCount,\n            likeCount: detail.likeCount,\n            lastSungDate: detail.lastSungDate,\n            keyAdjustment: detail.keyAdjustment,\n            mrLinks: detail.mrLinks,\n            selectedMRIndex: detail.selectedMRIndex,\n            personalNotes: detail.personalNotes,\n            imageUrl: detail.imageUrl,\n            dateAdded: detail.createdAt ? detail.createdAt.toISOString().split('T')[0] : song.dateAdded\n        };\n    });\n    // 2. MongoDB 전용 곡들 추가 (구글시트에 없는 곡들)\n    const mongoOnlySongs = [];\n    let mongoOnlyCounter = 1;\n    songDetails.forEach((detail)=>{\n        const mongoSongKey = createSongKey(detail.title, detail.artist);\n        // 구글시트에 매칭되지 않은 MongoDB 곡들만 추가\n        if (!usedMongoSongs.has(mongoSongKey)) {\n            mongoOnlySongs.push({\n                id: detail._id,\n                title: detail.title,\n                artist: detail.artist,\n                language: detail.language || '미설정',\n                source: 'mongodb',\n                // MongoDB 데이터 사용\n                lyrics: detail.lyrics || '',\n                titleAlias: detail.titleAlias,\n                artistAlias: detail.artistAlias,\n                searchTags: detail.searchTags,\n                sungCount: detail.sungCount,\n                likeCount: detail.likeCount,\n                lastSungDate: detail.lastSungDate,\n                keyAdjustment: detail.keyAdjustment,\n                mrLinks: detail.mrLinks,\n                selectedMRIndex: detail.selectedMRIndex,\n                personalNotes: detail.personalNotes,\n                imageUrl: detail.imageUrl,\n                dateAdded: detail.createdAt ? detail.createdAt.toISOString().split('T')[0] : new Date().toISOString().split('T')[0]\n            });\n            mongoOnlyCounter++;\n        }\n    });\n    const finalSongs = [\n        ...mergedSheetSongs,\n        ...mongoOnlySongs\n    ];\n    // 중복 제거: 제목+아티스트(alias 기준) 복합키로 중복된 곡들 제거\n    const seenSongKeys = new Set();\n    const deduplicatedSongs = finalSongs.filter((song)=>{\n        // alias가 있으면 alias 사용, 없으면 원본 사용\n        const displayTitle = song.titleAlias || song.title;\n        const displayArtist = song.artistAlias || song.artist;\n        const songKey = createSongKey(displayTitle, displayArtist);\n        if (seenSongKeys.has(songKey)) {\n            return false;\n        }\n        seenSongKeys.add(songKey);\n        return true;\n    });\n    // 중복 제거 결과 로그\n    const duplicatesRemoved = finalSongs.length - deduplicatedSongs.length;\n    if (duplicatesRemoved > 0) {\n        console.log(`🚫 중복 곡 ${duplicatesRemoved}개 제거`);\n    }\n    return deduplicatedSongs;\n}\nfunction parseSheetData(values) {\n    if (!values || values.length < 1) return [];\n    const firstRow = values[0].map((h)=>(h || '').toLowerCase().trim());\n    // 헤더에서 각 컬럼의 인덱스를 찾습니다\n    const getColumnIndex = (possibleNames)=>{\n        for (const name of possibleNames){\n            const index = firstRow.findIndex((h)=>h.includes(name));\n            if (index !== -1) return index;\n        }\n        return -1;\n    };\n    const titleIndex = getColumnIndex([\n        '제목',\n        'title',\n        '곡명',\n        '노래'\n    ]); // 제목 컬럼\n    const artistIndex = getColumnIndex([\n        '아티스트',\n        'artist',\n        '가수',\n        '원곡자'\n    ]); // 아티스트 컬럼\n    // 헤더가 감지되었는지 확인 - 실제 헤더 텍스트가 있으면 헤더로 간주\n    // 'abir', 'tango' 같은 실제 데이터는 헤더가 아님\n    const hasRealHeader = titleIndex !== -1 && artistIndex !== -1 && !(firstRow.length === 2 && firstRow.every((cell)=>cell.length < 10 && !cell.includes('제목') && !cell.includes('title')));\n    // 헤더가 있으면 첫 번째 행을 건너뛰고, 없으면 모든 행을 데이터로 처리\n    const dataRows = hasRealHeader ? values.slice(1) : values;\n    return dataRows.filter((row)=>row.length > 0 && (row[titleIndex] || row[0])) // 빈 행 제외\n    .map((row, index)=>{\n        // 컬럼이 제대로 감지되지 않은 경우 기본 순서 사용\n        let title, artist;\n        if (hasRealHeader && titleIndex !== -1 && artistIndex !== -1) {\n            // 헤더가 있고 컬럼이 제대로 감지된 경우\n            title = row[titleIndex]?.trim() || '';\n            artist = row[artistIndex]?.trim() || '';\n        } else {\n            // 헤더가 없거나 컬럼 감지 실패 시 실제 구글시트 구조: 첫 번째 컬럼=아티스트, 두 번째 컬럼=제목\n            artist = row[0]?.trim() || ''; // 첫 번째 컬럼 = 아티스트  \n            title = row[1]?.trim() || ''; // 두 번째 컬럼 = 제목\n        }\n        // 제목이나 아티스트 중 하나라도 비어있으면 null 반환 (나중에 필터링됨)\n        if (!title || !artist) {\n            return null;\n        }\n        const song = {\n            id: `song-${index + 1}`,\n            title: title,\n            artist: artist,\n            language: 'Korean',\n            dateAdded: new Date().toISOString().split('T')[0],\n            source: 'sheet'\n        };\n        return song;\n    }).filter((song)=>song !== null) // null인 항목들 제거 및 타입 가드\n    .filter((song)=>{\n        // 중복으로 인한 문제가 되는 곡들을 하드코딩으로 제외\n        const problematicSongs = [\n            {\n                title: 'gods',\n                artist: '뉴진스'\n            },\n            {\n                title: 'sugarcoat',\n                artist: '키스오브라이프'\n            },\n            {\n                title: '나는 최강',\n                artist: 'ado'\n            },\n            {\n                title: '타상연화',\n                artist: '요네즈 켄시'\n            },\n            {\n                title: '아이돌',\n                artist: '최애의 아이 ost'\n            }\n        ];\n        const normalizedTitle = song.title.toLowerCase().replace(/\\s/g, '');\n        const normalizedArtist = song.artist.toLowerCase().replace(/\\s/g, '');\n        const isProblematic = problematicSongs.some((problematic)=>{\n            const problemTitle = problematic.title.toLowerCase().replace(/\\s/g, '');\n            const problemArtist = problematic.artist.toLowerCase().replace(/\\s/g, '');\n            return normalizedTitle === problemTitle && normalizedArtist === problemArtist;\n        });\n        if (isProblematic) {\n            return false;\n        }\n        return true;\n    });\n}\nfunction getErrorMessage(error) {\n    const errorType = error.message;\n    switch(errorType){\n        case 'MISSING_API_KEY':\n            return {\n                title: 'API 키가 설정되지 않았습니다',\n                message: 'Google Sheets API 키가 필요합니다.',\n                suggestion: 'GOOGLE_SHEETS_SETUP.md 파일을 참고하여 API 키를 설정해주세요.'\n            };\n        case 'API_KEY_INVALID':\n            return {\n                title: 'API 키가 유효하지 않습니다',\n                message: '설정된 Google Sheets API 키가 올바르지 않거나 권한이 없습니다.',\n                suggestion: 'API 키를 다시 확인하거나 새로 생성해주세요.'\n            };\n        case 'SHEET_NOT_FOUND':\n            return {\n                title: '시트를 찾을 수 없습니다',\n                message: '지정된 구글 시트에 접근할 수 없습니다.',\n                suggestion: '시트가 공개되어 있는지 확인하고 시트 ID가 올바른지 확인해주세요.'\n            };\n        case 'NO_DATA_FOUND':\n            return {\n                title: '노래 데이터가 없습니다',\n                message: '구글 시트에서 노래 데이터를 찾을 수 없습니다.',\n                suggestion: '시트에 제목과 아티스트 정보가 포함된 데이터가 있는지 확인해주세요.'\n            };\n        default:\n            return {\n                title: '데이터를 불러올 수 없습니다',\n                message: '구글 시트에서 노래 데이터를 가져오는 중 문제가 발생했습니다.',\n                suggestion: '잠시 후 다시 시도해주세요. 문제가 지속되면 네트워크 연결을 확인해주세요.'\n            };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/googleSheets.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/mongodb.ts":
/*!****************************!*\
  !*** ./src/lib/mongodb.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connectToDatabase: () => (/* binding */ dbConnect),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst MONGODB_URI = process.env.MONGODB_URI;\nif (!MONGODB_URI) {\n    throw new Error('Please define the MONGODB_URI environment variable inside .env.local');\n}\nlet cached = global.mongoose;\nif (!cached) {\n    cached = global.mongoose = {\n        conn: null,\n        promise: null\n    };\n}\nasync function dbConnect() {\n    if (cached.conn) {\n        // console.log('🔄 기존 MongoDB 연결 재사용');\n        return cached.conn;\n    }\n    if (!cached.promise) {\n        // console.log('🚀 새로운 MongoDB 연결 시작...');\n        // console.log('📍 MongoDB URI:', MONGODB_URI ? 'URI 설정됨' : 'URI 없음');\n        const opts = {\n            bufferCommands: false,\n            serverSelectionTimeoutMS: 5000,\n            connectTimeoutMS: 5000\n        };\n        cached.promise = mongoose__WEBPACK_IMPORTED_MODULE_0___default().connect(MONGODB_URI, opts).then((mongoose)=>{\n            // console.log('✅ MongoDB 연결 성공!');\n            return mongoose;\n        });\n    }\n    try {\n        cached.conn = await cached.promise;\n    } catch (e) {\n        console.error('❌ MongoDB 연결 실패:', e);\n        cached.promise = null;\n        throw e;\n    }\n    return cached.conn;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dbConnect);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL21vbmdvZGIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFnQztBQUVoQyxNQUFNQyxjQUFjQyxRQUFRQyxHQUFHLENBQUNGLFdBQVc7QUFFM0MsSUFBSSxDQUFDQSxhQUFhO0lBQ2hCLE1BQU0sSUFBSUcsTUFDUjtBQUVKO0FBV0EsSUFBSUMsU0FBU0MsT0FBT04sUUFBUTtBQUU1QixJQUFJLENBQUNLLFFBQVE7SUFDWEEsU0FBU0MsT0FBT04sUUFBUSxHQUFHO1FBQUVPLE1BQU07UUFBTUMsU0FBUztJQUFLO0FBQ3pEO0FBRUEsZUFBZUM7SUFDYixJQUFJSixPQUFPRSxJQUFJLEVBQUU7UUFDZix1Q0FBdUM7UUFDdkMsT0FBT0YsT0FBT0UsSUFBSTtJQUNwQjtJQUVBLElBQUksQ0FBQ0YsT0FBT0csT0FBTyxFQUFFO1FBQ25CLDBDQUEwQztRQUMxQyxzRUFBc0U7UUFFdEUsTUFBTUUsT0FBTztZQUNYQyxnQkFBZ0I7WUFDaEJDLDBCQUEwQjtZQUMxQkMsa0JBQWtCO1FBQ3BCO1FBRUFSLE9BQU9HLE9BQU8sR0FBR1IsdURBQWdCLENBQUNDLGFBQWNTLE1BQU1LLElBQUksQ0FBQyxDQUFDZjtZQUMxRCxtQ0FBbUM7WUFDbkMsT0FBT0E7UUFDVDtJQUNGO0lBRUEsSUFBSTtRQUNGSyxPQUFPRSxJQUFJLEdBQUcsTUFBTUYsT0FBT0csT0FBTztJQUNwQyxFQUFFLE9BQU9RLEdBQUc7UUFDVkMsUUFBUUMsS0FBSyxDQUFDLG9CQUFvQkY7UUFDbENYLE9BQU9HLE9BQU8sR0FBRztRQUNqQixNQUFNUTtJQUNSO0lBRUEsT0FBT1gsT0FBT0UsSUFBSTtBQUNwQjtBQUVBLGlFQUFlRSxTQUFTQSxFQUFDO0FBQ2lCIiwic291cmNlcyI6WyIvbW50L2YvRGF0YS9HaXQvY2xhdWRlLWNvZGUvYXlhdWtlLXBhZ2UvYXlhdWtlLXBhZ2Uvc3JjL2xpYi9tb25nb2RiLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XHJcblxyXG5jb25zdCBNT05HT0RCX1VSSSA9IHByb2Nlc3MuZW52Lk1PTkdPREJfVVJJO1xyXG5cclxuaWYgKCFNT05HT0RCX1VSSSkge1xyXG4gIHRocm93IG5ldyBFcnJvcihcclxuICAgICdQbGVhc2UgZGVmaW5lIHRoZSBNT05HT0RCX1VSSSBlbnZpcm9ubWVudCB2YXJpYWJsZSBpbnNpZGUgLmVudi5sb2NhbCdcclxuICApO1xyXG59XHJcblxyXG5pbnRlcmZhY2UgTW9uZ29vc2VDYWNoZSB7XHJcbiAgY29ubjogdHlwZW9mIG1vbmdvb3NlIHwgbnVsbDtcclxuICBwcm9taXNlOiBQcm9taXNlPHR5cGVvZiBtb25nb29zZT4gfCBudWxsO1xyXG59XHJcblxyXG5kZWNsYXJlIGdsb2JhbCB7XHJcbiAgdmFyIG1vbmdvb3NlOiBNb25nb29zZUNhY2hlO1xyXG59XHJcblxyXG5sZXQgY2FjaGVkID0gZ2xvYmFsLm1vbmdvb3NlO1xyXG5cclxuaWYgKCFjYWNoZWQpIHtcclxuICBjYWNoZWQgPSBnbG9iYWwubW9uZ29vc2UgPSB7IGNvbm46IG51bGwsIHByb21pc2U6IG51bGwgfTtcclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gZGJDb25uZWN0KCk6IFByb21pc2U8dHlwZW9mIG1vbmdvb3NlPiB7XHJcbiAgaWYgKGNhY2hlZC5jb25uKSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygn8J+UhCDquLDsobQgTW9uZ29EQiDsl7DqsrAg7J6s7IKs7JqpJyk7XHJcbiAgICByZXR1cm4gY2FjaGVkLmNvbm47XHJcbiAgfVxyXG5cclxuICBpZiAoIWNhY2hlZC5wcm9taXNlKSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygn8J+agCDsg4jroZzsmrQgTW9uZ29EQiDsl7DqsrAg7Iuc7J6RLi4uJyk7XHJcbiAgICAvLyBjb25zb2xlLmxvZygn8J+TjSBNb25nb0RCIFVSSTonLCBNT05HT0RCX1VSSSA/ICdVUkkg7ISk7KCV65CoJyA6ICdVUkkg7JeG7J2MJyk7XHJcbiAgICBcclxuICAgIGNvbnN0IG9wdHMgPSB7XHJcbiAgICAgIGJ1ZmZlckNvbW1hbmRzOiBmYWxzZSxcclxuICAgICAgc2VydmVyU2VsZWN0aW9uVGltZW91dE1TOiA1MDAwLCAvLyA17LSI66GcIOuLqOy2lVxyXG4gICAgICBjb25uZWN0VGltZW91dE1TOiA1MDAwLFxyXG4gICAgfTtcclxuXHJcbiAgICBjYWNoZWQucHJvbWlzZSA9IG1vbmdvb3NlLmNvbm5lY3QoTU9OR09EQl9VUkkhLCBvcHRzKS50aGVuKChtb25nb29zZSkgPT4ge1xyXG4gICAgICAvLyBjb25zb2xlLmxvZygn4pyFIE1vbmdvREIg7Jew6rKwIOyEseqztSEnKTtcclxuICAgICAgcmV0dXJuIG1vbmdvb3NlO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgY2FjaGVkLmNvbm4gPSBhd2FpdCBjYWNoZWQucHJvbWlzZTtcclxuICB9IGNhdGNoIChlKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCfinYwgTW9uZ29EQiDsl7DqsrAg7Iuk7YyoOicsIGUpO1xyXG4gICAgY2FjaGVkLnByb21pc2UgPSBudWxsO1xyXG4gICAgdGhyb3cgZTtcclxuICB9XHJcblxyXG4gIHJldHVybiBjYWNoZWQuY29ubjtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZGJDb25uZWN0O1xyXG5leHBvcnQgeyBkYkNvbm5lY3QgYXMgY29ubmVjdFRvRGF0YWJhc2UgfTsiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJNT05HT0RCX1VSSSIsInByb2Nlc3MiLCJlbnYiLCJFcnJvciIsImNhY2hlZCIsImdsb2JhbCIsImNvbm4iLCJwcm9taXNlIiwiZGJDb25uZWN0Iiwib3B0cyIsImJ1ZmZlckNvbW1hbmRzIiwic2VydmVyU2VsZWN0aW9uVGltZW91dE1TIiwiY29ubmVjdFRpbWVvdXRNUyIsImNvbm5lY3QiLCJ0aGVuIiwiZSIsImNvbnNvbGUiLCJlcnJvciIsImNvbm5lY3RUb0RhdGFiYXNlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/mongodb.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/permissions.ts":
/*!********************************!*\
  !*** ./src/lib/permissions.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Permission: () => (/* binding */ Permission),\n/* harmony export */   UserRole: () => (/* binding */ UserRole),\n/* harmony export */   canAccessAdminPanel: () => (/* binding */ canAccessAdminPanel),\n/* harmony export */   canManageSongs: () => (/* binding */ canManageSongs),\n/* harmony export */   hasPermission: () => (/* binding */ hasPermission),\n/* harmony export */   isSuperAdmin: () => (/* binding */ isSuperAdmin),\n/* harmony export */   roleToIsAdmin: () => (/* binding */ roleToIsAdmin)\n/* harmony export */ });\nvar UserRole = /*#__PURE__*/ function(UserRole) {\n    UserRole[\"SUPER_ADMIN\"] = \"super_admin\";\n    UserRole[\"SONG_ADMIN\"] = \"song_admin\";\n    UserRole[\"AYAUKE_ADMIN\"] = \"ayauke_admin\";\n    UserRole[\"SONG_EDITOR\"] = \"song_editor\";\n    UserRole[\"USER\"] = \"user\";\n    return UserRole;\n}({});\nvar Permission = /*#__PURE__*/ function(Permission) {\n    // 시스템 관리\n    Permission[\"SYSTEM_ADMIN\"] = \"system.admin\";\n    Permission[\"USER_MANAGE\"] = \"users.manage\";\n    // 노래 관리\n    Permission[\"SONGS_VIEW\"] = \"songs.view\";\n    Permission[\"SONGS_CREATE\"] = \"songs.create\";\n    Permission[\"SONGS_EDIT\"] = \"songs.edit\";\n    Permission[\"SONGS_DELETE\"] = \"songs.delete\";\n    Permission[\"SONGS_BULK_EDIT\"] = \"songs.bulk_edit\";\n    Permission[\"SONGS_STATS\"] = \"songs.stats\";\n    return Permission;\n}({});\nconst ROLE_PERMISSIONS = {\n    [\"super_admin\"]: [\n        \"system.admin\",\n        \"users.manage\",\n        \"songs.view\",\n        \"songs.create\",\n        \"songs.edit\",\n        \"songs.delete\",\n        \"songs.bulk_edit\",\n        \"songs.stats\"\n    ],\n    [\"song_admin\"]: [\n        \"songs.view\",\n        \"songs.create\",\n        \"songs.edit\",\n        \"songs.delete\",\n        \"songs.bulk_edit\",\n        \"songs.stats\"\n    ],\n    [\"ayauke_admin\"]: [\n        \"songs.view\",\n        \"songs.create\",\n        \"songs.edit\",\n        \"songs.delete\",\n        \"songs.bulk_edit\",\n        \"songs.stats\"\n    ],\n    [\"song_editor\"]: [\n        \"songs.view\",\n        \"songs.edit\",\n        \"songs.stats\"\n    ],\n    [\"user\"]: []\n};\nfunction hasPermission(userRole, permission) {\n    const permissions = ROLE_PERMISSIONS[userRole] || [];\n    return permissions.includes(permission);\n}\nfunction canAccessAdminPanel(role) {\n    return role !== \"user\";\n}\nfunction isSuperAdmin(role) {\n    return role === \"super_admin\";\n}\nfunction canManageSongs(role) {\n    return hasPermission(role, \"songs.view\");\n}\n// 하위 호환성을 위한 임시 함수 (나중에 제거)\nfunction roleToIsAdmin(role) {\n    return role !== \"user\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3Blcm1pc3Npb25zLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBTyxzQ0FBS0E7Ozs7OztXQUFBQTtNQU1YO0FBRU0sd0NBQUtDO0lBQ1YsU0FBUzs7O0lBSVQsUUFBUTs7Ozs7OztXQUxFQTtNQVlYO0FBRUQsTUFBTUMsbUJBQW1CO0lBQ3ZCLGVBQXNCLEVBQUU7Ozs7Ozs7OztLQVN2QjtJQUNELGNBQXFCLEVBQUU7Ozs7Ozs7S0FPdEI7SUFDRCxnQkFBdUIsRUFBRTs7Ozs7OztLQU94QjtJQUNELGVBQXNCLEVBQUU7Ozs7S0FJdkI7SUFDRCxRQUFlLEVBQUUsRUFBRTtBQUNyQjtBQUVPLFNBQVNDLGNBQWNDLFFBQWtCLEVBQUVDLFVBQXNCO0lBQ3RFLE1BQU1DLGNBQWNKLGdCQUFnQixDQUFDRSxTQUFTLElBQUksRUFBRTtJQUNwRCxPQUFPRSxZQUFZQyxRQUFRLENBQUNGO0FBQzlCO0FBRU8sU0FBU0csb0JBQW9CQyxJQUFjO0lBQ2hELE9BQU9BO0FBQ1Q7QUFFTyxTQUFTQyxhQUFhRCxJQUFjO0lBQ3pDLE9BQU9BO0FBQ1Q7QUFFTyxTQUFTRSxlQUFlRixJQUFjO0lBQzNDLE9BQU9OLGNBQWNNO0FBQ3ZCO0FBRUEsNEJBQTRCO0FBQ3JCLFNBQVNHLGNBQWNILElBQWM7SUFDMUMsT0FBT0E7QUFDVCIsInNvdXJjZXMiOlsiL21udC9mL0RhdGEvR2l0L2NsYXVkZS1jb2RlL2F5YXVrZS1wYWdlL2F5YXVrZS1wYWdlL3NyYy9saWIvcGVybWlzc2lvbnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGVudW0gVXNlclJvbGUge1xyXG4gIFNVUEVSX0FETUlOID0gJ3N1cGVyX2FkbWluJyxcclxuICBTT05HX0FETUlOID0gJ3NvbmdfYWRtaW4nLCBcclxuICBBWUFVS0VfQURNSU4gPSAnYXlhdWtlX2FkbWluJywgLy8g7JWE7JW87Jqw7LyAIOq0gOumrOyekCAoU09OR19BRE1JTuqzvCDrj5nsnbztlZwg6raM7ZWcKVxyXG4gIFNPTkdfRURJVE9SID0gJ3NvbmdfZWRpdG9yJyxcclxuICBVU0VSID0gJ3VzZXInXHJcbn1cclxuXHJcbmV4cG9ydCBlbnVtIFBlcm1pc3Npb24ge1xyXG4gIC8vIOyLnOyKpO2FnCDqtIDrpqxcclxuICBTWVNURU1fQURNSU4gPSAnc3lzdGVtLmFkbWluJyxcclxuICBVU0VSX01BTkFHRSA9ICd1c2Vycy5tYW5hZ2UnLFxyXG4gIFxyXG4gIC8vIOuFuOuemCDqtIDrpqxcclxuICBTT05HU19WSUVXID0gJ3NvbmdzLnZpZXcnLFxyXG4gIFNPTkdTX0NSRUFURSA9ICdzb25ncy5jcmVhdGUnLFxyXG4gIFNPTkdTX0VESVQgPSAnc29uZ3MuZWRpdCcsXHJcbiAgU09OR1NfREVMRVRFID0gJ3NvbmdzLmRlbGV0ZScsXHJcbiAgU09OR1NfQlVMS19FRElUID0gJ3NvbmdzLmJ1bGtfZWRpdCcsXHJcbiAgU09OR1NfU1RBVFMgPSAnc29uZ3Muc3RhdHMnLFxyXG59XHJcblxyXG5jb25zdCBST0xFX1BFUk1JU1NJT05TID0ge1xyXG4gIFtVc2VyUm9sZS5TVVBFUl9BRE1JTl06IFtcclxuICAgIFBlcm1pc3Npb24uU1lTVEVNX0FETUlOLFxyXG4gICAgUGVybWlzc2lvbi5VU0VSX01BTkFHRSxcclxuICAgIFBlcm1pc3Npb24uU09OR1NfVklFVyxcclxuICAgIFBlcm1pc3Npb24uU09OR1NfQ1JFQVRFLFxyXG4gICAgUGVybWlzc2lvbi5TT05HU19FRElULFxyXG4gICAgUGVybWlzc2lvbi5TT05HU19ERUxFVEUsXHJcbiAgICBQZXJtaXNzaW9uLlNPTkdTX0JVTEtfRURJVCxcclxuICAgIFBlcm1pc3Npb24uU09OR1NfU1RBVFMsXHJcbiAgXSxcclxuICBbVXNlclJvbGUuU09OR19BRE1JTl06IFtcclxuICAgIFBlcm1pc3Npb24uU09OR1NfVklFVyxcclxuICAgIFBlcm1pc3Npb24uU09OR1NfQ1JFQVRFLFxyXG4gICAgUGVybWlzc2lvbi5TT05HU19FRElULFxyXG4gICAgUGVybWlzc2lvbi5TT05HU19ERUxFVEUsXHJcbiAgICBQZXJtaXNzaW9uLlNPTkdTX0JVTEtfRURJVCxcclxuICAgIFBlcm1pc3Npb24uU09OR1NfU1RBVFMsXHJcbiAgXSxcclxuICBbVXNlclJvbGUuQVlBVUtFX0FETUlOXTogW1xyXG4gICAgUGVybWlzc2lvbi5TT05HU19WSUVXLFxyXG4gICAgUGVybWlzc2lvbi5TT05HU19DUkVBVEUsXHJcbiAgICBQZXJtaXNzaW9uLlNPTkdTX0VESVQsXHJcbiAgICBQZXJtaXNzaW9uLlNPTkdTX0RFTEVURSxcclxuICAgIFBlcm1pc3Npb24uU09OR1NfQlVMS19FRElULFxyXG4gICAgUGVybWlzc2lvbi5TT05HU19TVEFUUyxcclxuICBdLFxyXG4gIFtVc2VyUm9sZS5TT05HX0VESVRPUl06IFtcclxuICAgIFBlcm1pc3Npb24uU09OR1NfVklFVyxcclxuICAgIFBlcm1pc3Npb24uU09OR1NfRURJVCxcclxuICAgIFBlcm1pc3Npb24uU09OR1NfU1RBVFMsXHJcbiAgXSxcclxuICBbVXNlclJvbGUuVVNFUl06IFtdXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBoYXNQZXJtaXNzaW9uKHVzZXJSb2xlOiBVc2VyUm9sZSwgcGVybWlzc2lvbjogUGVybWlzc2lvbik6IGJvb2xlYW4ge1xyXG4gIGNvbnN0IHBlcm1pc3Npb25zID0gUk9MRV9QRVJNSVNTSU9OU1t1c2VyUm9sZV0gfHwgW11cclxuICByZXR1cm4gcGVybWlzc2lvbnMuaW5jbHVkZXMocGVybWlzc2lvbilcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNhbkFjY2Vzc0FkbWluUGFuZWwocm9sZTogVXNlclJvbGUpOiBib29sZWFuIHtcclxuICByZXR1cm4gcm9sZSAhPT0gVXNlclJvbGUuVVNFUlxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaXNTdXBlckFkbWluKHJvbGU6IFVzZXJSb2xlKTogYm9vbGVhbiB7XHJcbiAgcmV0dXJuIHJvbGUgPT09IFVzZXJSb2xlLlNVUEVSX0FETUlOXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjYW5NYW5hZ2VTb25ncyhyb2xlOiBVc2VyUm9sZSk6IGJvb2xlYW4ge1xyXG4gIHJldHVybiBoYXNQZXJtaXNzaW9uKHJvbGUsIFBlcm1pc3Npb24uU09OR1NfVklFVylcclxufVxyXG5cclxuLy8g7ZWY7JyEIO2YuO2ZmOyEseydhCDsnITtlZwg7J6E7IucIO2VqOyImCAo64KY7KSR7JeQIOygnOqxsClcclxuZXhwb3J0IGZ1bmN0aW9uIHJvbGVUb0lzQWRtaW4ocm9sZTogVXNlclJvbGUpOiBib29sZWFuIHtcclxuICByZXR1cm4gcm9sZSAhPT0gVXNlclJvbGUuVVNFUlxyXG59Il0sIm5hbWVzIjpbIlVzZXJSb2xlIiwiUGVybWlzc2lvbiIsIlJPTEVfUEVSTUlTU0lPTlMiLCJoYXNQZXJtaXNzaW9uIiwidXNlclJvbGUiLCJwZXJtaXNzaW9uIiwicGVybWlzc2lvbnMiLCJpbmNsdWRlcyIsImNhbkFjY2Vzc0FkbWluUGFuZWwiLCJyb2xlIiwiaXNTdXBlckFkbWluIiwiY2FuTWFuYWdlU29uZ3MiLCJyb2xlVG9Jc0FkbWluIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/permissions.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/titleSystem.ts":
/*!********************************!*\
  !*** ./src/lib/titleSystem.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TITLE_DEFINITIONS: () => (/* binding */ TITLE_DEFINITIONS),\n/* harmony export */   checkForNewTitles: () => (/* binding */ checkForNewTitles),\n/* harmony export */   getSelectedTitleInfo: () => (/* binding */ getSelectedTitleInfo),\n/* harmony export */   getTitleDefinition: () => (/* binding */ getTitleDefinition),\n/* harmony export */   getTitleRarityColor: () => (/* binding */ getTitleRarityColor),\n/* harmony export */   grantTitle: () => (/* binding */ grantTitle)\n/* harmony export */ });\n// 칭호 정의들\nconst TITLE_DEFINITIONS = [\n    // 관리자 칭호 (기존 role 기반)\n    {\n        id: \"super_admin\",\n        name: \"최고 관리자\",\n        description: \"사이트의 모든 권한을 가진 최고 관리자입니다\",\n        condition: \"사이트 관리자 권한 보유\",\n        rarity: \"legendary\",\n        checkCondition: (user)=>user.role === \"super_admin\",\n        autoGrant: true\n    },\n    {\n        id: \"ayauke_admin\",\n        name: \"아야냥이\",\n        description: \"스트리머 아야에게 부여되는 특별한 칭호입니다\",\n        condition: \"사이트를 선물받은 스트리머\",\n        rarity: \"epic\",\n        checkCondition: (user)=>user.role === \"ayauke_admin\",\n        autoGrant: true\n    },\n    {\n        id: \"honeyz\",\n        name: \"HONEYZ\",\n        description: \"허니즈에게 부여되는 칭호입니다\",\n        condition: \"허니즈 소속 스트리머\",\n        rarity: \"epic\",\n        checkCondition: (user)=>{\n            const honeyzChannelIds = [\n                \"abe8aa82baf3d3ef54ad8468ee73e7fc\",\n                \"798e100206987b59805cfb75f927e965\",\n                \"b82e8bc2505e37156b2d1140ba1fc05c\",\n                \"c0d9723cbb75dc223c6aa8a9d4f56002\",\n                \"bd07973b6021d72512240c01a386d5c9\",\n                \"65a53076fe1a39636082dd6dba8b8a4b\",\n                \"d6017f757614569add71b0bc83a81382\"\n            ];\n            return honeyzChannelIds.includes(user.channelId);\n        },\n        autoGrant: true\n    },\n    {\n        id: \"song_admin\",\n        name: \"노래 관리자\",\n        description: \"노래 정보를 관리하는 관리자입니다\",\n        condition: \"노래 관리자 권한 보유\",\n        rarity: \"epic\",\n        checkCondition: (user)=>user.role === \"song_admin\",\n        autoGrant: true\n    },\n    {\n        id: \"song_editor\",\n        name: \"편집자\",\n        description: \"노래 정보를 편집할 수 있는 편집자입니다\",\n        condition: \"편집자 권한 보유\",\n        rarity: \"rare\",\n        checkCondition: (user)=>user.role === \"song_editor\",\n        autoGrant: true\n    },\n    // 활동 기반 칭호\n    {\n        id: \"chzzk_user\",\n        name: \"치지직 사용자\",\n        description: \"아야의 팬사이트에 오신 것을 환영합니다!\",\n        condition: \"회원가입 시 자동 부여\",\n        rarity: \"common\",\n        checkCondition: ()=>true,\n        autoGrant: true\n    },\n    {\n        id: \"regular_visitor\",\n        name: \"단골손님\",\n        description: \"자주 방문해주시는 소중한 단골손님입니다\",\n        condition: \"로그인 10회 이상\",\n        rarity: \"common\",\n        checkCondition: (user, stats)=>(stats?.loginCount || 0) >= 10,\n        autoGrant: true\n    },\n    {\n        id: \"music_lover\",\n        name: \"노래 매니아\",\n        description: \"음악을 사랑하는 진정한 매니아입니다\",\n        condition: \"좋아요 50개 이상\",\n        rarity: \"rare\",\n        checkCondition: (user, stats)=>(stats?.likeCount || 0) >= 50,\n        autoGrant: true\n    },\n    {\n        id: \"playlist_curator\",\n        name: \"플레이리스트 큐레이터\",\n        description: \"음악 취향이 뛰어난 플레이리스트 전문가입니다\",\n        condition: \"플레이리스트 5개 이상 생성\",\n        rarity: \"rare\",\n        checkCondition: (user, stats)=>(stats?.playlistCount || 0) >= 5,\n        autoGrant: true\n    },\n    {\n        id: \"loyal_fan\",\n        name: \"충성스러운 팬\",\n        description: \"아야를 꾸준히 응원해주시는 충성스러운 팬입니다\",\n        condition: \"30일 연속 접속\",\n        rarity: \"epic\",\n        checkCondition: (user, stats)=>(stats?.consecutiveDays || 0) >= 30,\n        autoGrant: true\n    },\n    // 특별 칭호 (수동 부여)\n    {\n        id: \"developer_friend\",\n        name: \"개발자의 친구\",\n        description: \"개발자와 특별한 인연이 있는 소중한 친구입니다\",\n        condition: \"개발자가 직접 부여\",\n        rarity: \"legendary\",\n        checkCondition: ()=>false,\n        autoGrant: false\n    },\n    {\n        id: \"beta_tester\",\n        name: \"베타 테스터\",\n        description: \"사이트 초기부터 함께해주신 베타 테스터입니다\",\n        condition: \"특정 기간 가입자\",\n        rarity: \"epic\",\n        checkCondition: ()=>false,\n        autoGrant: false\n    }\n];\n// 칭호 ID로 정의 찾기\nfunction getTitleDefinition(titleId) {\n    return TITLE_DEFINITIONS.find((title)=>title.id === titleId);\n}\n// 희귀도별 색상 반환\nfunction getTitleRarityColor(rarity) {\n    switch(rarity){\n        case \"common\":\n            return \"bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200 border border-gray-800 dark:border-gray-700\";\n        case \"rare\":\n            return \"bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 border border-blue-800 dark:border-blue-700\";\n        case \"epic\":\n            return \"bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-200 border border-purple-800 dark:border-purple-700\";\n        case \"legendary\":\n            return \"bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200 border border-yellow-800 dark:border-yellow-700\";\n        default:\n            return \"bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200 border border-gray-800 dark:border-gray-700\";\n    }\n}\n// 사용자가 획득할 수 있는 새로운 칭호 확인\nfunction checkForNewTitles(user, stats) {\n    const currentTitleIds = user.titles.map((title)=>title.id);\n    const newTitles = [];\n    for (const titleDef of TITLE_DEFINITIONS){\n        // 이미 보유한 칭호는 건너뛰기\n        if (currentTitleIds.includes(titleDef.id)) continue;\n        // 자동 부여 칭호만 체크\n        if (!titleDef.autoGrant) continue;\n        // 조건 확인\n        if (titleDef.checkCondition(user, stats)) {\n            newTitles.push(titleDef);\n        }\n    }\n    return newTitles;\n}\n// 사용자에게 칭호 부여\nfunction grantTitle(user, titleDef) {\n    console.log(\"🏆 칭호 부여 시도:\", {\n        titleId: titleDef.id,\n        titleName: titleDef.name\n    });\n    // 이미 보유한 칭호인지 확인\n    const alreadyHas = user.titles.some((title)=>title.id === titleDef.id);\n    if (alreadyHas) {\n        console.log(\"🏆 이미 보유한 칭호:\", titleDef.name);\n        return false;\n    }\n    // 칭호 추가\n    const newTitle = {\n        id: titleDef.id,\n        name: titleDef.name,\n        description: titleDef.description,\n        earnedAt: new Date(),\n        condition: titleDef.condition,\n        rarity: titleDef.rarity\n    };\n    console.log(\"🏆 칭호 추가 전 titles.length:\", user.titles.length);\n    user.titles.push(newTitle);\n    console.log(\"🏆 칭호 추가 후 titles.length:\", user.titles.length);\n    console.log(\"🏆 추가된 칭호:\", newTitle);\n    // 첫 번째 칭호라면 자동으로 선택\n    if (!user.selectedTitle) {\n        user.selectedTitle = titleDef.id;\n        console.log(\"🏆 첫 번째 칭호로 선택됨:\", titleDef.id);\n    }\n    return true;\n}\n// 선택된 칭호 정보 가져오기\nfunction getSelectedTitleInfo(user) {\n    if (!user.selectedTitle) return null;\n    const selectedTitle = user.titles.find((title)=>title.id === user.selectedTitle);\n    if (!selectedTitle) return null;\n    // Mongoose 객체를 순수한 JavaScript 객체로 변환\n    const titleObj = typeof selectedTitle.toObject === \"function\" ? selectedTitle.toObject() : JSON.parse(JSON.stringify(selectedTitle));\n    return {\n        id: titleObj.id,\n        name: titleObj.name,\n        description: titleObj.description,\n        rarity: titleObj.rarity,\n        colorClass: getTitleRarityColor(titleObj.rarity)\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/titleSystem.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/userService.ts":
/*!********************************!*\
  !*** ./src/lib/userService.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createOrUpdateUser: () => (/* binding */ createOrUpdateUser),\n/* harmony export */   getAdminUsers: () => (/* binding */ getAdminUsers),\n/* harmony export */   getUserByChannelId: () => (/* binding */ getUserByChannelId),\n/* harmony export */   getUserStats: () => (/* binding */ getUserStats),\n/* harmony export */   updateUserPreferences: () => (/* binding */ updateUserPreferences)\n/* harmony export */ });\n/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/models/User */ \"(rsc)/./src/models/User.ts\");\n/* harmony import */ var _lib_adminChannels__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/adminChannels */ \"(rsc)/./src/lib/adminChannels.ts\");\n/* harmony import */ var _lib_titleSystem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/titleSystem */ \"(rsc)/./src/lib/titleSystem.ts\");\n\n\n\n/**\r\n * 사용자 생성 또는 업데이트 (로그인 시 호출)\r\n */ async function createOrUpdateUser(userData) {\n    try {\n        const staticRole = (0,_lib_adminChannels__WEBPACK_IMPORTED_MODULE_1__.getStaticUserRole)(userData.channelId);\n        // 기존 사용자 찾기\n        let user = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findOne({\n            channelId: userData.channelId\n        });\n        if (user) {\n            // 기존 사용자 업데이트\n            const oldChannelName = user.channelName;\n            const newChannelName = userData.channelName;\n            // channelName 변경 감지 및 이력 추가\n            if (oldChannelName !== newChannelName) {\n                user.channelNameHistory.push({\n                    channelName: newChannelName,\n                    changedAt: new Date(),\n                    source: \"login\"\n                });\n                console.log(`치지직 채널명 변경 감지: ${oldChannelName} → ${newChannelName}`);\n            }\n            user.channelName = newChannelName;\n            // displayName이 없으면 channelName으로 설정하지 않음 (프로필 수정 시에만 생성)\n            user.profileImageUrl = userData.profileImageUrl || user.profileImageUrl;\n            // 정적 권한이 현재 권한보다 높으면 업데이트\n            // if (staticRole !== 'user' && (user.role === 'user' || staticRole === 'super_admin')) {\n            //   user.role = staticRole\n            //   console.log(`사용자 권한 업데이트: ${userData.channelName} → ${staticRole}`)\n            // }\n            user.lastLoginAt = new Date();\n            // 기존 사용자의 칭호 필드가 없으면 초기화\n            if (!user.titles) {\n                user.titles = [];\n            }\n            if (user.selectedTitle === undefined) {\n                user.selectedTitle = null;\n            }\n            // 칭호 체크 및 부여\n            await checkAndGrantTitles(user);\n            const savedUser = await user.save();\n            console.log(`기존 사용자 업데이트: ${userData.channelName} (${userData.channelId})`);\n            // 저장 후 실제 DB 상태 확인\n            console.log(\"🏆 저장 후 DB 상태:\", {\n                titlesCount: savedUser.titles?.length || 0,\n                selectedTitle: savedUser.selectedTitle,\n                titles: savedUser.titles?.map((t)=>t.name) || []\n            });\n            // DB에서 다시 조회해서 실제 저장 확인\n            const reloadedUser = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findOne({\n                channelId: userData.channelId\n            });\n            console.log(\"🏆 DB 재조회 결과:\", {\n                titlesCount: reloadedUser?.titles?.length || 0,\n                selectedTitle: reloadedUser?.selectedTitle,\n                titles: reloadedUser?.titles?.map((t)=>t.name) || []\n            });\n        } else {\n            // 새 사용자 생성\n            user = new _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n                channelId: userData.channelId,\n                channelName: userData.channelName,\n                displayName: userData.channelName,\n                profileImageUrl: userData.profileImageUrl,\n                role: staticRole,\n                lastLoginAt: new Date(),\n                channelNameHistory: [\n                    {\n                        channelName: userData.channelName,\n                        changedAt: new Date(),\n                        source: \"initial\"\n                    }\n                ],\n                titles: [],\n                selectedTitle: null,\n                preferences: {\n                    theme: \"system\",\n                    defaultPlaylistView: \"grid\"\n                }\n            });\n            // 신규 사용자 칭호 체크 및 부여\n            await checkAndGrantTitles(user);\n            await user.save();\n            console.log(`새 사용자 생성: ${userData.channelName} (${userData.channelId}) - 권한: ${staticRole}`);\n        }\n        return user;\n    } catch (error) {\n        console.error(\"사용자 생성/업데이트 오류:\", error);\n        throw error;\n    }\n}\n/**\r\n * 사용자 정보 조회\r\n */ async function getUserByChannelId(channelId) {\n    try {\n        return await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findOne({\n            channelId\n        });\n    } catch (error) {\n        console.error(\"사용자 조회 오류:\", error);\n        return null;\n    }\n}\n/**\r\n * 사용자 환경설정 업데이트\r\n */ async function updateUserPreferences(channelId, preferences) {\n    try {\n        const user = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findOne({\n            channelId\n        });\n        if (!user) return null;\n        user.preferences = {\n            ...user.preferences,\n            ...preferences\n        };\n        await user.save();\n        return user;\n    } catch (error) {\n        console.error(\"사용자 환경설정 업데이트 오류:\", error);\n        return null;\n    }\n}\n/**\r\n * 관리자 목록 조회\r\n */ async function getAdminUsers() {\n    try {\n        return await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].find({\n            role: {\n                $ne: \"user\"\n            }\n        }).sort({\n            lastLoginAt: -1\n        });\n    } catch (error) {\n        console.error(\"관리자 목록 조회 오류:\", error);\n        return [];\n    }\n}\n/**\r\n * 활성 사용자 통계\r\n */ async function getUserStats() {\n    try {\n        const totalUsers = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].countDocuments();\n        const activeUsers = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].countDocuments({\n            lastLoginAt: {\n                $gte: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)\n            }\n        });\n        const adminUsers = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].countDocuments({\n            role: {\n                $ne: \"user\"\n            }\n        });\n        return {\n            totalUsers,\n            activeUsers,\n            adminUsers\n        };\n    } catch (error) {\n        console.error(\"사용자 통계 조회 오류:\", error);\n        return {\n            totalUsers: 0,\n            activeUsers: 0,\n            adminUsers: 0\n        };\n    }\n}\n/**\r\n * 사용자 통계 수집\r\n */ async function getUserStatsForTitles(user) {\n    try {\n        // Like 모델에서 해당 사용자의 좋아요 수 조회\n        const Like = (await __webpack_require__.e(/*! import() */ \"_rsc_src_models_Like_ts\").then(__webpack_require__.bind(__webpack_require__, /*! @/models/Like */ \"(rsc)/./src/models/Like.ts\"))).default;\n        const likeCount = await Like.countDocuments({\n            userId: user._id\n        });\n        // Playlist 모델에서 해당 사용자의 플레이리스트 수 조회\n        const Playlist = (await __webpack_require__.e(/*! import() */ \"_rsc_src_models_Playlist_ts\").then(__webpack_require__.bind(__webpack_require__, /*! @/models/Playlist */ \"(rsc)/./src/models/Playlist.ts\"))).default;\n        const playlistCount = await Playlist.countDocuments({\n            userId: user._id\n        });\n        // 실제 활동 통계 사용 (activityStats가 없으면 기본값)\n        const activityStats = user.activityStats || {\n            totalLoginDays: 1,\n            currentStreak: 1,\n            longestStreak: 1,\n            lastVisitDate: null\n        };\n        return {\n            likeCount,\n            playlistCount,\n            loginCount: activityStats.totalLoginDays,\n            consecutiveDays: activityStats.currentStreak\n        };\n    } catch (error) {\n        console.error(\"사용자 통계 수집 오류:\", error);\n        return {\n            likeCount: 0,\n            playlistCount: 0,\n            loginCount: 1,\n            consecutiveDays: 1\n        };\n    }\n}\n/**\r\n * 사용자 칭호 체크 및 부여\r\n */ async function checkAndGrantTitles(user) {\n    try {\n        // 기존 칭호가 없으면 빈 배열로 초기화\n        if (!user.titles) {\n            user.titles = [];\n        }\n        if (user.selectedTitle === undefined) {\n            user.selectedTitle = null;\n        }\n        // 사용자 통계 수집\n        const stats = await getUserStatsForTitles(user);\n        // 새로 획득할 수 있는 칭호 확인\n        const newTitleDefs = (0,_lib_titleSystem__WEBPACK_IMPORTED_MODULE_2__.checkForNewTitles)(user, stats);\n        // 새 칭호 부여\n        let grantedCount = 0;\n        for (const titleDef of newTitleDefs){\n            if ((0,_lib_titleSystem__WEBPACK_IMPORTED_MODULE_2__.grantTitle)(user, titleDef)) {\n                grantedCount++;\n                console.log(`칭호 부여: ${user.channelName} → ${titleDef.name}`);\n                // Mongoose가 배열 변경을 감지하도록 명시적으로 표시\n                user.markModified(\"titles\");\n                user.markModified(\"selectedTitle\");\n            }\n        }\n        if (grantedCount > 0) {\n            console.log(`총 ${grantedCount}개의 새로운 칭호를 부여했습니다`);\n            console.log(\"🏆 현재 사용자 칭호 상태:\", {\n                titlesCount: user.titles.length,\n                selectedTitle: user.selectedTitle,\n                titles: user.titles.map((t)=>t.name)\n            });\n        }\n    } catch (error) {\n        console.error(\"칭호 체크 및 부여 오류:\", error);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/userService.ts\n");

/***/ }),

/***/ "(rsc)/./src/models/SongDetail.ts":
/*!**********************************!*\
  !*** ./src/models/SongDetail.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst MRLinkSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    url: {\n        type: String,\n        required: true,\n        trim: true\n    },\n    skipSeconds: {\n        type: Number,\n        default: 0,\n        min: 0\n    },\n    label: {\n        type: String,\n        trim: true\n    },\n    duration: {\n        type: String,\n        trim: true\n    }\n}, {\n    _id: false\n});\nconst SongDetailSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    title: {\n        type: String,\n        required: true,\n        trim: true\n    },\n    artist: {\n        type: String,\n        required: true,\n        trim: true\n    },\n    titleAlias: {\n        type: String,\n        trim: true\n    },\n    artistAlias: {\n        type: String,\n        trim: true\n    },\n    language: {\n        type: String,\n        trim: true,\n        enum: [\n            'Korean',\n            'English',\n            'Japanese',\n            'Chinese',\n            'Other'\n        ]\n    },\n    lyrics: {\n        type: String,\n        trim: true\n    },\n    searchTags: [\n        {\n            type: String,\n            trim: true\n        }\n    ],\n    sungCount: {\n        type: Number,\n        default: 0,\n        min: 0\n    },\n    likeCount: {\n        type: Number,\n        default: 0,\n        min: 0\n    },\n    lastSungDate: {\n        type: String,\n        trim: true\n    },\n    keyAdjustment: {\n        type: Number,\n        default: null,\n        validate: {\n            validator: function(v) {\n                if (v === undefined || v === null) return true;\n                return v >= -12 && v <= 12;\n            },\n            message: '키 조절은 -12부터 +12 사이의 숫자로 입력해주세요.'\n        }\n    },\n    mrLinks: [\n        MRLinkSchema\n    ],\n    selectedMRIndex: {\n        type: Number,\n        default: 0,\n        min: 0,\n        validate: {\n            validator: function(v) {\n                if (v === undefined || v === null) return true;\n                const mrLinks = this.mrLinks;\n                if (!mrLinks || mrLinks.length === 0) return true;\n                return v < mrLinks.length;\n            },\n            message: 'selectedMRIndex must be within the range of available MR links'\n        }\n    },\n    personalNotes: {\n        type: String,\n        trim: true\n    },\n    imageUrl: {\n        type: String,\n        trim: true,\n        validate: {\n            validator: function(v) {\n                if (!v) return true; // 빈 값은 허용\n                // URL 형식 검증\n                try {\n                    new URL(v);\n                    return true;\n                } catch  {\n                    return false;\n                }\n            },\n            message: '올바른 URL 형식을 입력해주세요.'\n        }\n    },\n    // 곡 상태 관리\n    status: {\n        type: String,\n        enum: [\n            'active',\n            'deleted',\n            'pending',\n            'rejected'\n        ],\n        default: 'active'\n    },\n    // 곡 소스 타입 (기존 source 필드 확장)\n    sourceType: {\n        type: String,\n        enum: [\n            'sheet',\n            'admin',\n            'user_suggestion'\n        ],\n        default: 'sheet'\n    },\n    // 추천자 정보 (사용자 추천곡인 경우)\n    suggestedBy: {\n        type: String,\n        trim: true\n    },\n    // 삭제 관련 정보\n    deletedAt: {\n        type: Date\n    },\n    deletedBy: {\n        type: String,\n        trim: true\n    },\n    deleteReason: {\n        type: String,\n        trim: true\n    },\n    // 승인 관련 정보 (추천곡용)\n    approvedAt: {\n        type: Date\n    },\n    approvedBy: {\n        type: String,\n        trim: true\n    }\n}, {\n    timestamps: true\n});\n// 제목+아티스트 복합 unique 인덱스 (같은 제목이라도 다른 아티스트면 허용)\nSongDetailSchema.index({\n    title: 1,\n    artist: 1\n}, {\n    unique: true\n});\nSongDetailSchema.index({\n    title: 1\n}); // 제목 검색용\nSongDetailSchema.index({\n    sungCount: -1\n});\nSongDetailSchema.index({\n    lastSungDate: -1\n});\nSongDetailSchema.index({\n    searchTags: 1\n});\nSongDetailSchema.index({\n    language: 1\n});\nSongDetailSchema.index({\n    status: 1\n});\nSongDetailSchema.index({\n    sourceType: 1\n});\nSongDetailSchema.index({\n    suggestedBy: 1\n});\nSongDetailSchema.index({\n    deletedAt: -1\n});\n// 새로운 통일된 모델명 (SongDetail)\nconst SongDetail = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).SongDetail || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('SongDetail', SongDetailSchema);\n// 기존 호환성을 위한 별칭 제거 (마이그레이션 완료)\n// SongDetail 모델만 사용\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SongDetail);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbW9kZWxzL1NvbmdEZXRhaWwudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNEO0FBS3RELE1BQU1FLGVBQWUsSUFBSUQsNENBQU1BLENBQUM7SUFDOUJFLEtBQUs7UUFDSEMsTUFBTUM7UUFDTkMsVUFBVTtRQUNWQyxNQUFNO0lBQ1I7SUFDQUMsYUFBYTtRQUNYSixNQUFNSztRQUNOQyxTQUFTO1FBQ1RDLEtBQUs7SUFDUDtJQUNBQyxPQUFPO1FBQ0xSLE1BQU1DO1FBQ05FLE1BQU07SUFDUjtJQUNBTSxVQUFVO1FBQ1JULE1BQU1DO1FBQ05FLE1BQU07SUFDUjtBQUNGLEdBQUc7SUFBRU8sS0FBSztBQUFNO0FBRWhCLE1BQU1DLG1CQUEyQixJQUFJZCw0Q0FBTUEsQ0FBQztJQUMxQ2UsT0FBTztRQUNMWixNQUFNQztRQUNOQyxVQUFVO1FBQ1ZDLE1BQU07SUFDUjtJQUNBVSxRQUFRO1FBQ05iLE1BQU1DO1FBQ05DLFVBQVU7UUFDVkMsTUFBTTtJQUNSO0lBQ0FXLFlBQVk7UUFDVmQsTUFBTUM7UUFDTkUsTUFBTTtJQUNSO0lBQ0FZLGFBQWE7UUFDWGYsTUFBTUM7UUFDTkUsTUFBTTtJQUNSO0lBQ0FhLFVBQVU7UUFDUmhCLE1BQU1DO1FBQ05FLE1BQU07UUFDTmMsTUFBTTtZQUFDO1lBQVU7WUFBVztZQUFZO1lBQVc7U0FBUTtJQUM3RDtJQUNBQyxRQUFRO1FBQ05sQixNQUFNQztRQUNORSxNQUFNO0lBQ1I7SUFDQWdCLFlBQVk7UUFBQztZQUNYbkIsTUFBTUM7WUFDTkUsTUFBTTtRQUNSO0tBQUU7SUFDRmlCLFdBQVc7UUFDVHBCLE1BQU1LO1FBQ05DLFNBQVM7UUFDVEMsS0FBSztJQUNQO0lBQ0FjLFdBQVc7UUFDVHJCLE1BQU1LO1FBQ05DLFNBQVM7UUFDVEMsS0FBSztJQUNQO0lBQ0FlLGNBQWM7UUFDWnRCLE1BQU1DO1FBQ05FLE1BQU07SUFDUjtJQUNBb0IsZUFBZTtRQUNidkIsTUFBTUs7UUFDTkMsU0FBUztRQUNUa0IsVUFBVTtZQUNSQyxXQUFXLFNBQVNDLENBQWdCO2dCQUNsQyxJQUFJQSxNQUFNQyxhQUFhRCxNQUFNLE1BQU0sT0FBTztnQkFDMUMsT0FBT0EsS0FBSyxDQUFDLE1BQU1BLEtBQUs7WUFDMUI7WUFDQUUsU0FBUztRQUNYO0lBQ0Y7SUFDQUMsU0FBUztRQUFDL0I7S0FBYTtJQUN2QmdDLGlCQUFpQjtRQUNmOUIsTUFBTUs7UUFDTkMsU0FBUztRQUNUQyxLQUFLO1FBQ0xpQixVQUFVO1lBQ1JDLFdBQVcsU0FBNEJDLENBQVM7Z0JBQzlDLElBQUlBLE1BQU1DLGFBQWFELE1BQU0sTUFBTSxPQUFPO2dCQUMxQyxNQUFNRyxVQUFVLElBQUksQ0FBQ0EsT0FBTztnQkFDNUIsSUFBSSxDQUFDQSxXQUFXQSxRQUFRRSxNQUFNLEtBQUssR0FBRyxPQUFPO2dCQUM3QyxPQUFPTCxJQUFJRyxRQUFRRSxNQUFNO1lBQzNCO1lBQ0FILFNBQVM7UUFDWDtJQUNGO0lBQ0FJLGVBQWU7UUFDYmhDLE1BQU1DO1FBQ05FLE1BQU07SUFDUjtJQUNBOEIsVUFBVTtRQUNSakMsTUFBTUM7UUFDTkUsTUFBTTtRQUNOcUIsVUFBVTtZQUNSQyxXQUFXLFNBQVNDLENBQVM7Z0JBQzNCLElBQUksQ0FBQ0EsR0FBRyxPQUFPLE1BQU0sVUFBVTtnQkFDL0IsWUFBWTtnQkFDWixJQUFJO29CQUNGLElBQUlRLElBQUlSO29CQUNSLE9BQU87Z0JBQ1QsRUFBRSxPQUFNO29CQUNOLE9BQU87Z0JBQ1Q7WUFDRjtZQUNBRSxTQUFTO1FBQ1g7SUFDRjtJQUNBLFVBQVU7SUFDVk8sUUFBUTtRQUNObkMsTUFBTUM7UUFDTmdCLE1BQU07WUFBQztZQUFVO1lBQVc7WUFBVztTQUFXO1FBQ2xEWCxTQUFTO0lBQ1g7SUFDQSw0QkFBNEI7SUFDNUI4QixZQUFZO1FBQ1ZwQyxNQUFNQztRQUNOZ0IsTUFBTTtZQUFDO1lBQVM7WUFBUztTQUFrQjtRQUMzQ1gsU0FBUztJQUNYO0lBQ0EsdUJBQXVCO0lBQ3ZCK0IsYUFBYTtRQUNYckMsTUFBTUM7UUFDTkUsTUFBTTtJQUNSO0lBQ0EsV0FBVztJQUNYbUMsV0FBVztRQUNUdEMsTUFBTXVDO0lBQ1I7SUFDQUMsV0FBVztRQUNUeEMsTUFBTUM7UUFDTkUsTUFBTTtJQUNSO0lBQ0FzQyxjQUFjO1FBQ1p6QyxNQUFNQztRQUNORSxNQUFNO0lBQ1I7SUFDQSxrQkFBa0I7SUFDbEJ1QyxZQUFZO1FBQ1YxQyxNQUFNdUM7SUFDUjtJQUNBSSxZQUFZO1FBQ1YzQyxNQUFNQztRQUNORSxNQUFNO0lBQ1I7QUFDRixHQUFHO0lBQ0R5QyxZQUFZO0FBQ2Q7QUFFQSwrQ0FBK0M7QUFDL0NqQyxpQkFBaUJrQyxLQUFLLENBQUM7SUFBRWpDLE9BQU87SUFBR0MsUUFBUTtBQUFFLEdBQUc7SUFBRWlDLFFBQVE7QUFBSztBQUMvRG5DLGlCQUFpQmtDLEtBQUssQ0FBQztJQUFFakMsT0FBTztBQUFFLElBQUksU0FBUztBQUMvQ0QsaUJBQWlCa0MsS0FBSyxDQUFDO0lBQUV6QixXQUFXLENBQUM7QUFBRTtBQUN2Q1QsaUJBQWlCa0MsS0FBSyxDQUFDO0lBQUV2QixjQUFjLENBQUM7QUFBRTtBQUMxQ1gsaUJBQWlCa0MsS0FBSyxDQUFDO0lBQUUxQixZQUFZO0FBQUU7QUFDdkNSLGlCQUFpQmtDLEtBQUssQ0FBQztJQUFFN0IsVUFBVTtBQUFFO0FBQ3JDTCxpQkFBaUJrQyxLQUFLLENBQUM7SUFBRVYsUUFBUTtBQUFFO0FBQ25DeEIsaUJBQWlCa0MsS0FBSyxDQUFDO0lBQUVULFlBQVk7QUFBRTtBQUN2Q3pCLGlCQUFpQmtDLEtBQUssQ0FBQztJQUFFUixhQUFhO0FBQUU7QUFDeEMxQixpQkFBaUJrQyxLQUFLLENBQUM7SUFBRVAsV0FBVyxDQUFDO0FBQUU7QUFFdkMsMkJBQTJCO0FBQzNCLE1BQU1TLGFBQWFuRCx3REFBZSxDQUFDbUQsVUFBVSxJQUFJbkQscURBQWMsQ0FBYyxjQUFjZTtBQUUzRiwrQkFBK0I7QUFDL0Isb0JBQW9CO0FBRXBCLGlFQUFlb0MsVUFBVUEsRUFBQyIsInNvdXJjZXMiOlsiL21udC9mL0RhdGEvR2l0L2NsYXVkZS1jb2RlL2F5YXVrZS1wYWdlL2F5YXVrZS1wYWdlL3NyYy9tb2RlbHMvU29uZ0RldGFpbC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UsIHsgU2NoZW1hLCBEb2N1bWVudCB9IGZyb20gJ21vbmdvb3NlJztcclxuaW1wb3J0IHsgU29uZ0RldGFpbCB9IGZyb20gJ0AvdHlwZXMnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJU29uZ0RldGFpbCBleHRlbmRzIFNvbmdEZXRhaWwsIERvY3VtZW50IHt9XHJcblxyXG5jb25zdCBNUkxpbmtTY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuICB1cmw6IHtcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gICAgdHJpbTogdHJ1ZSxcclxuICB9LFxyXG4gIHNraXBTZWNvbmRzOiB7XHJcbiAgICB0eXBlOiBOdW1iZXIsXHJcbiAgICBkZWZhdWx0OiAwLFxyXG4gICAgbWluOiAwLFxyXG4gIH0sXHJcbiAgbGFiZWw6IHtcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIHRyaW06IHRydWUsXHJcbiAgfSxcclxuICBkdXJhdGlvbjoge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgdHJpbTogdHJ1ZSxcclxuICB9LFxyXG59LCB7IF9pZDogZmFsc2UgfSk7XHJcblxyXG5jb25zdCBTb25nRGV0YWlsU2NoZW1hOiBTY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuICB0aXRsZToge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICB0cmltOiB0cnVlLFxyXG4gIH0sXHJcbiAgYXJ0aXN0OiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgIHRyaW06IHRydWUsXHJcbiAgfSxcclxuICB0aXRsZUFsaWFzOiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICB0cmltOiB0cnVlLFxyXG4gIH0sXHJcbiAgYXJ0aXN0QWxpYXM6IHtcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIHRyaW06IHRydWUsXHJcbiAgfSxcclxuICBsYW5ndWFnZToge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgdHJpbTogdHJ1ZSxcclxuICAgIGVudW06IFsnS29yZWFuJywgJ0VuZ2xpc2gnLCAnSmFwYW5lc2UnLCAnQ2hpbmVzZScsICdPdGhlciddLFxyXG4gIH0sXHJcbiAgbHlyaWNzOiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICB0cmltOiB0cnVlLFxyXG4gIH0sXHJcbiAgc2VhcmNoVGFnczogW3tcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIHRyaW06IHRydWUsXHJcbiAgfV0sXHJcbiAgc3VuZ0NvdW50OiB7XHJcbiAgICB0eXBlOiBOdW1iZXIsXHJcbiAgICBkZWZhdWx0OiAwLFxyXG4gICAgbWluOiAwLFxyXG4gIH0sXHJcbiAgbGlrZUNvdW50OiB7XHJcbiAgICB0eXBlOiBOdW1iZXIsXHJcbiAgICBkZWZhdWx0OiAwLFxyXG4gICAgbWluOiAwLFxyXG4gIH0sXHJcbiAgbGFzdFN1bmdEYXRlOiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICB0cmltOiB0cnVlLFxyXG4gIH0sXHJcbiAga2V5QWRqdXN0bWVudDoge1xyXG4gICAgdHlwZTogTnVtYmVyLFxyXG4gICAgZGVmYXVsdDogbnVsbCxcclxuICAgIHZhbGlkYXRlOiB7XHJcbiAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24odjogbnVtYmVyIHwgbnVsbCkge1xyXG4gICAgICAgIGlmICh2ID09PSB1bmRlZmluZWQgfHwgdiA9PT0gbnVsbCkgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgcmV0dXJuIHYgPj0gLTEyICYmIHYgPD0gMTI7XHJcbiAgICAgIH0sXHJcbiAgICAgIG1lc3NhZ2U6ICftgqQg7KGw7KCI7J2AIC0xMuu2gO2EsCArMTIg7IKs7J207J2YIOyIq+yekOuhnCDsnoXroKXtlbTso7zshLjsmpQuJ1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgbXJMaW5rczogW01STGlua1NjaGVtYV0sXHJcbiAgc2VsZWN0ZWRNUkluZGV4OiB7XHJcbiAgICB0eXBlOiBOdW1iZXIsXHJcbiAgICBkZWZhdWx0OiAwLFxyXG4gICAgbWluOiAwLFxyXG4gICAgdmFsaWRhdGU6IHtcclxuICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbih0aGlzOiBJU29uZ0RldGFpbCwgdjogbnVtYmVyKSB7XHJcbiAgICAgICAgaWYgKHYgPT09IHVuZGVmaW5lZCB8fCB2ID09PSBudWxsKSByZXR1cm4gdHJ1ZTtcclxuICAgICAgICBjb25zdCBtckxpbmtzID0gdGhpcy5tckxpbmtzO1xyXG4gICAgICAgIGlmICghbXJMaW5rcyB8fCBtckxpbmtzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgcmV0dXJuIHYgPCBtckxpbmtzLmxlbmd0aDtcclxuICAgICAgfSxcclxuICAgICAgbWVzc2FnZTogJ3NlbGVjdGVkTVJJbmRleCBtdXN0IGJlIHdpdGhpbiB0aGUgcmFuZ2Ugb2YgYXZhaWxhYmxlIE1SIGxpbmtzJ1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgcGVyc29uYWxOb3Rlczoge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgdHJpbTogdHJ1ZSxcclxuICB9LFxyXG4gIGltYWdlVXJsOiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICB0cmltOiB0cnVlLFxyXG4gICAgdmFsaWRhdGU6IHtcclxuICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbih2OiBzdHJpbmcpIHtcclxuICAgICAgICBpZiAoIXYpIHJldHVybiB0cnVlOyAvLyDruYgg6rCS7J2AIO2XiOyaqVxyXG4gICAgICAgIC8vIFVSTCDtmJXsi50g6rKA7KadXHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgIG5ldyBVUkwodik7XHJcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9IGNhdGNoIHtcclxuICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICAgIG1lc3NhZ2U6ICfsmKzrsJTrpbggVVJMIO2YleyLneydhCDsnoXroKXtlbTso7zshLjsmpQuJ1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgLy8g6rOhIOyDge2DnCDqtIDrpqxcclxuICBzdGF0dXM6IHtcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIGVudW06IFsnYWN0aXZlJywgJ2RlbGV0ZWQnLCAncGVuZGluZycsICdyZWplY3RlZCddLFxyXG4gICAgZGVmYXVsdDogJ2FjdGl2ZSdcclxuICB9LFxyXG4gIC8vIOqzoSDshozsiqQg7YOA7J6FICjquLDsobQgc291cmNlIO2VhOuTnCDtmZXsnqUpXHJcbiAgc291cmNlVHlwZToge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgZW51bTogWydzaGVldCcsICdhZG1pbicsICd1c2VyX3N1Z2dlc3Rpb24nXSxcclxuICAgIGRlZmF1bHQ6ICdzaGVldCdcclxuICB9LFxyXG4gIC8vIOy2lOyynOyekCDsoJXrs7QgKOyCrOyaqeyekCDstpTsspzqs6Hsnbgg6rK97JqwKVxyXG4gIHN1Z2dlc3RlZEJ5OiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsIC8vIOyCrOyaqeyekCDssYTrhJAgSURcclxuICAgIHRyaW06IHRydWUsXHJcbiAgfSxcclxuICAvLyDsgq3soJwg6rSA66CoIOygleuztFxyXG4gIGRlbGV0ZWRBdDoge1xyXG4gICAgdHlwZTogRGF0ZSxcclxuICB9LFxyXG4gIGRlbGV0ZWRCeToge1xyXG4gICAgdHlwZTogU3RyaW5nLCAvLyDsgq3soJztlZwg6rSA66as7J6QIOyxhOuEkCBJRFxyXG4gICAgdHJpbTogdHJ1ZSxcclxuICB9LFxyXG4gIGRlbGV0ZVJlYXNvbjoge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgdHJpbTogdHJ1ZSxcclxuICB9LFxyXG4gIC8vIOyKueyduCDqtIDroKgg7KCV67O0ICjstpTsspzqs6HsmqkpXHJcbiAgYXBwcm92ZWRBdDoge1xyXG4gICAgdHlwZTogRGF0ZSxcclxuICB9LFxyXG4gIGFwcHJvdmVkQnk6IHtcclxuICAgIHR5cGU6IFN0cmluZywgLy8g7Iq57J247ZWcIOq0gOumrOyekCDssYTrhJAgSURcclxuICAgIHRyaW06IHRydWUsXHJcbiAgfSxcclxufSwge1xyXG4gIHRpbWVzdGFtcHM6IHRydWUsXHJcbn0pO1xyXG5cclxuLy8g7KCc66qpK+yVhO2LsOyKpO2KuCDrs7XtlakgdW5pcXVlIOyduOuNseyKpCAo6rCZ7J2AIOygnOuqqeydtOudvOuPhCDri6Trpbgg7JWE7Yuw7Iqk7Yq466m0IO2XiOyaqSlcclxuU29uZ0RldGFpbFNjaGVtYS5pbmRleCh7IHRpdGxlOiAxLCBhcnRpc3Q6IDEgfSwgeyB1bmlxdWU6IHRydWUgfSk7XHJcblNvbmdEZXRhaWxTY2hlbWEuaW5kZXgoeyB0aXRsZTogMSB9KTsgLy8g7KCc66qpIOqygOyDieyaqVxyXG5Tb25nRGV0YWlsU2NoZW1hLmluZGV4KHsgc3VuZ0NvdW50OiAtMSB9KTtcclxuU29uZ0RldGFpbFNjaGVtYS5pbmRleCh7IGxhc3RTdW5nRGF0ZTogLTEgfSk7XHJcblNvbmdEZXRhaWxTY2hlbWEuaW5kZXgoeyBzZWFyY2hUYWdzOiAxIH0pO1xyXG5Tb25nRGV0YWlsU2NoZW1hLmluZGV4KHsgbGFuZ3VhZ2U6IDEgfSk7XHJcblNvbmdEZXRhaWxTY2hlbWEuaW5kZXgoeyBzdGF0dXM6IDEgfSk7XHJcblNvbmdEZXRhaWxTY2hlbWEuaW5kZXgoeyBzb3VyY2VUeXBlOiAxIH0pO1xyXG5Tb25nRGV0YWlsU2NoZW1hLmluZGV4KHsgc3VnZ2VzdGVkQnk6IDEgfSk7XHJcblNvbmdEZXRhaWxTY2hlbWEuaW5kZXgoeyBkZWxldGVkQXQ6IC0xIH0pO1xyXG5cclxuLy8g7IOI66Gc7Jq0IO2GteydvOuQnCDrqqjrjbjrqoUgKFNvbmdEZXRhaWwpXHJcbmNvbnN0IFNvbmdEZXRhaWwgPSBtb25nb29zZS5tb2RlbHMuU29uZ0RldGFpbCB8fCBtb25nb29zZS5tb2RlbDxJU29uZ0RldGFpbD4oJ1NvbmdEZXRhaWwnLCBTb25nRGV0YWlsU2NoZW1hKTtcclxuXHJcbi8vIOq4sOyhtCDtmLjtmZjshLHsnYQg7JyE7ZWcIOuzhOy5rSDsoJzqsbAgKOuniOydtOq3uOugiOydtOyFmCDsmYTro4wpXHJcbi8vIFNvbmdEZXRhaWwg66qo642466eMIOyCrOyaqVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgU29uZ0RldGFpbDsiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJTY2hlbWEiLCJNUkxpbmtTY2hlbWEiLCJ1cmwiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJ0cmltIiwic2tpcFNlY29uZHMiLCJOdW1iZXIiLCJkZWZhdWx0IiwibWluIiwibGFiZWwiLCJkdXJhdGlvbiIsIl9pZCIsIlNvbmdEZXRhaWxTY2hlbWEiLCJ0aXRsZSIsImFydGlzdCIsInRpdGxlQWxpYXMiLCJhcnRpc3RBbGlhcyIsImxhbmd1YWdlIiwiZW51bSIsImx5cmljcyIsInNlYXJjaFRhZ3MiLCJzdW5nQ291bnQiLCJsaWtlQ291bnQiLCJsYXN0U3VuZ0RhdGUiLCJrZXlBZGp1c3RtZW50IiwidmFsaWRhdGUiLCJ2YWxpZGF0b3IiLCJ2IiwidW5kZWZpbmVkIiwibWVzc2FnZSIsIm1yTGlua3MiLCJzZWxlY3RlZE1SSW5kZXgiLCJsZW5ndGgiLCJwZXJzb25hbE5vdGVzIiwiaW1hZ2VVcmwiLCJVUkwiLCJzdGF0dXMiLCJzb3VyY2VUeXBlIiwic3VnZ2VzdGVkQnkiLCJkZWxldGVkQXQiLCJEYXRlIiwiZGVsZXRlZEJ5IiwiZGVsZXRlUmVhc29uIiwiYXBwcm92ZWRBdCIsImFwcHJvdmVkQnkiLCJ0aW1lc3RhbXBzIiwiaW5kZXgiLCJ1bmlxdWUiLCJTb25nRGV0YWlsIiwibW9kZWxzIiwibW9kZWwiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/models/SongDetail.ts\n");

/***/ }),

/***/ "(rsc)/./src/models/User.ts":
/*!****************************!*\
  !*** ./src/models/User.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst userSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    channelId: {\n        type: String,\n        required: true,\n        unique: true\n    },\n    channelName: {\n        type: String,\n        required: true\n    },\n    displayName: {\n        type: String,\n        required: false\n    },\n    profileImageUrl: {\n        type: String,\n        default: null\n    },\n    role: {\n        type: String,\n        enum: [\n            \"super_admin\",\n            \"song_admin\",\n            \"song_editor\",\n            \"user\"\n        ],\n        default: \"user\"\n    },\n    grantedBy: {\n        type: String,\n        default: null\n    },\n    grantedAt: {\n        type: Date,\n        default: null\n    },\n    lastLoginAt: {\n        type: Date,\n        default: Date.now\n    },\n    channelNameHistory: [\n        {\n            channelName: {\n                type: String,\n                required: true\n            },\n            changedAt: {\n                type: Date,\n                default: Date.now\n            },\n            source: {\n                type: String,\n                enum: [\n                    \"login\",\n                    \"initial\"\n                ],\n                required: true\n            }\n        }\n    ],\n    titles: [\n        {\n            id: {\n                type: String,\n                required: true\n            },\n            name: {\n                type: String,\n                required: true\n            },\n            description: {\n                type: String,\n                required: true\n            },\n            earnedAt: {\n                type: Date,\n                default: Date.now\n            },\n            condition: {\n                type: String,\n                required: true\n            },\n            rarity: {\n                type: String,\n                enum: [\n                    \"common\",\n                    \"rare\",\n                    \"epic\",\n                    \"legendary\"\n                ],\n                required: true\n            }\n        }\n    ],\n    selectedTitle: {\n        type: String,\n        default: null\n    },\n    preferences: {\n        theme: {\n            type: String,\n            enum: [\n                \"light\",\n                \"dark\",\n                \"system\"\n            ],\n            default: \"system\"\n        },\n        defaultPlaylistView: {\n            type: String,\n            enum: [\n                \"grid\",\n                \"list\"\n            ],\n            default: \"grid\"\n        }\n    },\n    activityStats: {\n        totalLoginDays: {\n            type: Number,\n            default: 0\n        },\n        currentStreak: {\n            type: Number,\n            default: 0\n        },\n        longestStreak: {\n            type: Number,\n            default: 0\n        },\n        lastVisitDate: {\n            type: String,\n            default: null\n        }\n    }\n}, {\n    timestamps: true\n});\n// 인덱스 추가 (channelId는 unique: true로 자동 인덱스 생성됨)\nuserSchema.index({\n    role: 1\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).User || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model(\"User\", userSchema));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/models/User.ts\n");

/***/ }),

/***/ "(rsc)/./src/models/UserActivity.ts":
/*!************************************!*\
  !*** ./src/models/UserActivity.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserActivity: () => (/* binding */ UserActivity),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst UserActivitySchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    userId: {\n        type: mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema.Types.ObjectId,\n        ref: 'User',\n        required: true,\n        index: true\n    },\n    date: {\n        type: String,\n        required: true\n    },\n    visitCount: {\n        type: Number,\n        default: 1\n    },\n    firstVisitAt: {\n        type: Date,\n        required: true\n    },\n    lastVisitAt: {\n        type: Date,\n        required: true\n    }\n}, {\n    timestamps: true\n});\n// 복합 인덱스: 사용자별 날짜 조회 최적화\nUserActivitySchema.index({\n    userId: 1,\n    date: 1\n}, {\n    unique: true\n});\n// 날짜별 인덱스: 오래된 데이터 정리 시 사용\nUserActivitySchema.index({\n    date: 1\n});\nconst UserActivity = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).UserActivity || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('UserActivity', UserActivitySchema);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UserActivity);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbW9kZWxzL1VzZXJBY3Rpdml0eS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXFEO0FBWXJELE1BQU1FLHFCQUFxQixJQUFJRCw0Q0FBTUEsQ0FBZ0I7SUFDbkRFLFFBQVE7UUFDTkMsTUFBTUgsNENBQU1BLENBQUNJLEtBQUssQ0FBQ0MsUUFBUTtRQUMzQkMsS0FBSztRQUNMQyxVQUFVO1FBQ1ZDLE9BQU87SUFDVDtJQUNBQyxNQUFNO1FBQ0pOLE1BQU1PO1FBQ05ILFVBQVU7SUFDWjtJQUNBSSxZQUFZO1FBQ1ZSLE1BQU1TO1FBQ05DLFNBQVM7SUFDWDtJQUNBQyxjQUFjO1FBQ1pYLE1BQU1ZO1FBQ05SLFVBQVU7SUFDWjtJQUNBUyxhQUFhO1FBQ1hiLE1BQU1ZO1FBQ05SLFVBQVU7SUFDWjtBQUNGLEdBQUc7SUFDRFUsWUFBWTtBQUNkO0FBRUEseUJBQXlCO0FBQ3pCaEIsbUJBQW1CTyxLQUFLLENBQUM7SUFBRU4sUUFBUTtJQUFHTyxNQUFNO0FBQUUsR0FBRztJQUFFUyxRQUFRO0FBQUs7QUFFaEUsMkJBQTJCO0FBQzNCakIsbUJBQW1CTyxLQUFLLENBQUM7SUFBRUMsTUFBTTtBQUFFO0FBRW5DLE1BQU1VLGVBQWVwQix3REFBZSxDQUFDb0IsWUFBWSxJQUFJcEIscURBQWMsQ0FBZ0IsZ0JBQWdCRTtBQUU1RTtBQUN2QixpRUFBZWtCLFlBQVlBLEVBQUEiLCJzb3VyY2VzIjpbIi9tbnQvZi9EYXRhL0dpdC9jbGF1ZGUtY29kZS9heWF1a2UtcGFnZS9heWF1a2UtcGFnZS9zcmMvbW9kZWxzL1VzZXJBY3Rpdml0eS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UsIHsgU2NoZW1hLCBEb2N1bWVudCB9IGZyb20gJ21vbmdvb3NlJ1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJVXNlckFjdGl2aXR5IGV4dGVuZHMgRG9jdW1lbnQge1xyXG4gIHVzZXJJZDogbW9uZ29vc2UuVHlwZXMuT2JqZWN0SWRcclxuICBkYXRlOiBzdHJpbmcgLy8gJ1lZWVktTU0tREQnIO2YleyLnVxyXG4gIHZpc2l0Q291bnQ6IG51bWJlclxyXG4gIGZpcnN0VmlzaXRBdDogRGF0ZVxyXG4gIGxhc3RWaXNpdEF0OiBEYXRlXHJcbiAgY3JlYXRlZEF0OiBEYXRlXHJcbiAgdXBkYXRlZEF0OiBEYXRlXHJcbn1cclxuXHJcbmNvbnN0IFVzZXJBY3Rpdml0eVNjaGVtYSA9IG5ldyBTY2hlbWE8SVVzZXJBY3Rpdml0eT4oe1xyXG4gIHVzZXJJZDoge1xyXG4gICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG4gICAgcmVmOiAnVXNlcicsXHJcbiAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgIGluZGV4OiB0cnVlXHJcbiAgfSxcclxuICBkYXRlOiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICByZXF1aXJlZDogdHJ1ZVxyXG4gIH0sXHJcbiAgdmlzaXRDb3VudDoge1xyXG4gICAgdHlwZTogTnVtYmVyLFxyXG4gICAgZGVmYXVsdDogMVxyXG4gIH0sXHJcbiAgZmlyc3RWaXNpdEF0OiB7XHJcbiAgICB0eXBlOiBEYXRlLFxyXG4gICAgcmVxdWlyZWQ6IHRydWVcclxuICB9LFxyXG4gIGxhc3RWaXNpdEF0OiB7XHJcbiAgICB0eXBlOiBEYXRlLFxyXG4gICAgcmVxdWlyZWQ6IHRydWVcclxuICB9XHJcbn0sIHtcclxuICB0aW1lc3RhbXBzOiB0cnVlXHJcbn0pXHJcblxyXG4vLyDrs7Xtlakg7J24642x7IqkOiDsgqzsmqnsnpDrs4Qg64Kg7KecIOyhsO2ajCDstZzsoIHtmZRcclxuVXNlckFjdGl2aXR5U2NoZW1hLmluZGV4KHsgdXNlcklkOiAxLCBkYXRlOiAxIH0sIHsgdW5pcXVlOiB0cnVlIH0pXHJcblxyXG4vLyDrgqDsp5zrs4Qg7J24642x7IqkOiDsmKTrnpjrkJwg642w7J207YSwIOygleumrCDsi5wg7IKs7JqpXHJcblVzZXJBY3Rpdml0eVNjaGVtYS5pbmRleCh7IGRhdGU6IDEgfSlcclxuXHJcbmNvbnN0IFVzZXJBY3Rpdml0eSA9IG1vbmdvb3NlLm1vZGVscy5Vc2VyQWN0aXZpdHkgfHwgbW9uZ29vc2UubW9kZWw8SVVzZXJBY3Rpdml0eT4oJ1VzZXJBY3Rpdml0eScsIFVzZXJBY3Rpdml0eVNjaGVtYSlcclxuXHJcbmV4cG9ydCB7IFVzZXJBY3Rpdml0eSB9XHJcbmV4cG9ydCBkZWZhdWx0IFVzZXJBY3Rpdml0eSJdLCJuYW1lcyI6WyJtb25nb29zZSIsIlNjaGVtYSIsIlVzZXJBY3Rpdml0eVNjaGVtYSIsInVzZXJJZCIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwicmVxdWlyZWQiLCJpbmRleCIsImRhdGUiLCJTdHJpbmciLCJ2aXNpdENvdW50IiwiTnVtYmVyIiwiZGVmYXVsdCIsImZpcnN0VmlzaXRBdCIsIkRhdGUiLCJsYXN0VmlzaXRBdCIsInRpbWVzdGFtcHMiLCJ1bmlxdWUiLCJVc2VyQWN0aXZpdHkiLCJtb2RlbHMiLCJtb2RlbCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/models/UserActivity.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "?32c4":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?66e9":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("mongoose");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/next-auth","vendor-chunks/@babel","vendor-chunks/jose","vendor-chunks/openid-client","vendor-chunks/ws","vendor-chunks/chzzk","vendor-chunks/oauth","vendor-chunks/preact","vendor-chunks/yallist","vendor-chunks/preact-render-to-string","vendor-chunks/cookie","vendor-chunks/oidc-token-hash","vendor-chunks/@panva","vendor-chunks/isomorphic-ws"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fadmin%2Fsongs%2Froute&page=%2Fapi%2Fadmin%2Fsongs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fsongs%2Froute.ts&appDir=%2Fmnt%2Ff%2FData%2FGit%2Fclaude-code%2Fayauke-page%2Fayauke-page%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fmnt%2Ff%2FData%2FGit%2Fclaude-code%2Fayauke-page%2Fayauke-page&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();